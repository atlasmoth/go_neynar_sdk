/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the FrameValidateAnalyticsTotalInteractors type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FrameValidateAnalyticsTotalInteractors{}

// FrameValidateAnalyticsTotalInteractors struct for FrameValidateAnalyticsTotalInteractors
type FrameValidateAnalyticsTotalInteractors struct {
	TotalInteractors float32 `json:"total_interactors"`
}

type _FrameValidateAnalyticsTotalInteractors FrameValidateAnalyticsTotalInteractors

// NewFrameValidateAnalyticsTotalInteractors instantiates a new FrameValidateAnalyticsTotalInteractors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFrameValidateAnalyticsTotalInteractors(totalInteractors float32) *FrameValidateAnalyticsTotalInteractors {
	this := FrameValidateAnalyticsTotalInteractors{}
	this.TotalInteractors = totalInteractors
	return &this
}

// NewFrameValidateAnalyticsTotalInteractorsWithDefaults instantiates a new FrameValidateAnalyticsTotalInteractors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFrameValidateAnalyticsTotalInteractorsWithDefaults() *FrameValidateAnalyticsTotalInteractors {
	this := FrameValidateAnalyticsTotalInteractors{}
	return &this
}

// GetTotalInteractors returns the TotalInteractors field value
func (o *FrameValidateAnalyticsTotalInteractors) GetTotalInteractors() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalInteractors
}

// GetTotalInteractorsOk returns a tuple with the TotalInteractors field value
// and a boolean to check if the value has been set.
func (o *FrameValidateAnalyticsTotalInteractors) GetTotalInteractorsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalInteractors, true
}

// SetTotalInteractors sets field value
func (o *FrameValidateAnalyticsTotalInteractors) SetTotalInteractors(v float32) {
	o.TotalInteractors = v
}

func (o FrameValidateAnalyticsTotalInteractors) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FrameValidateAnalyticsTotalInteractors) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["total_interactors"] = o.TotalInteractors
	return toSerialize, nil
}

func (o *FrameValidateAnalyticsTotalInteractors) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"total_interactors",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFrameValidateAnalyticsTotalInteractors := _FrameValidateAnalyticsTotalInteractors{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFrameValidateAnalyticsTotalInteractors)

	if err != nil {
		return err
	}

	*o = FrameValidateAnalyticsTotalInteractors(varFrameValidateAnalyticsTotalInteractors)

	return err
}

type NullableFrameValidateAnalyticsTotalInteractors struct {
	value *FrameValidateAnalyticsTotalInteractors
	isSet bool
}

func (v NullableFrameValidateAnalyticsTotalInteractors) Get() *FrameValidateAnalyticsTotalInteractors {
	return v.value
}

func (v *NullableFrameValidateAnalyticsTotalInteractors) Set(val *FrameValidateAnalyticsTotalInteractors) {
	v.value = val
	v.isSet = true
}

func (v NullableFrameValidateAnalyticsTotalInteractors) IsSet() bool {
	return v.isSet
}

func (v *NullableFrameValidateAnalyticsTotalInteractors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFrameValidateAnalyticsTotalInteractors(val *FrameValidateAnalyticsTotalInteractors) *NullableFrameValidateAnalyticsTotalInteractors {
	return &NullableFrameValidateAnalyticsTotalInteractors{value: val, isSet: true}
}

func (v NullableFrameValidateAnalyticsTotalInteractors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFrameValidateAnalyticsTotalInteractors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
