/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ChannelActivity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelActivity{}

// ChannelActivity struct for ChannelActivity
type ChannelActivity struct {
	Object       string  `json:"object"`
	CastCount1d  string  `json:"cast_count_1d"`
	CastCount7d  string  `json:"cast_count_7d"`
	CastCount30d string  `json:"cast_count_30d"`
	Channel      Channel `json:"channel"`
}

type _ChannelActivity ChannelActivity

// NewChannelActivity instantiates a new ChannelActivity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelActivity(object string, castCount1d string, castCount7d string, castCount30d string, channel Channel) *ChannelActivity {
	this := ChannelActivity{}
	this.Object = object
	this.CastCount1d = castCount1d
	this.CastCount7d = castCount7d
	this.CastCount30d = castCount30d
	this.Channel = channel
	return &this
}

// NewChannelActivityWithDefaults instantiates a new ChannelActivity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelActivityWithDefaults() *ChannelActivity {
	this := ChannelActivity{}
	return &this
}

// GetObject returns the Object field value
func (o *ChannelActivity) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *ChannelActivity) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *ChannelActivity) SetObject(v string) {
	o.Object = v
}

// GetCastCount1d returns the CastCount1d field value
func (o *ChannelActivity) GetCastCount1d() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CastCount1d
}

// GetCastCount1dOk returns a tuple with the CastCount1d field value
// and a boolean to check if the value has been set.
func (o *ChannelActivity) GetCastCount1dOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CastCount1d, true
}

// SetCastCount1d sets field value
func (o *ChannelActivity) SetCastCount1d(v string) {
	o.CastCount1d = v
}

// GetCastCount7d returns the CastCount7d field value
func (o *ChannelActivity) GetCastCount7d() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CastCount7d
}

// GetCastCount7dOk returns a tuple with the CastCount7d field value
// and a boolean to check if the value has been set.
func (o *ChannelActivity) GetCastCount7dOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CastCount7d, true
}

// SetCastCount7d sets field value
func (o *ChannelActivity) SetCastCount7d(v string) {
	o.CastCount7d = v
}

// GetCastCount30d returns the CastCount30d field value
func (o *ChannelActivity) GetCastCount30d() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CastCount30d
}

// GetCastCount30dOk returns a tuple with the CastCount30d field value
// and a boolean to check if the value has been set.
func (o *ChannelActivity) GetCastCount30dOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CastCount30d, true
}

// SetCastCount30d sets field value
func (o *ChannelActivity) SetCastCount30d(v string) {
	o.CastCount30d = v
}

// GetChannel returns the Channel field value
func (o *ChannelActivity) GetChannel() Channel {
	if o == nil {
		var ret Channel
		return ret
	}

	return o.Channel
}

// GetChannelOk returns a tuple with the Channel field value
// and a boolean to check if the value has been set.
func (o *ChannelActivity) GetChannelOk() (*Channel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Channel, true
}

// SetChannel sets field value
func (o *ChannelActivity) SetChannel(v Channel) {
	o.Channel = v
}

func (o ChannelActivity) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelActivity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["object"] = o.Object
	toSerialize["cast_count_1d"] = o.CastCount1d
	toSerialize["cast_count_7d"] = o.CastCount7d
	toSerialize["cast_count_30d"] = o.CastCount30d
	toSerialize["channel"] = o.Channel
	return toSerialize, nil
}

func (o *ChannelActivity) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"object",
		"cast_count_1d",
		"cast_count_7d",
		"cast_count_30d",
		"channel",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChannelActivity := _ChannelActivity{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varChannelActivity)

	if err != nil {
		return err
	}

	*o = ChannelActivity(varChannelActivity)

	return err
}

type NullableChannelActivity struct {
	value *ChannelActivity
	isSet bool
}

func (v NullableChannelActivity) Get() *ChannelActivity {
	return v.value
}

func (v *NullableChannelActivity) Set(val *ChannelActivity) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelActivity) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelActivity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelActivity(val *ChannelActivity) *NullableChannelActivity {
	return &NullableChannelActivity{value: val, isSet: true}
}

func (v NullableChannelActivity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelActivity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
