/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FrameSignaturePacketTrustedData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FrameSignaturePacketTrustedData{}

// FrameSignaturePacketTrustedData Trusted data from the user
type FrameSignaturePacketTrustedData struct {
	// Message bytes
	MessageBytes *string `json:"messageBytes,omitempty"`
}

// NewFrameSignaturePacketTrustedData instantiates a new FrameSignaturePacketTrustedData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFrameSignaturePacketTrustedData() *FrameSignaturePacketTrustedData {
	this := FrameSignaturePacketTrustedData{}
	return &this
}

// NewFrameSignaturePacketTrustedDataWithDefaults instantiates a new FrameSignaturePacketTrustedData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFrameSignaturePacketTrustedDataWithDefaults() *FrameSignaturePacketTrustedData {
	this := FrameSignaturePacketTrustedData{}
	return &this
}

// GetMessageBytes returns the MessageBytes field value if set, zero value otherwise.
func (o *FrameSignaturePacketTrustedData) GetMessageBytes() string {
	if o == nil || IsNil(o.MessageBytes) {
		var ret string
		return ret
	}
	return *o.MessageBytes
}

// GetMessageBytesOk returns a tuple with the MessageBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameSignaturePacketTrustedData) GetMessageBytesOk() (*string, bool) {
	if o == nil || IsNil(o.MessageBytes) {
		return nil, false
	}
	return o.MessageBytes, true
}

// HasMessageBytes returns a boolean if a field has been set.
func (o *FrameSignaturePacketTrustedData) HasMessageBytes() bool {
	if o != nil && !IsNil(o.MessageBytes) {
		return true
	}

	return false
}

// SetMessageBytes gets a reference to the given string and assigns it to the MessageBytes field.
func (o *FrameSignaturePacketTrustedData) SetMessageBytes(v string) {
	o.MessageBytes = &v
}

func (o FrameSignaturePacketTrustedData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FrameSignaturePacketTrustedData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MessageBytes) {
		toSerialize["messageBytes"] = o.MessageBytes
	}
	return toSerialize, nil
}

type NullableFrameSignaturePacketTrustedData struct {
	value *FrameSignaturePacketTrustedData
	isSet bool
}

func (v NullableFrameSignaturePacketTrustedData) Get() *FrameSignaturePacketTrustedData {
	return v.value
}

func (v *NullableFrameSignaturePacketTrustedData) Set(val *FrameSignaturePacketTrustedData) {
	v.value = val
	v.isSet = true
}

func (v NullableFrameSignaturePacketTrustedData) IsSet() bool {
	return v.isSet
}

func (v *NullableFrameSignaturePacketTrustedData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFrameSignaturePacketTrustedData(val *FrameSignaturePacketTrustedData) *NullableFrameSignaturePacketTrustedData {
	return &NullableFrameSignaturePacketTrustedData{value: val, isSet: true}
}

func (v NullableFrameSignaturePacketTrustedData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFrameSignaturePacketTrustedData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
