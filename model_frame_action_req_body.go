/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the FrameActionReqBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FrameActionReqBody{}

// FrameActionReqBody struct for FrameActionReqBody
type FrameActionReqBody struct {
	// UUID of the signer
	SignerUuid string `json:"signer_uuid"`
	// Cast Hash
	CastHash *string     `json:"cast_hash,omitempty"`
	Action   FrameAction `json:"action"`
}

type _FrameActionReqBody FrameActionReqBody

// NewFrameActionReqBody instantiates a new FrameActionReqBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFrameActionReqBody(signerUuid string, action FrameAction) *FrameActionReqBody {
	this := FrameActionReqBody{}
	this.SignerUuid = signerUuid
	var castHash string = "0xfe90f9de682273e05b201629ad2338bdcd89b6be"
	this.CastHash = &castHash
	this.Action = action
	return &this
}

// NewFrameActionReqBodyWithDefaults instantiates a new FrameActionReqBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFrameActionReqBodyWithDefaults() *FrameActionReqBody {
	this := FrameActionReqBody{}
	var castHash string = "0xfe90f9de682273e05b201629ad2338bdcd89b6be"
	this.CastHash = &castHash
	return &this
}

// GetSignerUuid returns the SignerUuid field value
func (o *FrameActionReqBody) GetSignerUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SignerUuid
}

// GetSignerUuidOk returns a tuple with the SignerUuid field value
// and a boolean to check if the value has been set.
func (o *FrameActionReqBody) GetSignerUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignerUuid, true
}

// SetSignerUuid sets field value
func (o *FrameActionReqBody) SetSignerUuid(v string) {
	o.SignerUuid = v
}

// GetCastHash returns the CastHash field value if set, zero value otherwise.
func (o *FrameActionReqBody) GetCastHash() string {
	if o == nil || IsNil(o.CastHash) {
		var ret string
		return ret
	}
	return *o.CastHash
}

// GetCastHashOk returns a tuple with the CastHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameActionReqBody) GetCastHashOk() (*string, bool) {
	if o == nil || IsNil(o.CastHash) {
		return nil, false
	}
	return o.CastHash, true
}

// HasCastHash returns a boolean if a field has been set.
func (o *FrameActionReqBody) HasCastHash() bool {
	if o != nil && !IsNil(o.CastHash) {
		return true
	}

	return false
}

// SetCastHash gets a reference to the given string and assigns it to the CastHash field.
func (o *FrameActionReqBody) SetCastHash(v string) {
	o.CastHash = &v
}

// GetAction returns the Action field value
func (o *FrameActionReqBody) GetAction() FrameAction {
	if o == nil {
		var ret FrameAction
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *FrameActionReqBody) GetActionOk() (*FrameAction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *FrameActionReqBody) SetAction(v FrameAction) {
	o.Action = v
}

func (o FrameActionReqBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FrameActionReqBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["signer_uuid"] = o.SignerUuid
	if !IsNil(o.CastHash) {
		toSerialize["cast_hash"] = o.CastHash
	}
	toSerialize["action"] = o.Action
	return toSerialize, nil
}

func (o *FrameActionReqBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"signer_uuid",
		"action",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFrameActionReqBody := _FrameActionReqBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFrameActionReqBody)

	if err != nil {
		return err
	}

	*o = FrameActionReqBody(varFrameActionReqBody)

	return err
}

type NullableFrameActionReqBody struct {
	value *FrameActionReqBody
	isSet bool
}

func (v NullableFrameActionReqBody) Get() *FrameActionReqBody {
	return v.value
}

func (v *NullableFrameActionReqBody) Set(val *FrameActionReqBody) {
	v.value = val
	v.isSet = true
}

func (v NullableFrameActionReqBody) IsSet() bool {
	return v.isSet
}

func (v *NullableFrameActionReqBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFrameActionReqBody(val *FrameActionReqBody) *NullableFrameActionReqBody {
	return &NullableFrameActionReqBody{value: val, isSet: true}
}

func (v NullableFrameActionReqBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFrameActionReqBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
