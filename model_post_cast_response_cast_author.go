/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostCastResponseCastAuthor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostCastResponseCastAuthor{}

// PostCastResponseCastAuthor struct for PostCastResponseCastAuthor
type PostCastResponseCastAuthor struct {
	// User identifier (unsigned integer)
	Fid int32 `json:"fid"`
}

type _PostCastResponseCastAuthor PostCastResponseCastAuthor

// NewPostCastResponseCastAuthor instantiates a new PostCastResponseCastAuthor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostCastResponseCastAuthor(fid int32) *PostCastResponseCastAuthor {
	this := PostCastResponseCastAuthor{}
	this.Fid = fid
	return &this
}

// NewPostCastResponseCastAuthorWithDefaults instantiates a new PostCastResponseCastAuthor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostCastResponseCastAuthorWithDefaults() *PostCastResponseCastAuthor {
	this := PostCastResponseCastAuthor{}
	return &this
}

// GetFid returns the Fid field value
func (o *PostCastResponseCastAuthor) GetFid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Fid
}

// GetFidOk returns a tuple with the Fid field value
// and a boolean to check if the value has been set.
func (o *PostCastResponseCastAuthor) GetFidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fid, true
}

// SetFid sets field value
func (o *PostCastResponseCastAuthor) SetFid(v int32) {
	o.Fid = v
}

func (o PostCastResponseCastAuthor) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostCastResponseCastAuthor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["fid"] = o.Fid
	return toSerialize, nil
}

func (o *PostCastResponseCastAuthor) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostCastResponseCastAuthor := _PostCastResponseCastAuthor{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostCastResponseCastAuthor)

	if err != nil {
		return err
	}

	*o = PostCastResponseCastAuthor(varPostCastResponseCastAuthor)

	return err
}

type NullablePostCastResponseCastAuthor struct {
	value *PostCastResponseCastAuthor
	isSet bool
}

func (v NullablePostCastResponseCastAuthor) Get() *PostCastResponseCastAuthor {
	return v.value
}

func (v *NullablePostCastResponseCastAuthor) Set(val *PostCastResponseCastAuthor) {
	v.value = val
	v.isSet = true
}

func (v NullablePostCastResponseCastAuthor) IsSet() bool {
	return v.isSet
}

func (v *NullablePostCastResponseCastAuthor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostCastResponseCastAuthor(val *PostCastResponseCastAuthor) *NullablePostCastResponseCastAuthor {
	return &NullablePostCastResponseCastAuthor{value: val, isSet: true}
}

func (v NullablePostCastResponseCastAuthor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostCastResponseCastAuthor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


