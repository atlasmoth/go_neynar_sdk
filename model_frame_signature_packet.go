/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FrameSignaturePacket type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FrameSignaturePacket{}

// FrameSignaturePacket The Frame Signature Packet (https://docs.farcaster.xyz/developers/frames/spec#frame-signature-packet)
type FrameSignaturePacket struct {
	UntrustedData FrameSignaturePacketUntrustedData `json:"untrustedData"`
	TrustedData FrameSignaturePacketTrustedData `json:"trustedData"`
}

type _FrameSignaturePacket FrameSignaturePacket

// NewFrameSignaturePacket instantiates a new FrameSignaturePacket object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFrameSignaturePacket(untrustedData FrameSignaturePacketUntrustedData, trustedData FrameSignaturePacketTrustedData) *FrameSignaturePacket {
	this := FrameSignaturePacket{}
	this.UntrustedData = untrustedData
	this.TrustedData = trustedData
	return &this
}

// NewFrameSignaturePacketWithDefaults instantiates a new FrameSignaturePacket object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFrameSignaturePacketWithDefaults() *FrameSignaturePacket {
	this := FrameSignaturePacket{}
	return &this
}

// GetUntrustedData returns the UntrustedData field value
func (o *FrameSignaturePacket) GetUntrustedData() FrameSignaturePacketUntrustedData {
	if o == nil {
		var ret FrameSignaturePacketUntrustedData
		return ret
	}

	return o.UntrustedData
}

// GetUntrustedDataOk returns a tuple with the UntrustedData field value
// and a boolean to check if the value has been set.
func (o *FrameSignaturePacket) GetUntrustedDataOk() (*FrameSignaturePacketUntrustedData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UntrustedData, true
}

// SetUntrustedData sets field value
func (o *FrameSignaturePacket) SetUntrustedData(v FrameSignaturePacketUntrustedData) {
	o.UntrustedData = v
}

// GetTrustedData returns the TrustedData field value
func (o *FrameSignaturePacket) GetTrustedData() FrameSignaturePacketTrustedData {
	if o == nil {
		var ret FrameSignaturePacketTrustedData
		return ret
	}

	return o.TrustedData
}

// GetTrustedDataOk returns a tuple with the TrustedData field value
// and a boolean to check if the value has been set.
func (o *FrameSignaturePacket) GetTrustedDataOk() (*FrameSignaturePacketTrustedData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TrustedData, true
}

// SetTrustedData sets field value
func (o *FrameSignaturePacket) SetTrustedData(v FrameSignaturePacketTrustedData) {
	o.TrustedData = v
}

func (o FrameSignaturePacket) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FrameSignaturePacket) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["untrustedData"] = o.UntrustedData
	toSerialize["trustedData"] = o.TrustedData
	return toSerialize, nil
}

func (o *FrameSignaturePacket) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"untrustedData",
		"trustedData",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFrameSignaturePacket := _FrameSignaturePacket{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFrameSignaturePacket)

	if err != nil {
		return err
	}

	*o = FrameSignaturePacket(varFrameSignaturePacket)

	return err
}

type NullableFrameSignaturePacket struct {
	value *FrameSignaturePacket
	isSet bool
}

func (v NullableFrameSignaturePacket) Get() *FrameSignaturePacket {
	return v.value
}

func (v *NullableFrameSignaturePacket) Set(val *FrameSignaturePacket) {
	v.value = val
	v.isSet = true
}

func (v NullableFrameSignaturePacket) IsSet() bool {
	return v.isSet
}

func (v *NullableFrameSignaturePacket) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFrameSignaturePacket(val *FrameSignaturePacket) *NullableFrameSignaturePacket {
	return &NullableFrameSignaturePacket{value: val, isSet: true}
}

func (v NullableFrameSignaturePacket) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFrameSignaturePacket) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


