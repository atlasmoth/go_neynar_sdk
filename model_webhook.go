/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the Webhook type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Webhook{}

// Webhook struct for Webhook
type Webhook struct {
	Object string `json:"object"`
	WebhookId string `json:"webhook_id"`
	DeveloperUuid string `json:"developer_uuid"`
	TargetUrl string `json:"target_url"`
	Title string `json:"title"`
	Secrets []WebhookSecret `json:"secrets"`
	Description string `json:"description"`
	HttpTimeout string `json:"http_timeout"`
	RateLimit int32 `json:"rate_limit"`
	Active bool `json:"active"`
	RateLimitDuration string `json:"rate_limit_duration"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	DeletedAt time.Time `json:"deleted_at"`
	Subscription *WebhookSubscription `json:"subscription,omitempty"`
}

type _Webhook Webhook

// NewWebhook instantiates a new Webhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhook(object string, webhookId string, developerUuid string, targetUrl string, title string, secrets []WebhookSecret, description string, httpTimeout string, rateLimit int32, active bool, rateLimitDuration string, createdAt time.Time, updatedAt time.Time, deletedAt time.Time) *Webhook {
	this := Webhook{}
	this.Object = object
	this.WebhookId = webhookId
	this.DeveloperUuid = developerUuid
	this.TargetUrl = targetUrl
	this.Title = title
	this.Secrets = secrets
	this.Description = description
	this.HttpTimeout = httpTimeout
	this.RateLimit = rateLimit
	this.Active = active
	this.RateLimitDuration = rateLimitDuration
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.DeletedAt = deletedAt
	return &this
}

// NewWebhookWithDefaults instantiates a new Webhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookWithDefaults() *Webhook {
	this := Webhook{}
	return &this
}

// GetObject returns the Object field value
func (o *Webhook) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *Webhook) SetObject(v string) {
	o.Object = v
}

// GetWebhookId returns the WebhookId field value
func (o *Webhook) GetWebhookId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookId
}

// GetWebhookIdOk returns a tuple with the WebhookId field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetWebhookIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WebhookId, true
}

// SetWebhookId sets field value
func (o *Webhook) SetWebhookId(v string) {
	o.WebhookId = v
}

// GetDeveloperUuid returns the DeveloperUuid field value
func (o *Webhook) GetDeveloperUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeveloperUuid
}

// GetDeveloperUuidOk returns a tuple with the DeveloperUuid field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetDeveloperUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeveloperUuid, true
}

// SetDeveloperUuid sets field value
func (o *Webhook) SetDeveloperUuid(v string) {
	o.DeveloperUuid = v
}

// GetTargetUrl returns the TargetUrl field value
func (o *Webhook) GetTargetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetUrl
}

// GetTargetUrlOk returns a tuple with the TargetUrl field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetTargetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetUrl, true
}

// SetTargetUrl sets field value
func (o *Webhook) SetTargetUrl(v string) {
	o.TargetUrl = v
}

// GetTitle returns the Title field value
func (o *Webhook) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *Webhook) SetTitle(v string) {
	o.Title = v
}

// GetSecrets returns the Secrets field value
func (o *Webhook) GetSecrets() []WebhookSecret {
	if o == nil {
		var ret []WebhookSecret
		return ret
	}

	return o.Secrets
}

// GetSecretsOk returns a tuple with the Secrets field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetSecretsOk() ([]WebhookSecret, bool) {
	if o == nil {
		return nil, false
	}
	return o.Secrets, true
}

// SetSecrets sets field value
func (o *Webhook) SetSecrets(v []WebhookSecret) {
	o.Secrets = v
}

// GetDescription returns the Description field value
func (o *Webhook) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *Webhook) SetDescription(v string) {
	o.Description = v
}

// GetHttpTimeout returns the HttpTimeout field value
func (o *Webhook) GetHttpTimeout() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HttpTimeout
}

// GetHttpTimeoutOk returns a tuple with the HttpTimeout field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetHttpTimeoutOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HttpTimeout, true
}

// SetHttpTimeout sets field value
func (o *Webhook) SetHttpTimeout(v string) {
	o.HttpTimeout = v
}

// GetRateLimit returns the RateLimit field value
func (o *Webhook) GetRateLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RateLimit
}

// GetRateLimitOk returns a tuple with the RateLimit field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetRateLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RateLimit, true
}

// SetRateLimit sets field value
func (o *Webhook) SetRateLimit(v int32) {
	o.RateLimit = v
}

// GetActive returns the Active field value
func (o *Webhook) GetActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Active
}

// GetActiveOk returns a tuple with the Active field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Active, true
}

// SetActive sets field value
func (o *Webhook) SetActive(v bool) {
	o.Active = v
}

// GetRateLimitDuration returns the RateLimitDuration field value
func (o *Webhook) GetRateLimitDuration() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RateLimitDuration
}

// GetRateLimitDurationOk returns a tuple with the RateLimitDuration field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetRateLimitDurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RateLimitDuration, true
}

// SetRateLimitDuration sets field value
func (o *Webhook) SetRateLimitDuration(v string) {
	o.RateLimitDuration = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Webhook) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Webhook) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Webhook) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Webhook) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetDeletedAt returns the DeletedAt field value
func (o *Webhook) GetDeletedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeletedAt, true
}

// SetDeletedAt sets field value
func (o *Webhook) SetDeletedAt(v time.Time) {
	o.DeletedAt = v
}

// GetSubscription returns the Subscription field value if set, zero value otherwise.
func (o *Webhook) GetSubscription() WebhookSubscription {
	if o == nil || IsNil(o.Subscription) {
		var ret WebhookSubscription
		return ret
	}
	return *o.Subscription
}

// GetSubscriptionOk returns a tuple with the Subscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhook) GetSubscriptionOk() (*WebhookSubscription, bool) {
	if o == nil || IsNil(o.Subscription) {
		return nil, false
	}
	return o.Subscription, true
}

// HasSubscription returns a boolean if a field has been set.
func (o *Webhook) HasSubscription() bool {
	if o != nil && !IsNil(o.Subscription) {
		return true
	}

	return false
}

// SetSubscription gets a reference to the given WebhookSubscription and assigns it to the Subscription field.
func (o *Webhook) SetSubscription(v WebhookSubscription) {
	o.Subscription = &v
}

func (o Webhook) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Webhook) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["object"] = o.Object
	toSerialize["webhook_id"] = o.WebhookId
	toSerialize["developer_uuid"] = o.DeveloperUuid
	toSerialize["target_url"] = o.TargetUrl
	toSerialize["title"] = o.Title
	toSerialize["secrets"] = o.Secrets
	toSerialize["description"] = o.Description
	toSerialize["http_timeout"] = o.HttpTimeout
	toSerialize["rate_limit"] = o.RateLimit
	toSerialize["active"] = o.Active
	toSerialize["rate_limit_duration"] = o.RateLimitDuration
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["deleted_at"] = o.DeletedAt
	if !IsNil(o.Subscription) {
		toSerialize["subscription"] = o.Subscription
	}
	return toSerialize, nil
}

func (o *Webhook) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"object",
		"webhook_id",
		"developer_uuid",
		"target_url",
		"title",
		"secrets",
		"description",
		"http_timeout",
		"rate_limit",
		"active",
		"rate_limit_duration",
		"created_at",
		"updated_at",
		"deleted_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhook := _Webhook{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebhook)

	if err != nil {
		return err
	}

	*o = Webhook(varWebhook)

	return err
}

type NullableWebhook struct {
	value *Webhook
	isSet bool
}

func (v NullableWebhook) Get() *Webhook {
	return v.value
}

func (v *NullableWebhook) Set(val *Webhook) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhook(val *Webhook) *NullableWebhook {
	return &NullableWebhook{value: val, isSet: true}
}

func (v NullableWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


