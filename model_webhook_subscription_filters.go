/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the WebhookSubscriptionFilters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookSubscriptionFilters{}

// WebhookSubscriptionFilters struct for WebhookSubscriptionFilters
type WebhookSubscriptionFilters struct {
	CastCreated *WebhookSubscriptionFiltersCastCreated `json:"cast.created,omitempty"`
	UserCreated map[string]interface{} `json:"user.created,omitempty"`
	UserUpdated *WebhookSubscriptionFiltersUserUpdated `json:"user.updated,omitempty"`
	FollowCreated *WebhookSubscriptionFiltersFollow `json:"follow.created,omitempty"`
	FollowDeleted *WebhookSubscriptionFiltersFollow `json:"follow.deleted,omitempty"`
	ReactionCreated *WebhookSubscriptionFiltersReaction `json:"reaction.created,omitempty"`
	ReactionDeleted *WebhookSubscriptionFiltersReaction `json:"reaction.deleted,omitempty"`
}

// NewWebhookSubscriptionFilters instantiates a new WebhookSubscriptionFilters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookSubscriptionFilters() *WebhookSubscriptionFilters {
	this := WebhookSubscriptionFilters{}
	return &this
}

// NewWebhookSubscriptionFiltersWithDefaults instantiates a new WebhookSubscriptionFilters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookSubscriptionFiltersWithDefaults() *WebhookSubscriptionFilters {
	this := WebhookSubscriptionFilters{}
	return &this
}

// GetCastCreated returns the CastCreated field value if set, zero value otherwise.
func (o *WebhookSubscriptionFilters) GetCastCreated() WebhookSubscriptionFiltersCastCreated {
	if o == nil || IsNil(o.CastCreated) {
		var ret WebhookSubscriptionFiltersCastCreated
		return ret
	}
	return *o.CastCreated
}

// GetCastCreatedOk returns a tuple with the CastCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookSubscriptionFilters) GetCastCreatedOk() (*WebhookSubscriptionFiltersCastCreated, bool) {
	if o == nil || IsNil(o.CastCreated) {
		return nil, false
	}
	return o.CastCreated, true
}

// HasCastCreated returns a boolean if a field has been set.
func (o *WebhookSubscriptionFilters) HasCastCreated() bool {
	if o != nil && !IsNil(o.CastCreated) {
		return true
	}

	return false
}

// SetCastCreated gets a reference to the given WebhookSubscriptionFiltersCastCreated and assigns it to the CastCreated field.
func (o *WebhookSubscriptionFilters) SetCastCreated(v WebhookSubscriptionFiltersCastCreated) {
	o.CastCreated = &v
}

// GetUserCreated returns the UserCreated field value if set, zero value otherwise.
func (o *WebhookSubscriptionFilters) GetUserCreated() map[string]interface{} {
	if o == nil || IsNil(o.UserCreated) {
		var ret map[string]interface{}
		return ret
	}
	return o.UserCreated
}

// GetUserCreatedOk returns a tuple with the UserCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookSubscriptionFilters) GetUserCreatedOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.UserCreated) {
		return map[string]interface{}{}, false
	}
	return o.UserCreated, true
}

// HasUserCreated returns a boolean if a field has been set.
func (o *WebhookSubscriptionFilters) HasUserCreated() bool {
	if o != nil && !IsNil(o.UserCreated) {
		return true
	}

	return false
}

// SetUserCreated gets a reference to the given map[string]interface{} and assigns it to the UserCreated field.
func (o *WebhookSubscriptionFilters) SetUserCreated(v map[string]interface{}) {
	o.UserCreated = v
}

// GetUserUpdated returns the UserUpdated field value if set, zero value otherwise.
func (o *WebhookSubscriptionFilters) GetUserUpdated() WebhookSubscriptionFiltersUserUpdated {
	if o == nil || IsNil(o.UserUpdated) {
		var ret WebhookSubscriptionFiltersUserUpdated
		return ret
	}
	return *o.UserUpdated
}

// GetUserUpdatedOk returns a tuple with the UserUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookSubscriptionFilters) GetUserUpdatedOk() (*WebhookSubscriptionFiltersUserUpdated, bool) {
	if o == nil || IsNil(o.UserUpdated) {
		return nil, false
	}
	return o.UserUpdated, true
}

// HasUserUpdated returns a boolean if a field has been set.
func (o *WebhookSubscriptionFilters) HasUserUpdated() bool {
	if o != nil && !IsNil(o.UserUpdated) {
		return true
	}

	return false
}

// SetUserUpdated gets a reference to the given WebhookSubscriptionFiltersUserUpdated and assigns it to the UserUpdated field.
func (o *WebhookSubscriptionFilters) SetUserUpdated(v WebhookSubscriptionFiltersUserUpdated) {
	o.UserUpdated = &v
}

// GetFollowCreated returns the FollowCreated field value if set, zero value otherwise.
func (o *WebhookSubscriptionFilters) GetFollowCreated() WebhookSubscriptionFiltersFollow {
	if o == nil || IsNil(o.FollowCreated) {
		var ret WebhookSubscriptionFiltersFollow
		return ret
	}
	return *o.FollowCreated
}

// GetFollowCreatedOk returns a tuple with the FollowCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookSubscriptionFilters) GetFollowCreatedOk() (*WebhookSubscriptionFiltersFollow, bool) {
	if o == nil || IsNil(o.FollowCreated) {
		return nil, false
	}
	return o.FollowCreated, true
}

// HasFollowCreated returns a boolean if a field has been set.
func (o *WebhookSubscriptionFilters) HasFollowCreated() bool {
	if o != nil && !IsNil(o.FollowCreated) {
		return true
	}

	return false
}

// SetFollowCreated gets a reference to the given WebhookSubscriptionFiltersFollow and assigns it to the FollowCreated field.
func (o *WebhookSubscriptionFilters) SetFollowCreated(v WebhookSubscriptionFiltersFollow) {
	o.FollowCreated = &v
}

// GetFollowDeleted returns the FollowDeleted field value if set, zero value otherwise.
func (o *WebhookSubscriptionFilters) GetFollowDeleted() WebhookSubscriptionFiltersFollow {
	if o == nil || IsNil(o.FollowDeleted) {
		var ret WebhookSubscriptionFiltersFollow
		return ret
	}
	return *o.FollowDeleted
}

// GetFollowDeletedOk returns a tuple with the FollowDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookSubscriptionFilters) GetFollowDeletedOk() (*WebhookSubscriptionFiltersFollow, bool) {
	if o == nil || IsNil(o.FollowDeleted) {
		return nil, false
	}
	return o.FollowDeleted, true
}

// HasFollowDeleted returns a boolean if a field has been set.
func (o *WebhookSubscriptionFilters) HasFollowDeleted() bool {
	if o != nil && !IsNil(o.FollowDeleted) {
		return true
	}

	return false
}

// SetFollowDeleted gets a reference to the given WebhookSubscriptionFiltersFollow and assigns it to the FollowDeleted field.
func (o *WebhookSubscriptionFilters) SetFollowDeleted(v WebhookSubscriptionFiltersFollow) {
	o.FollowDeleted = &v
}

// GetReactionCreated returns the ReactionCreated field value if set, zero value otherwise.
func (o *WebhookSubscriptionFilters) GetReactionCreated() WebhookSubscriptionFiltersReaction {
	if o == nil || IsNil(o.ReactionCreated) {
		var ret WebhookSubscriptionFiltersReaction
		return ret
	}
	return *o.ReactionCreated
}

// GetReactionCreatedOk returns a tuple with the ReactionCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookSubscriptionFilters) GetReactionCreatedOk() (*WebhookSubscriptionFiltersReaction, bool) {
	if o == nil || IsNil(o.ReactionCreated) {
		return nil, false
	}
	return o.ReactionCreated, true
}

// HasReactionCreated returns a boolean if a field has been set.
func (o *WebhookSubscriptionFilters) HasReactionCreated() bool {
	if o != nil && !IsNil(o.ReactionCreated) {
		return true
	}

	return false
}

// SetReactionCreated gets a reference to the given WebhookSubscriptionFiltersReaction and assigns it to the ReactionCreated field.
func (o *WebhookSubscriptionFilters) SetReactionCreated(v WebhookSubscriptionFiltersReaction) {
	o.ReactionCreated = &v
}

// GetReactionDeleted returns the ReactionDeleted field value if set, zero value otherwise.
func (o *WebhookSubscriptionFilters) GetReactionDeleted() WebhookSubscriptionFiltersReaction {
	if o == nil || IsNil(o.ReactionDeleted) {
		var ret WebhookSubscriptionFiltersReaction
		return ret
	}
	return *o.ReactionDeleted
}

// GetReactionDeletedOk returns a tuple with the ReactionDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookSubscriptionFilters) GetReactionDeletedOk() (*WebhookSubscriptionFiltersReaction, bool) {
	if o == nil || IsNil(o.ReactionDeleted) {
		return nil, false
	}
	return o.ReactionDeleted, true
}

// HasReactionDeleted returns a boolean if a field has been set.
func (o *WebhookSubscriptionFilters) HasReactionDeleted() bool {
	if o != nil && !IsNil(o.ReactionDeleted) {
		return true
	}

	return false
}

// SetReactionDeleted gets a reference to the given WebhookSubscriptionFiltersReaction and assigns it to the ReactionDeleted field.
func (o *WebhookSubscriptionFilters) SetReactionDeleted(v WebhookSubscriptionFiltersReaction) {
	o.ReactionDeleted = &v
}

func (o WebhookSubscriptionFilters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookSubscriptionFilters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CastCreated) {
		toSerialize["cast.created"] = o.CastCreated
	}
	if !IsNil(o.UserCreated) {
		toSerialize["user.created"] = o.UserCreated
	}
	if !IsNil(o.UserUpdated) {
		toSerialize["user.updated"] = o.UserUpdated
	}
	if !IsNil(o.FollowCreated) {
		toSerialize["follow.created"] = o.FollowCreated
	}
	if !IsNil(o.FollowDeleted) {
		toSerialize["follow.deleted"] = o.FollowDeleted
	}
	if !IsNil(o.ReactionCreated) {
		toSerialize["reaction.created"] = o.ReactionCreated
	}
	if !IsNil(o.ReactionDeleted) {
		toSerialize["reaction.deleted"] = o.ReactionDeleted
	}
	return toSerialize, nil
}

type NullableWebhookSubscriptionFilters struct {
	value *WebhookSubscriptionFilters
	isSet bool
}

func (v NullableWebhookSubscriptionFilters) Get() *WebhookSubscriptionFilters {
	return v.value
}

func (v *NullableWebhookSubscriptionFilters) Set(val *WebhookSubscriptionFilters) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookSubscriptionFilters) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookSubscriptionFilters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookSubscriptionFilters(val *WebhookSubscriptionFilters) *NullableWebhookSubscriptionFilters {
	return &NullableWebhookSubscriptionFilters{value: val, isSet: true}
}

func (v NullableWebhookSubscriptionFilters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookSubscriptionFilters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


