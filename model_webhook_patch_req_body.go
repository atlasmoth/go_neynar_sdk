/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the WebhookPatchReqBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookPatchReqBody{}

// WebhookPatchReqBody struct for WebhookPatchReqBody
type WebhookPatchReqBody struct {
	WebhookId string `json:"webhook_id"`
	Active    string `json:"active"`
}

type _WebhookPatchReqBody WebhookPatchReqBody

// NewWebhookPatchReqBody instantiates a new WebhookPatchReqBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookPatchReqBody(webhookId string, active string) *WebhookPatchReqBody {
	this := WebhookPatchReqBody{}
	this.WebhookId = webhookId
	this.Active = active
	return &this
}

// NewWebhookPatchReqBodyWithDefaults instantiates a new WebhookPatchReqBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookPatchReqBodyWithDefaults() *WebhookPatchReqBody {
	this := WebhookPatchReqBody{}
	return &this
}

// GetWebhookId returns the WebhookId field value
func (o *WebhookPatchReqBody) GetWebhookId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookId
}

// GetWebhookIdOk returns a tuple with the WebhookId field value
// and a boolean to check if the value has been set.
func (o *WebhookPatchReqBody) GetWebhookIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WebhookId, true
}

// SetWebhookId sets field value
func (o *WebhookPatchReqBody) SetWebhookId(v string) {
	o.WebhookId = v
}

// GetActive returns the Active field value
func (o *WebhookPatchReqBody) GetActive() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Active
}

// GetActiveOk returns a tuple with the Active field value
// and a boolean to check if the value has been set.
func (o *WebhookPatchReqBody) GetActiveOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Active, true
}

// SetActive sets field value
func (o *WebhookPatchReqBody) SetActive(v string) {
	o.Active = v
}

func (o WebhookPatchReqBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookPatchReqBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["webhook_id"] = o.WebhookId
	toSerialize["active"] = o.Active
	return toSerialize, nil
}

func (o *WebhookPatchReqBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"webhook_id",
		"active",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookPatchReqBody := _WebhookPatchReqBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebhookPatchReqBody)

	if err != nil {
		return err
	}

	*o = WebhookPatchReqBody(varWebhookPatchReqBody)

	return err
}

type NullableWebhookPatchReqBody struct {
	value *WebhookPatchReqBody
	isSet bool
}

func (v NullableWebhookPatchReqBody) Get() *WebhookPatchReqBody {
	return v.value
}

func (v *NullableWebhookPatchReqBody) Set(val *WebhookPatchReqBody) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookPatchReqBody) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookPatchReqBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookPatchReqBody(val *WebhookPatchReqBody) *NullableWebhookPatchReqBody {
	return &NullableWebhookPatchReqBody{value: val, isSet: true}
}

func (v NullableWebhookPatchReqBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookPatchReqBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
