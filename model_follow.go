/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the Follow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Follow{}

// Follow struct for Follow
type Follow struct {
	Object string `json:"object"`
	User   User   `json:"user"`
}

type _Follow Follow

// NewFollow instantiates a new Follow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFollow(object string, user User) *Follow {
	this := Follow{}
	this.Object = object
	this.User = user
	return &this
}

// NewFollowWithDefaults instantiates a new Follow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFollowWithDefaults() *Follow {
	this := Follow{}
	return &this
}

// GetObject returns the Object field value
func (o *Follow) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *Follow) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *Follow) SetObject(v string) {
	o.Object = v
}

// GetUser returns the User field value
func (o *Follow) GetUser() User {
	if o == nil {
		var ret User
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *Follow) GetUserOk() (*User, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *Follow) SetUser(v User) {
	o.User = v
}

func (o Follow) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Follow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["object"] = o.Object
	toSerialize["user"] = o.User
	return toSerialize, nil
}

func (o *Follow) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"object",
		"user",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFollow := _Follow{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFollow)

	if err != nil {
		return err
	}

	*o = Follow(varFollow)

	return err
}

type NullableFollow struct {
	value *Follow
	isSet bool
}

func (v NullableFollow) Get() *Follow {
	return v.value
}

func (v *NullableFollow) Set(val *Follow) {
	v.value = val
	v.isSet = true
}

func (v NullableFollow) IsSet() bool {
	return v.isSet
}

func (v *NullableFollow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFollow(val *Follow) *NullableFollow {
	return &NullableFollow{value: val, isSet: true}
}

func (v NullableFollow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFollow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
