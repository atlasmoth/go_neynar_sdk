/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the WebhookSubscription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookSubscription{}

// WebhookSubscription struct for WebhookSubscription
type WebhookSubscription struct {
	Object         string                     `json:"object"`
	SubscriptionId string                     `json:"subscription_id"`
	Filters        WebhookSubscriptionFilters `json:"filters"`
	CreatedAt      time.Time                  `json:"created_at"`
	UpdatedAt      time.Time                  `json:"updated_at"`
}

type _WebhookSubscription WebhookSubscription

// NewWebhookSubscription instantiates a new WebhookSubscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookSubscription(object string, subscriptionId string, filters WebhookSubscriptionFilters, createdAt time.Time, updatedAt time.Time) *WebhookSubscription {
	this := WebhookSubscription{}
	this.Object = object
	this.SubscriptionId = subscriptionId
	this.Filters = filters
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewWebhookSubscriptionWithDefaults instantiates a new WebhookSubscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookSubscriptionWithDefaults() *WebhookSubscription {
	this := WebhookSubscription{}
	return &this
}

// GetObject returns the Object field value
func (o *WebhookSubscription) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *WebhookSubscription) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *WebhookSubscription) SetObject(v string) {
	o.Object = v
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *WebhookSubscription) GetSubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *WebhookSubscription) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionId, true
}

// SetSubscriptionId sets field value
func (o *WebhookSubscription) SetSubscriptionId(v string) {
	o.SubscriptionId = v
}

// GetFilters returns the Filters field value
func (o *WebhookSubscription) GetFilters() WebhookSubscriptionFilters {
	if o == nil {
		var ret WebhookSubscriptionFilters
		return ret
	}

	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value
// and a boolean to check if the value has been set.
func (o *WebhookSubscription) GetFiltersOk() (*WebhookSubscriptionFilters, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Filters, true
}

// SetFilters sets field value
func (o *WebhookSubscription) SetFilters(v WebhookSubscriptionFilters) {
	o.Filters = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *WebhookSubscription) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *WebhookSubscription) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *WebhookSubscription) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *WebhookSubscription) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *WebhookSubscription) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *WebhookSubscription) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o WebhookSubscription) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookSubscription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["object"] = o.Object
	toSerialize["subscription_id"] = o.SubscriptionId
	toSerialize["filters"] = o.Filters
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *WebhookSubscription) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"object",
		"subscription_id",
		"filters",
		"created_at",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookSubscription := _WebhookSubscription{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebhookSubscription)

	if err != nil {
		return err
	}

	*o = WebhookSubscription(varWebhookSubscription)

	return err
}

type NullableWebhookSubscription struct {
	value *WebhookSubscription
	isSet bool
}

func (v NullableWebhookSubscription) Get() *WebhookSubscription {
	return v.value
}

func (v *NullableWebhookSubscription) Set(val *WebhookSubscription) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookSubscription(val *WebhookSubscription) *NullableWebhookSubscription {
	return &NullableWebhookSubscription{value: val, isSet: true}
}

func (v NullableWebhookSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
