/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StorageUsageResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StorageUsageResponse{}

// StorageUsageResponse struct for StorageUsageResponse
type StorageUsageResponse struct {
	Object *string `json:"object,omitempty"`
	User *UserDehydrated `json:"user,omitempty"`
	Casts *StorageObject `json:"casts,omitempty"`
	Reactions *StorageObject `json:"reactions,omitempty"`
	Links *StorageObject `json:"links,omitempty"`
	VerifiedAddresses *StorageObject `json:"verified_addresses,omitempty"`
	UsernameProofs *StorageObject `json:"username_proofs,omitempty"`
	Signers *StorageObject `json:"signers,omitempty"`
	TotalActiveUnits *int32 `json:"total_active_units,omitempty"`
}

// NewStorageUsageResponse instantiates a new StorageUsageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStorageUsageResponse() *StorageUsageResponse {
	this := StorageUsageResponse{}
	return &this
}

// NewStorageUsageResponseWithDefaults instantiates a new StorageUsageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStorageUsageResponseWithDefaults() *StorageUsageResponse {
	this := StorageUsageResponse{}
	return &this
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *StorageUsageResponse) GetObject() string {
	if o == nil || IsNil(o.Object) {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageUsageResponse) GetObjectOk() (*string, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *StorageUsageResponse) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *StorageUsageResponse) SetObject(v string) {
	o.Object = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *StorageUsageResponse) GetUser() UserDehydrated {
	if o == nil || IsNil(o.User) {
		var ret UserDehydrated
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageUsageResponse) GetUserOk() (*UserDehydrated, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *StorageUsageResponse) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given UserDehydrated and assigns it to the User field.
func (o *StorageUsageResponse) SetUser(v UserDehydrated) {
	o.User = &v
}

// GetCasts returns the Casts field value if set, zero value otherwise.
func (o *StorageUsageResponse) GetCasts() StorageObject {
	if o == nil || IsNil(o.Casts) {
		var ret StorageObject
		return ret
	}
	return *o.Casts
}

// GetCastsOk returns a tuple with the Casts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageUsageResponse) GetCastsOk() (*StorageObject, bool) {
	if o == nil || IsNil(o.Casts) {
		return nil, false
	}
	return o.Casts, true
}

// HasCasts returns a boolean if a field has been set.
func (o *StorageUsageResponse) HasCasts() bool {
	if o != nil && !IsNil(o.Casts) {
		return true
	}

	return false
}

// SetCasts gets a reference to the given StorageObject and assigns it to the Casts field.
func (o *StorageUsageResponse) SetCasts(v StorageObject) {
	o.Casts = &v
}

// GetReactions returns the Reactions field value if set, zero value otherwise.
func (o *StorageUsageResponse) GetReactions() StorageObject {
	if o == nil || IsNil(o.Reactions) {
		var ret StorageObject
		return ret
	}
	return *o.Reactions
}

// GetReactionsOk returns a tuple with the Reactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageUsageResponse) GetReactionsOk() (*StorageObject, bool) {
	if o == nil || IsNil(o.Reactions) {
		return nil, false
	}
	return o.Reactions, true
}

// HasReactions returns a boolean if a field has been set.
func (o *StorageUsageResponse) HasReactions() bool {
	if o != nil && !IsNil(o.Reactions) {
		return true
	}

	return false
}

// SetReactions gets a reference to the given StorageObject and assigns it to the Reactions field.
func (o *StorageUsageResponse) SetReactions(v StorageObject) {
	o.Reactions = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *StorageUsageResponse) GetLinks() StorageObject {
	if o == nil || IsNil(o.Links) {
		var ret StorageObject
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageUsageResponse) GetLinksOk() (*StorageObject, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *StorageUsageResponse) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given StorageObject and assigns it to the Links field.
func (o *StorageUsageResponse) SetLinks(v StorageObject) {
	o.Links = &v
}

// GetVerifiedAddresses returns the VerifiedAddresses field value if set, zero value otherwise.
func (o *StorageUsageResponse) GetVerifiedAddresses() StorageObject {
	if o == nil || IsNil(o.VerifiedAddresses) {
		var ret StorageObject
		return ret
	}
	return *o.VerifiedAddresses
}

// GetVerifiedAddressesOk returns a tuple with the VerifiedAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageUsageResponse) GetVerifiedAddressesOk() (*StorageObject, bool) {
	if o == nil || IsNil(o.VerifiedAddresses) {
		return nil, false
	}
	return o.VerifiedAddresses, true
}

// HasVerifiedAddresses returns a boolean if a field has been set.
func (o *StorageUsageResponse) HasVerifiedAddresses() bool {
	if o != nil && !IsNil(o.VerifiedAddresses) {
		return true
	}

	return false
}

// SetVerifiedAddresses gets a reference to the given StorageObject and assigns it to the VerifiedAddresses field.
func (o *StorageUsageResponse) SetVerifiedAddresses(v StorageObject) {
	o.VerifiedAddresses = &v
}

// GetUsernameProofs returns the UsernameProofs field value if set, zero value otherwise.
func (o *StorageUsageResponse) GetUsernameProofs() StorageObject {
	if o == nil || IsNil(o.UsernameProofs) {
		var ret StorageObject
		return ret
	}
	return *o.UsernameProofs
}

// GetUsernameProofsOk returns a tuple with the UsernameProofs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageUsageResponse) GetUsernameProofsOk() (*StorageObject, bool) {
	if o == nil || IsNil(o.UsernameProofs) {
		return nil, false
	}
	return o.UsernameProofs, true
}

// HasUsernameProofs returns a boolean if a field has been set.
func (o *StorageUsageResponse) HasUsernameProofs() bool {
	if o != nil && !IsNil(o.UsernameProofs) {
		return true
	}

	return false
}

// SetUsernameProofs gets a reference to the given StorageObject and assigns it to the UsernameProofs field.
func (o *StorageUsageResponse) SetUsernameProofs(v StorageObject) {
	o.UsernameProofs = &v
}

// GetSigners returns the Signers field value if set, zero value otherwise.
func (o *StorageUsageResponse) GetSigners() StorageObject {
	if o == nil || IsNil(o.Signers) {
		var ret StorageObject
		return ret
	}
	return *o.Signers
}

// GetSignersOk returns a tuple with the Signers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageUsageResponse) GetSignersOk() (*StorageObject, bool) {
	if o == nil || IsNil(o.Signers) {
		return nil, false
	}
	return o.Signers, true
}

// HasSigners returns a boolean if a field has been set.
func (o *StorageUsageResponse) HasSigners() bool {
	if o != nil && !IsNil(o.Signers) {
		return true
	}

	return false
}

// SetSigners gets a reference to the given StorageObject and assigns it to the Signers field.
func (o *StorageUsageResponse) SetSigners(v StorageObject) {
	o.Signers = &v
}

// GetTotalActiveUnits returns the TotalActiveUnits field value if set, zero value otherwise.
func (o *StorageUsageResponse) GetTotalActiveUnits() int32 {
	if o == nil || IsNil(o.TotalActiveUnits) {
		var ret int32
		return ret
	}
	return *o.TotalActiveUnits
}

// GetTotalActiveUnitsOk returns a tuple with the TotalActiveUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageUsageResponse) GetTotalActiveUnitsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalActiveUnits) {
		return nil, false
	}
	return o.TotalActiveUnits, true
}

// HasTotalActiveUnits returns a boolean if a field has been set.
func (o *StorageUsageResponse) HasTotalActiveUnits() bool {
	if o != nil && !IsNil(o.TotalActiveUnits) {
		return true
	}

	return false
}

// SetTotalActiveUnits gets a reference to the given int32 and assigns it to the TotalActiveUnits field.
func (o *StorageUsageResponse) SetTotalActiveUnits(v int32) {
	o.TotalActiveUnits = &v
}

func (o StorageUsageResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StorageUsageResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.Casts) {
		toSerialize["casts"] = o.Casts
	}
	if !IsNil(o.Reactions) {
		toSerialize["reactions"] = o.Reactions
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.VerifiedAddresses) {
		toSerialize["verified_addresses"] = o.VerifiedAddresses
	}
	if !IsNil(o.UsernameProofs) {
		toSerialize["username_proofs"] = o.UsernameProofs
	}
	if !IsNil(o.Signers) {
		toSerialize["signers"] = o.Signers
	}
	if !IsNil(o.TotalActiveUnits) {
		toSerialize["total_active_units"] = o.TotalActiveUnits
	}
	return toSerialize, nil
}

type NullableStorageUsageResponse struct {
	value *StorageUsageResponse
	isSet bool
}

func (v NullableStorageUsageResponse) Get() *StorageUsageResponse {
	return v.value
}

func (v *NullableStorageUsageResponse) Set(val *StorageUsageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableStorageUsageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableStorageUsageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStorageUsageResponse(val *StorageUsageResponse) *NullableStorageUsageResponse {
	return &NullableStorageUsageResponse{value: val, isSet: true}
}

func (v NullableStorageUsageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStorageUsageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


