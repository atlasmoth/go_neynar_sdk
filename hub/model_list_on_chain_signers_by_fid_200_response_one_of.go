/*
Raw Farcaster Hub API

Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Farcaster docs](https://www.thehubble.xyz/docs/httpapi/httpapi.html) for more details. 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the ListOnChainSignersByFid200ResponseOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListOnChainSignersByFid200ResponseOneOf{}

// ListOnChainSignersByFid200ResponseOneOf struct for ListOnChainSignersByFid200ResponseOneOf
type ListOnChainSignersByFid200ResponseOneOf struct {
	Events []OnChainEventSigner `json:"events"`
	AdditionalProperties map[string]interface{}
}

type _ListOnChainSignersByFid200ResponseOneOf ListOnChainSignersByFid200ResponseOneOf

// NewListOnChainSignersByFid200ResponseOneOf instantiates a new ListOnChainSignersByFid200ResponseOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListOnChainSignersByFid200ResponseOneOf(events []OnChainEventSigner) *ListOnChainSignersByFid200ResponseOneOf {
	this := ListOnChainSignersByFid200ResponseOneOf{}
	this.Events = events
	return &this
}

// NewListOnChainSignersByFid200ResponseOneOfWithDefaults instantiates a new ListOnChainSignersByFid200ResponseOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListOnChainSignersByFid200ResponseOneOfWithDefaults() *ListOnChainSignersByFid200ResponseOneOf {
	this := ListOnChainSignersByFid200ResponseOneOf{}
	return &this
}

// GetEvents returns the Events field value
func (o *ListOnChainSignersByFid200ResponseOneOf) GetEvents() []OnChainEventSigner {
	if o == nil {
		var ret []OnChainEventSigner
		return ret
	}

	return o.Events
}

// GetEventsOk returns a tuple with the Events field value
// and a boolean to check if the value has been set.
func (o *ListOnChainSignersByFid200ResponseOneOf) GetEventsOk() ([]OnChainEventSigner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Events, true
}

// SetEvents sets field value
func (o *ListOnChainSignersByFid200ResponseOneOf) SetEvents(v []OnChainEventSigner) {
	o.Events = v
}

func (o ListOnChainSignersByFid200ResponseOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListOnChainSignersByFid200ResponseOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["events"] = o.Events

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListOnChainSignersByFid200ResponseOneOf) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"events",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListOnChainSignersByFid200ResponseOneOf := _ListOnChainSignersByFid200ResponseOneOf{}

	err = json.Unmarshal(data, &varListOnChainSignersByFid200ResponseOneOf)

	if err != nil {
		return err
	}

	*o = ListOnChainSignersByFid200ResponseOneOf(varListOnChainSignersByFid200ResponseOneOf)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "events")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListOnChainSignersByFid200ResponseOneOf struct {
	value *ListOnChainSignersByFid200ResponseOneOf
	isSet bool
}

func (v NullableListOnChainSignersByFid200ResponseOneOf) Get() *ListOnChainSignersByFid200ResponseOneOf {
	return v.value
}

func (v *NullableListOnChainSignersByFid200ResponseOneOf) Set(val *ListOnChainSignersByFid200ResponseOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableListOnChainSignersByFid200ResponseOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableListOnChainSignersByFid200ResponseOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListOnChainSignersByFid200ResponseOneOf(val *ListOnChainSignersByFid200ResponseOneOf) *NullableListOnChainSignersByFid200ResponseOneOf {
	return &NullableListOnChainSignersByFid200ResponseOneOf{value: val, isSet: true}
}

func (v NullableListOnChainSignersByFid200ResponseOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListOnChainSignersByFid200ResponseOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


