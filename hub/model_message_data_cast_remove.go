/*
Raw Farcaster Hub API

Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Farcaster docs](https://www.thehubble.xyz/docs/httpapi/httpapi.html) for more details. 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MessageDataCastRemove type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageDataCastRemove{}

// MessageDataCastRemove struct for MessageDataCastRemove
type MessageDataCastRemove struct {
	Fid *int32 `json:"fid,omitempty"`
	Timestamp *int64 `json:"timestamp,omitempty"`
	Network *FarcasterNetwork `json:"network,omitempty"`
	CastRemoveBody *CastRemoveBody `json:"castRemoveBody,omitempty"`
}

// NewMessageDataCastRemove instantiates a new MessageDataCastRemove object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageDataCastRemove() *MessageDataCastRemove {
	this := MessageDataCastRemove{}
	var network FarcasterNetwork = FARCASTERNETWORK_MAINNET
	this.Network = &network
	return &this
}

// NewMessageDataCastRemoveWithDefaults instantiates a new MessageDataCastRemove object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageDataCastRemoveWithDefaults() *MessageDataCastRemove {
	this := MessageDataCastRemove{}
	var network FarcasterNetwork = FARCASTERNETWORK_MAINNET
	this.Network = &network
	return &this
}

// GetFid returns the Fid field value if set, zero value otherwise.
func (o *MessageDataCastRemove) GetFid() int32 {
	if o == nil || IsNil(o.Fid) {
		var ret int32
		return ret
	}
	return *o.Fid
}

// GetFidOk returns a tuple with the Fid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageDataCastRemove) GetFidOk() (*int32, bool) {
	if o == nil || IsNil(o.Fid) {
		return nil, false
	}
	return o.Fid, true
}

// HasFid returns a boolean if a field has been set.
func (o *MessageDataCastRemove) HasFid() bool {
	if o != nil && !IsNil(o.Fid) {
		return true
	}

	return false
}

// SetFid gets a reference to the given int32 and assigns it to the Fid field.
func (o *MessageDataCastRemove) SetFid(v int32) {
	o.Fid = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *MessageDataCastRemove) GetTimestamp() int64 {
	if o == nil || IsNil(o.Timestamp) {
		var ret int64
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageDataCastRemove) GetTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *MessageDataCastRemove) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int64 and assigns it to the Timestamp field.
func (o *MessageDataCastRemove) SetTimestamp(v int64) {
	o.Timestamp = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *MessageDataCastRemove) GetNetwork() FarcasterNetwork {
	if o == nil || IsNil(o.Network) {
		var ret FarcasterNetwork
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageDataCastRemove) GetNetworkOk() (*FarcasterNetwork, bool) {
	if o == nil || IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *MessageDataCastRemove) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given FarcasterNetwork and assigns it to the Network field.
func (o *MessageDataCastRemove) SetNetwork(v FarcasterNetwork) {
	o.Network = &v
}

// GetCastRemoveBody returns the CastRemoveBody field value if set, zero value otherwise.
func (o *MessageDataCastRemove) GetCastRemoveBody() CastRemoveBody {
	if o == nil || IsNil(o.CastRemoveBody) {
		var ret CastRemoveBody
		return ret
	}
	return *o.CastRemoveBody
}

// GetCastRemoveBodyOk returns a tuple with the CastRemoveBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageDataCastRemove) GetCastRemoveBodyOk() (*CastRemoveBody, bool) {
	if o == nil || IsNil(o.CastRemoveBody) {
		return nil, false
	}
	return o.CastRemoveBody, true
}

// HasCastRemoveBody returns a boolean if a field has been set.
func (o *MessageDataCastRemove) HasCastRemoveBody() bool {
	if o != nil && !IsNil(o.CastRemoveBody) {
		return true
	}

	return false
}

// SetCastRemoveBody gets a reference to the given CastRemoveBody and assigns it to the CastRemoveBody field.
func (o *MessageDataCastRemove) SetCastRemoveBody(v CastRemoveBody) {
	o.CastRemoveBody = &v
}

func (o MessageDataCastRemove) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageDataCastRemove) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Fid) {
		toSerialize["fid"] = o.Fid
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !IsNil(o.CastRemoveBody) {
		toSerialize["castRemoveBody"] = o.CastRemoveBody
	}
	return toSerialize, nil
}

type NullableMessageDataCastRemove struct {
	value *MessageDataCastRemove
	isSet bool
}

func (v NullableMessageDataCastRemove) Get() *MessageDataCastRemove {
	return v.value
}

func (v *NullableMessageDataCastRemove) Set(val *MessageDataCastRemove) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageDataCastRemove) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageDataCastRemove) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageDataCastRemove(val *MessageDataCastRemove) *NullableMessageDataCastRemove {
	return &NullableMessageDataCastRemove{value: val, isSet: true}
}

func (v NullableMessageDataCastRemove) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageDataCastRemove) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


