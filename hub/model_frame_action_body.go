/*
Raw Farcaster Hub API

Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Farcaster docs](https://www.thehubble.xyz/docs/httpapi/httpapi.html) for more details. 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FrameActionBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FrameActionBody{}

// FrameActionBody A Farcaster Frame action
type FrameActionBody struct {
	Url *string `json:"url,omitempty"`
	ButtonIndex *int32 `json:"buttonIndex,omitempty"`
	CastId *CastId `json:"castId,omitempty"`
}

// NewFrameActionBody instantiates a new FrameActionBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFrameActionBody() *FrameActionBody {
	this := FrameActionBody{}
	return &this
}

// NewFrameActionBodyWithDefaults instantiates a new FrameActionBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFrameActionBodyWithDefaults() *FrameActionBody {
	this := FrameActionBody{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *FrameActionBody) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameActionBody) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *FrameActionBody) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *FrameActionBody) SetUrl(v string) {
	o.Url = &v
}

// GetButtonIndex returns the ButtonIndex field value if set, zero value otherwise.
func (o *FrameActionBody) GetButtonIndex() int32 {
	if o == nil || IsNil(o.ButtonIndex) {
		var ret int32
		return ret
	}
	return *o.ButtonIndex
}

// GetButtonIndexOk returns a tuple with the ButtonIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameActionBody) GetButtonIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.ButtonIndex) {
		return nil, false
	}
	return o.ButtonIndex, true
}

// HasButtonIndex returns a boolean if a field has been set.
func (o *FrameActionBody) HasButtonIndex() bool {
	if o != nil && !IsNil(o.ButtonIndex) {
		return true
	}

	return false
}

// SetButtonIndex gets a reference to the given int32 and assigns it to the ButtonIndex field.
func (o *FrameActionBody) SetButtonIndex(v int32) {
	o.ButtonIndex = &v
}

// GetCastId returns the CastId field value if set, zero value otherwise.
func (o *FrameActionBody) GetCastId() CastId {
	if o == nil || IsNil(o.CastId) {
		var ret CastId
		return ret
	}
	return *o.CastId
}

// GetCastIdOk returns a tuple with the CastId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameActionBody) GetCastIdOk() (*CastId, bool) {
	if o == nil || IsNil(o.CastId) {
		return nil, false
	}
	return o.CastId, true
}

// HasCastId returns a boolean if a field has been set.
func (o *FrameActionBody) HasCastId() bool {
	if o != nil && !IsNil(o.CastId) {
		return true
	}

	return false
}

// SetCastId gets a reference to the given CastId and assigns it to the CastId field.
func (o *FrameActionBody) SetCastId(v CastId) {
	o.CastId = &v
}

func (o FrameActionBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FrameActionBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.ButtonIndex) {
		toSerialize["buttonIndex"] = o.ButtonIndex
	}
	if !IsNil(o.CastId) {
		toSerialize["castId"] = o.CastId
	}
	return toSerialize, nil
}

type NullableFrameActionBody struct {
	value *FrameActionBody
	isSet bool
}

func (v NullableFrameActionBody) Get() *FrameActionBody {
	return v.value
}

func (v *NullableFrameActionBody) Set(val *FrameActionBody) {
	v.value = val
	v.isSet = true
}

func (v NullableFrameActionBody) IsSet() bool {
	return v.isSet
}

func (v *NullableFrameActionBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFrameActionBody(val *FrameActionBody) *NullableFrameActionBody {
	return &NullableFrameActionBody{value: val, isSet: true}
}

func (v NullableFrameActionBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFrameActionBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


