/*
Raw Farcaster Hub API

Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Farcaster docs](https://www.thehubble.xyz/docs/httpapi/httpapi.html) for more details. 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MergeOnChainEventBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MergeOnChainEventBody{}

// MergeOnChainEventBody struct for MergeOnChainEventBody
type MergeOnChainEventBody struct {
	OnChainEvent *OnChainEvent `json:"onChainEvent,omitempty"`
}

// NewMergeOnChainEventBody instantiates a new MergeOnChainEventBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMergeOnChainEventBody() *MergeOnChainEventBody {
	this := MergeOnChainEventBody{}
	return &this
}

// NewMergeOnChainEventBodyWithDefaults instantiates a new MergeOnChainEventBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMergeOnChainEventBodyWithDefaults() *MergeOnChainEventBody {
	this := MergeOnChainEventBody{}
	return &this
}

// GetOnChainEvent returns the OnChainEvent field value if set, zero value otherwise.
func (o *MergeOnChainEventBody) GetOnChainEvent() OnChainEvent {
	if o == nil || IsNil(o.OnChainEvent) {
		var ret OnChainEvent
		return ret
	}
	return *o.OnChainEvent
}

// GetOnChainEventOk returns a tuple with the OnChainEvent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergeOnChainEventBody) GetOnChainEventOk() (*OnChainEvent, bool) {
	if o == nil || IsNil(o.OnChainEvent) {
		return nil, false
	}
	return o.OnChainEvent, true
}

// HasOnChainEvent returns a boolean if a field has been set.
func (o *MergeOnChainEventBody) HasOnChainEvent() bool {
	if o != nil && !IsNil(o.OnChainEvent) {
		return true
	}

	return false
}

// SetOnChainEvent gets a reference to the given OnChainEvent and assigns it to the OnChainEvent field.
func (o *MergeOnChainEventBody) SetOnChainEvent(v OnChainEvent) {
	o.OnChainEvent = &v
}

func (o MergeOnChainEventBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MergeOnChainEventBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OnChainEvent) {
		toSerialize["onChainEvent"] = o.OnChainEvent
	}
	return toSerialize, nil
}

type NullableMergeOnChainEventBody struct {
	value *MergeOnChainEventBody
	isSet bool
}

func (v NullableMergeOnChainEventBody) Get() *MergeOnChainEventBody {
	return v.value
}

func (v *NullableMergeOnChainEventBody) Set(val *MergeOnChainEventBody) {
	v.value = val
	v.isSet = true
}

func (v NullableMergeOnChainEventBody) IsSet() bool {
	return v.isSet
}

func (v *NullableMergeOnChainEventBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMergeOnChainEventBody(val *MergeOnChainEventBody) *NullableMergeOnChainEventBody {
	return &NullableMergeOnChainEventBody{value: val, isSet: true}
}

func (v NullableMergeOnChainEventBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMergeOnChainEventBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


