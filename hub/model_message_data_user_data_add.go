/*
Raw Farcaster Hub API

Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Farcaster docs](https://www.thehubble.xyz/docs/httpapi/httpapi.html) for more details. 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MessageDataUserDataAdd type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageDataUserDataAdd{}

// MessageDataUserDataAdd struct for MessageDataUserDataAdd
type MessageDataUserDataAdd struct {
	Fid *int32 `json:"fid,omitempty"`
	Timestamp *int64 `json:"timestamp,omitempty"`
	Network *FarcasterNetwork `json:"network,omitempty"`
	UserDataBody *UserDataBody `json:"userDataBody,omitempty"`
}

// NewMessageDataUserDataAdd instantiates a new MessageDataUserDataAdd object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageDataUserDataAdd() *MessageDataUserDataAdd {
	this := MessageDataUserDataAdd{}
	var network FarcasterNetwork = FARCASTERNETWORK_MAINNET
	this.Network = &network
	return &this
}

// NewMessageDataUserDataAddWithDefaults instantiates a new MessageDataUserDataAdd object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageDataUserDataAddWithDefaults() *MessageDataUserDataAdd {
	this := MessageDataUserDataAdd{}
	var network FarcasterNetwork = FARCASTERNETWORK_MAINNET
	this.Network = &network
	return &this
}

// GetFid returns the Fid field value if set, zero value otherwise.
func (o *MessageDataUserDataAdd) GetFid() int32 {
	if o == nil || IsNil(o.Fid) {
		var ret int32
		return ret
	}
	return *o.Fid
}

// GetFidOk returns a tuple with the Fid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageDataUserDataAdd) GetFidOk() (*int32, bool) {
	if o == nil || IsNil(o.Fid) {
		return nil, false
	}
	return o.Fid, true
}

// HasFid returns a boolean if a field has been set.
func (o *MessageDataUserDataAdd) HasFid() bool {
	if o != nil && !IsNil(o.Fid) {
		return true
	}

	return false
}

// SetFid gets a reference to the given int32 and assigns it to the Fid field.
func (o *MessageDataUserDataAdd) SetFid(v int32) {
	o.Fid = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *MessageDataUserDataAdd) GetTimestamp() int64 {
	if o == nil || IsNil(o.Timestamp) {
		var ret int64
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageDataUserDataAdd) GetTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *MessageDataUserDataAdd) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int64 and assigns it to the Timestamp field.
func (o *MessageDataUserDataAdd) SetTimestamp(v int64) {
	o.Timestamp = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *MessageDataUserDataAdd) GetNetwork() FarcasterNetwork {
	if o == nil || IsNil(o.Network) {
		var ret FarcasterNetwork
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageDataUserDataAdd) GetNetworkOk() (*FarcasterNetwork, bool) {
	if o == nil || IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *MessageDataUserDataAdd) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given FarcasterNetwork and assigns it to the Network field.
func (o *MessageDataUserDataAdd) SetNetwork(v FarcasterNetwork) {
	o.Network = &v
}

// GetUserDataBody returns the UserDataBody field value if set, zero value otherwise.
func (o *MessageDataUserDataAdd) GetUserDataBody() UserDataBody {
	if o == nil || IsNil(o.UserDataBody) {
		var ret UserDataBody
		return ret
	}
	return *o.UserDataBody
}

// GetUserDataBodyOk returns a tuple with the UserDataBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageDataUserDataAdd) GetUserDataBodyOk() (*UserDataBody, bool) {
	if o == nil || IsNil(o.UserDataBody) {
		return nil, false
	}
	return o.UserDataBody, true
}

// HasUserDataBody returns a boolean if a field has been set.
func (o *MessageDataUserDataAdd) HasUserDataBody() bool {
	if o != nil && !IsNil(o.UserDataBody) {
		return true
	}

	return false
}

// SetUserDataBody gets a reference to the given UserDataBody and assigns it to the UserDataBody field.
func (o *MessageDataUserDataAdd) SetUserDataBody(v UserDataBody) {
	o.UserDataBody = &v
}

func (o MessageDataUserDataAdd) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageDataUserDataAdd) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Fid) {
		toSerialize["fid"] = o.Fid
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !IsNil(o.UserDataBody) {
		toSerialize["userDataBody"] = o.UserDataBody
	}
	return toSerialize, nil
}

type NullableMessageDataUserDataAdd struct {
	value *MessageDataUserDataAdd
	isSet bool
}

func (v NullableMessageDataUserDataAdd) Get() *MessageDataUserDataAdd {
	return v.value
}

func (v *NullableMessageDataUserDataAdd) Set(val *MessageDataUserDataAdd) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageDataUserDataAdd) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageDataUserDataAdd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageDataUserDataAdd(val *MessageDataUserDataAdd) *NullableMessageDataUserDataAdd {
	return &NullableMessageDataUserDataAdd{value: val, isSet: true}
}

func (v NullableMessageDataUserDataAdd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageDataUserDataAdd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


