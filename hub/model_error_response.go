/*
Raw Farcaster Hub API

Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Farcaster docs](https://www.thehubble.xyz/docs/httpapi/httpapi.html) for more details. 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ErrorResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ErrorResponse{}

// ErrorResponse struct for ErrorResponse
type ErrorResponse struct {
	ErrCode *string `json:"errCode,omitempty"`
	Presentable *bool `json:"presentable,omitempty"`
	Name *string `json:"name,omitempty"`
	Code *int32 `json:"code,omitempty"`
	Details *string `json:"details,omitempty"`
	Metadata *ErrorResponseMetadata `json:"metadata,omitempty"`
}

// NewErrorResponse instantiates a new ErrorResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorResponse() *ErrorResponse {
	this := ErrorResponse{}
	return &this
}

// NewErrorResponseWithDefaults instantiates a new ErrorResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorResponseWithDefaults() *ErrorResponse {
	this := ErrorResponse{}
	return &this
}

// GetErrCode returns the ErrCode field value if set, zero value otherwise.
func (o *ErrorResponse) GetErrCode() string {
	if o == nil || IsNil(o.ErrCode) {
		var ret string
		return ret
	}
	return *o.ErrCode
}

// GetErrCodeOk returns a tuple with the ErrCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponse) GetErrCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrCode) {
		return nil, false
	}
	return o.ErrCode, true
}

// HasErrCode returns a boolean if a field has been set.
func (o *ErrorResponse) HasErrCode() bool {
	if o != nil && !IsNil(o.ErrCode) {
		return true
	}

	return false
}

// SetErrCode gets a reference to the given string and assigns it to the ErrCode field.
func (o *ErrorResponse) SetErrCode(v string) {
	o.ErrCode = &v
}

// GetPresentable returns the Presentable field value if set, zero value otherwise.
func (o *ErrorResponse) GetPresentable() bool {
	if o == nil || IsNil(o.Presentable) {
		var ret bool
		return ret
	}
	return *o.Presentable
}

// GetPresentableOk returns a tuple with the Presentable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponse) GetPresentableOk() (*bool, bool) {
	if o == nil || IsNil(o.Presentable) {
		return nil, false
	}
	return o.Presentable, true
}

// HasPresentable returns a boolean if a field has been set.
func (o *ErrorResponse) HasPresentable() bool {
	if o != nil && !IsNil(o.Presentable) {
		return true
	}

	return false
}

// SetPresentable gets a reference to the given bool and assigns it to the Presentable field.
func (o *ErrorResponse) SetPresentable(v bool) {
	o.Presentable = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ErrorResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ErrorResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ErrorResponse) SetName(v string) {
	o.Name = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ErrorResponse) GetCode() int32 {
	if o == nil || IsNil(o.Code) {
		var ret int32
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponse) GetCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ErrorResponse) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given int32 and assigns it to the Code field.
func (o *ErrorResponse) SetCode(v int32) {
	o.Code = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *ErrorResponse) GetDetails() string {
	if o == nil || IsNil(o.Details) {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponse) GetDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *ErrorResponse) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *ErrorResponse) SetDetails(v string) {
	o.Details = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ErrorResponse) GetMetadata() ErrorResponseMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret ErrorResponseMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponse) GetMetadataOk() (*ErrorResponseMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ErrorResponse) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ErrorResponseMetadata and assigns it to the Metadata field.
func (o *ErrorResponse) SetMetadata(v ErrorResponseMetadata) {
	o.Metadata = &v
}

func (o ErrorResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ErrorResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrCode) {
		toSerialize["errCode"] = o.ErrCode
	}
	if !IsNil(o.Presentable) {
		toSerialize["presentable"] = o.Presentable
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableErrorResponse struct {
	value *ErrorResponse
	isSet bool
}

func (v NullableErrorResponse) Get() *ErrorResponse {
	return v.value
}

func (v *NullableErrorResponse) Set(val *ErrorResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorResponse(val *ErrorResponse) *NullableErrorResponse {
	return &NullableErrorResponse{value: val, isSet: true}
}

func (v NullableErrorResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


