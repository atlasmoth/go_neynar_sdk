/*
Raw Farcaster Hub API

Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Farcaster docs](https://www.thehubble.xyz/docs/httpapi/httpapi.html) for more details. 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CastAddBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CastAddBody{}

// CastAddBody Adds a new Cast
type CastAddBody struct {
	EmbedsDeprecated []string `json:"embedsDeprecated,omitempty"`
	Mentions []int32 `json:"mentions,omitempty"`
	ParentCastId *CastId `json:"parentCastId,omitempty"`
	ParentUrl *string `json:"parentUrl,omitempty"`
	Text *string `json:"text,omitempty"`
	MentionsPositions []int64 `json:"mentionsPositions,omitempty"`
	Embeds []Embed `json:"embeds,omitempty"`
}

// NewCastAddBody instantiates a new CastAddBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCastAddBody() *CastAddBody {
	this := CastAddBody{}
	return &this
}

// NewCastAddBodyWithDefaults instantiates a new CastAddBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCastAddBodyWithDefaults() *CastAddBody {
	this := CastAddBody{}
	return &this
}

// GetEmbedsDeprecated returns the EmbedsDeprecated field value if set, zero value otherwise.
func (o *CastAddBody) GetEmbedsDeprecated() []string {
	if o == nil || IsNil(o.EmbedsDeprecated) {
		var ret []string
		return ret
	}
	return o.EmbedsDeprecated
}

// GetEmbedsDeprecatedOk returns a tuple with the EmbedsDeprecated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CastAddBody) GetEmbedsDeprecatedOk() ([]string, bool) {
	if o == nil || IsNil(o.EmbedsDeprecated) {
		return nil, false
	}
	return o.EmbedsDeprecated, true
}

// HasEmbedsDeprecated returns a boolean if a field has been set.
func (o *CastAddBody) HasEmbedsDeprecated() bool {
	if o != nil && !IsNil(o.EmbedsDeprecated) {
		return true
	}

	return false
}

// SetEmbedsDeprecated gets a reference to the given []string and assigns it to the EmbedsDeprecated field.
func (o *CastAddBody) SetEmbedsDeprecated(v []string) {
	o.EmbedsDeprecated = v
}

// GetMentions returns the Mentions field value if set, zero value otherwise.
func (o *CastAddBody) GetMentions() []int32 {
	if o == nil || IsNil(o.Mentions) {
		var ret []int32
		return ret
	}
	return o.Mentions
}

// GetMentionsOk returns a tuple with the Mentions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CastAddBody) GetMentionsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Mentions) {
		return nil, false
	}
	return o.Mentions, true
}

// HasMentions returns a boolean if a field has been set.
func (o *CastAddBody) HasMentions() bool {
	if o != nil && !IsNil(o.Mentions) {
		return true
	}

	return false
}

// SetMentions gets a reference to the given []int32 and assigns it to the Mentions field.
func (o *CastAddBody) SetMentions(v []int32) {
	o.Mentions = v
}

// GetParentCastId returns the ParentCastId field value if set, zero value otherwise.
func (o *CastAddBody) GetParentCastId() CastId {
	if o == nil || IsNil(o.ParentCastId) {
		var ret CastId
		return ret
	}
	return *o.ParentCastId
}

// GetParentCastIdOk returns a tuple with the ParentCastId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CastAddBody) GetParentCastIdOk() (*CastId, bool) {
	if o == nil || IsNil(o.ParentCastId) {
		return nil, false
	}
	return o.ParentCastId, true
}

// HasParentCastId returns a boolean if a field has been set.
func (o *CastAddBody) HasParentCastId() bool {
	if o != nil && !IsNil(o.ParentCastId) {
		return true
	}

	return false
}

// SetParentCastId gets a reference to the given CastId and assigns it to the ParentCastId field.
func (o *CastAddBody) SetParentCastId(v CastId) {
	o.ParentCastId = &v
}

// GetParentUrl returns the ParentUrl field value if set, zero value otherwise.
func (o *CastAddBody) GetParentUrl() string {
	if o == nil || IsNil(o.ParentUrl) {
		var ret string
		return ret
	}
	return *o.ParentUrl
}

// GetParentUrlOk returns a tuple with the ParentUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CastAddBody) GetParentUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ParentUrl) {
		return nil, false
	}
	return o.ParentUrl, true
}

// HasParentUrl returns a boolean if a field has been set.
func (o *CastAddBody) HasParentUrl() bool {
	if o != nil && !IsNil(o.ParentUrl) {
		return true
	}

	return false
}

// SetParentUrl gets a reference to the given string and assigns it to the ParentUrl field.
func (o *CastAddBody) SetParentUrl(v string) {
	o.ParentUrl = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *CastAddBody) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CastAddBody) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *CastAddBody) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *CastAddBody) SetText(v string) {
	o.Text = &v
}

// GetMentionsPositions returns the MentionsPositions field value if set, zero value otherwise.
func (o *CastAddBody) GetMentionsPositions() []int64 {
	if o == nil || IsNil(o.MentionsPositions) {
		var ret []int64
		return ret
	}
	return o.MentionsPositions
}

// GetMentionsPositionsOk returns a tuple with the MentionsPositions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CastAddBody) GetMentionsPositionsOk() ([]int64, bool) {
	if o == nil || IsNil(o.MentionsPositions) {
		return nil, false
	}
	return o.MentionsPositions, true
}

// HasMentionsPositions returns a boolean if a field has been set.
func (o *CastAddBody) HasMentionsPositions() bool {
	if o != nil && !IsNil(o.MentionsPositions) {
		return true
	}

	return false
}

// SetMentionsPositions gets a reference to the given []int64 and assigns it to the MentionsPositions field.
func (o *CastAddBody) SetMentionsPositions(v []int64) {
	o.MentionsPositions = v
}

// GetEmbeds returns the Embeds field value if set, zero value otherwise.
func (o *CastAddBody) GetEmbeds() []Embed {
	if o == nil || IsNil(o.Embeds) {
		var ret []Embed
		return ret
	}
	return o.Embeds
}

// GetEmbedsOk returns a tuple with the Embeds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CastAddBody) GetEmbedsOk() ([]Embed, bool) {
	if o == nil || IsNil(o.Embeds) {
		return nil, false
	}
	return o.Embeds, true
}

// HasEmbeds returns a boolean if a field has been set.
func (o *CastAddBody) HasEmbeds() bool {
	if o != nil && !IsNil(o.Embeds) {
		return true
	}

	return false
}

// SetEmbeds gets a reference to the given []Embed and assigns it to the Embeds field.
func (o *CastAddBody) SetEmbeds(v []Embed) {
	o.Embeds = v
}

func (o CastAddBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CastAddBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EmbedsDeprecated) {
		toSerialize["embedsDeprecated"] = o.EmbedsDeprecated
	}
	if !IsNil(o.Mentions) {
		toSerialize["mentions"] = o.Mentions
	}
	if !IsNil(o.ParentCastId) {
		toSerialize["parentCastId"] = o.ParentCastId
	}
	if !IsNil(o.ParentUrl) {
		toSerialize["parentUrl"] = o.ParentUrl
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.MentionsPositions) {
		toSerialize["mentionsPositions"] = o.MentionsPositions
	}
	if !IsNil(o.Embeds) {
		toSerialize["embeds"] = o.Embeds
	}
	return toSerialize, nil
}

type NullableCastAddBody struct {
	value *CastAddBody
	isSet bool
}

func (v NullableCastAddBody) Get() *CastAddBody {
	return v.value
}

func (v *NullableCastAddBody) Set(val *CastAddBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCastAddBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCastAddBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCastAddBody(val *CastAddBody) *NullableCastAddBody {
	return &NullableCastAddBody{value: val, isSet: true}
}

func (v NullableCastAddBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCastAddBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


