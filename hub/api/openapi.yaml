openapi: 3.0.1
info:
  description: |
    Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Farcaster docs](https://www.thehubble.xyz/docs/httpapi/httpapi.html) for more details.
  title: Raw Farcaster Hub API
  version: "1.0"
servers:
- url: https://hub-api.neynar.com
paths:
  /v1/info:
    get:
      operationId: GetInfo
      parameters:
      - description: API key required for authentication.
        explode: false
        in: header
        name: api_key
        required: false
        schema:
          default: NEYNAR_API_DOCS
          type: string
        style: simple
      - description: Whether to return DB stats
        explode: true
        in: query
        name: dbstats
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubInfoResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error response.
      summary: Sync Methods
      tags:
      - Info
  /v1/castById:
    get:
      operationId: GetCastById
      parameters:
      - description: API key required for authentication.
        explode: false
        in: header
        name: api_key
        required: false
        schema:
          default: NEYNAR_API_DOCS
          type: string
        style: simple
      - description: The FID of the cast's creator
        example: 3
        explode: true
        in: query
        name: fid
        required: false
        schema:
          type: integer
        style: form
      - description: The cast's hash
        example: 0x03aff391a6eb1772b20b4ead9a89f732be75fe27
        explode: true
        in: query
        name: hash
        required: false
        schema:
          pattern: "^0x[0-9a-fA-F]{40}$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CastAdd'
          description: The requested Cast.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error response.
      summary: Get a cast by its FID and Hash.
      tags:
      - Casts
  /v1/castsByFid:
    get:
      operationId: ListCastsByFid
      parameters:
      - description: API key required for authentication.
        explode: false
        in: header
        name: api_key
        required: false
        schema:
          default: NEYNAR_API_DOCS
          type: string
        style: simple
      - description: The FID of the casts' creator
        example: 3
        explode: true
        in: query
        name: fid
        required: false
        schema:
          type: integer
        style: form
      - description: Maximum number of messages to return in a single response
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "Reverse the sort order, returning latest messages first"
        explode: true
        in: query
        name: reverse
        required: false
        schema:
          type: boolean
        style: form
      - description: "The page token returned by the previous query, to fetch the\
          \ next page. If this parameter is empty, fetch the first page"
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCastsByFid_200_response'
          description: The requested Casts.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error response.
      summary: Fetch all casts authored by an FID.
      tags:
      - Casts
  /v1/castsByMention:
    get:
      operationId: ListCastsByMention
      parameters:
      - description: API key required for authentication.
        explode: false
        in: header
        name: api_key
        required: false
        schema:
          default: NEYNAR_API_DOCS
          type: string
        style: simple
      - description: The FID that is mentioned in a cast
        example: 3
        explode: true
        in: query
        name: fid
        required: false
        schema:
          type: integer
        style: form
      - description: Maximum number of messages to return in a single response
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "Reverse the sort order, returning latest messages first"
        explode: true
        in: query
        name: reverse
        required: false
        schema:
          type: boolean
        style: form
      - description: "The page token returned by the previous query, to fetch the\
          \ next page. If this parameter is empty, fetch the first page"
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCastsByFid_200_response'
          description: The requested Casts.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error response.
      summary: Fetch all casts that mention an FID
      tags:
      - Casts
  /v1/castsByParent:
    get:
      operationId: ListCastsByParent
      parameters:
      - description: API key required for authentication.
        explode: false
        in: header
        name: api_key
        required: false
        schema:
          default: NEYNAR_API_DOCS
          type: string
        style: simple
      - description: The FID of the parent cast
        example: 226
        explode: true
        in: query
        name: fid
        required: false
        schema:
          type: integer
        style: form
      - description: The parent cast's hash
        example: 0x03aff391a6eb1772b20b4ead9a89f732be75fe27
        explode: true
        in: query
        name: hash
        required: false
        schema:
          type: string
        style: form
      - example: chain://eip155:1/erc721:0x39d89b649ffa044383333d297e325d42d31329b2
        explode: true
        in: query
        name: url
        required: false
        schema:
          type: string
        style: form
      - description: Maximum number of messages to return in a single response
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "Reverse the sort order, returning latest messages first"
        explode: true
        in: query
        name: reverse
        required: false
        schema:
          type: boolean
        style: form
      - description: "The page token returned by the previous query, to fetch the\
          \ next page. If this parameter is empty, fetch the first page"
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCastsByFid_200_response'
          description: The requested Casts.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error response.
      summary: Fetch all casts by parent cast's FID and Hash OR by the parent's URL
      tags:
      - Casts
  /v1/reactionById:
    get:
      operationId: GetReactionById
      parameters:
      - description: API key required for authentication.
        explode: false
        in: header
        name: api_key
        required: false
        schema:
          default: NEYNAR_API_DOCS
          type: string
        style: simple
      - description: The FID of the reaction's creator
        explode: true
        in: query
        name: fid
        required: false
        schema:
          type: integer
        style: form
      - description: The FID of the cast's creator
        explode: true
        in: query
        name: target_fid
        required: false
        schema:
          type: integer
        style: form
      - description: The cast's hash
        explode: true
        in: query
        name: target_hash
        required: false
        schema:
          type: string
        style: form
      - description: "The type of reaction, either as a numerical enum value or string\
          \ representation"
        explode: true
        in: query
        name: reaction_type
        required: false
        schema:
          $ref: '#/components/schemas/ReactionType'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reaction'
          description: The requested Reaction.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error response.
      summary: Get a reaction by its created FID and target Cast.
      tags:
      - Reactions
  /v1/reactionsByCast:
    get:
      operationId: ListReactionsByCast
      parameters:
      - description: API key required for authentication.
        explode: false
        in: header
        name: api_key
        required: false
        schema:
          default: NEYNAR_API_DOCS
          type: string
        style: simple
      - description: The FID of the cast's creator
        explode: true
        in: query
        name: target_fid
        required: false
        schema:
          type: integer
        style: form
      - description: The hash of the cast
        explode: true
        in: query
        name: target_hash
        required: false
        schema:
          type: string
        style: form
      - description: "The type of reaction, either as a numerical enum value or string\
          \ representation"
        explode: true
        in: query
        name: reaction_type
        required: false
        schema:
          $ref: '#/components/schemas/ReactionType'
        style: form
      - description: Maximum number of messages to return in a single response
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "Reverse the sort order, returning latest messages first"
        explode: true
        in: query
        name: reverse
        required: false
        schema:
          type: boolean
        style: form
      - description: "The page token returned by the previous query, to fetch the\
          \ next page. If this parameter is empty, fetch the first page"
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReactionsByCast_200_response'
          description: The requested Reactions.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error response.
      summary: Get all reactions to a cast
      tags:
      - Reactions
  /v1/reactionsByFid:
    get:
      operationId: ListReactionsByFid
      parameters:
      - description: API key required for authentication.
        explode: false
        in: header
        name: api_key
        required: false
        schema:
          default: NEYNAR_API_DOCS
          type: string
        style: simple
      - description: The FID of the reaction's creator
        explode: true
        in: query
        name: fid
        required: false
        schema:
          type: integer
        style: form
      - description: "The type of reaction, either as a numerical enum value or string\
          \ representation"
        explode: true
        in: query
        name: reaction_type
        required: false
        schema:
          $ref: '#/components/schemas/ReactionType'
        style: form
      - description: Maximum number of messages to return in a single response
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "Reverse the sort order, returning latest messages first"
        explode: true
        in: query
        name: reverse
        required: false
        schema:
          type: boolean
        style: form
      - description: "The page token returned by the previous query, to fetch the\
          \ next page. If this parameter is empty, fetch the first page"
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReactionsByCast_200_response'
          description: The requested Reactions.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error response.
      summary: Get all reactions by an FID
      tags:
      - Reactions
  /v1/reactionsByTarget:
    get:
      operationId: ListReactionsByTarget
      parameters:
      - description: API key required for authentication.
        explode: false
        in: header
        name: api_key
        required: false
        schema:
          default: NEYNAR_API_DOCS
          type: string
        style: simple
      - description: The URL of the parent cast
        example: chain://eip155:1/erc721:0x39d89b649ffa044383333d297e325d42d31329b2
        explode: true
        in: query
        name: url
        required: false
        schema:
          type: string
        style: form
      - description: "The type of reaction, either as a numerical enum value or string\
          \ representation"
        explode: true
        in: query
        name: reaction_type
        required: false
        schema:
          $ref: '#/components/schemas/ReactionType'
        style: form
      - description: Maximum number of messages to return in a single response
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "Reverse the sort order, returning latest messages first"
        explode: true
        in: query
        name: reverse
        required: false
        schema:
          type: boolean
        style: form
      - description: "The page token returned by the previous query, to fetch the\
          \ next page. If this parameter is empty, fetch the first page"
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReactionsByCast_200_response'
          description: The requested Reactions.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error response.
      summary: Get all reactions to a target URL
      tags:
      - Reactions
  /v1/linkById:
    get:
      operationId: GetLinkById
      parameters:
      - description: API key required for authentication.
        explode: false
        in: header
        name: api_key
        required: false
        schema:
          default: NEYNAR_API_DOCS
          type: string
        style: simple
      - description: The FID of the link's originator
        explode: true
        in: query
        name: fid
        required: false
        schema:
          type: integer
        style: form
      - description: The FID of the target of the link
        explode: true
        in: query
        name: target_fid
        required: false
        schema:
          type: integer
        style: form
      - description: "The type of link, as a string value"
        explode: true
        in: query
        name: link_type
        required: false
        schema:
          $ref: '#/components/schemas/LinkType'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkAdd'
          description: The requested Link.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error response.
      summary: Get a link by its FID and target FID.
      tags:
      - Links
  /v1/linksByFid:
    get:
      operationId: ListLinksByFid
      parameters:
      - description: API key required for authentication.
        explode: false
        in: header
        name: api_key
        required: false
        schema:
          default: NEYNAR_API_DOCS
          type: string
        style: simple
      - description: The FID of the link's originator
        explode: true
        in: query
        name: fid
        required: false
        schema:
          type: integer
        style: form
      - description: "The type of link, as a string value"
        explode: true
        in: query
        name: link_type
        required: false
        schema:
          $ref: '#/components/schemas/LinkType'
        style: form
      - description: Maximum number of messages to return in a single response
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "Reverse the sort order, returning latest messages first"
        explode: true
        in: query
        name: reverse
        required: false
        schema:
          type: boolean
        style: form
      - description: "The page token returned by the previous query, to fetch the\
          \ next page. If this parameter is empty, fetch the first page"
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLinksByFid_200_response'
          description: The requested Links.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error response.
      summary: Get all links from a source FID
      tags:
      - Links
  /v1/linksByTargetFid:
    get:
      operationId: ListLinksByTargetFid
      parameters:
      - description: API key required for authentication.
        explode: false
        in: header
        name: api_key
        required: false
        schema:
          default: NEYNAR_API_DOCS
          type: string
        style: simple
      - description: The FID of the target of the link
        explode: true
        in: query
        name: target_fid
        required: false
        schema:
          type: integer
        style: form
      - description: "The type of link, as a string value"
        explode: true
        in: query
        name: link_type
        required: false
        schema:
          $ref: '#/components/schemas/LinkType'
        style: form
      - description: Maximum number of messages to return in a single response
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "Reverse the sort order, returning latest messages first"
        explode: true
        in: query
        name: reverse
        required: false
        schema:
          type: boolean
        style: form
      - description: "The page token returned by the previous query, to fetch the\
          \ next page. If this parameter is empty, fetch the first page"
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLinksByFid_200_response'
          description: The requested Links.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error response.
      summary: Get all links to a target FID
      tags:
      - Links
  /v1/userDataByFid:
    get:
      description: "**Note:** one of two different response schemas is returned  based\
        \ on whether the caller provides the `user_data_type` parameter. If included,\
        \ a single `UserDataAdd` message is returned (or a `not_found` error). If\
        \ omitted, a paginated list of `UserDataAdd` messages is returned instead"
      operationId: GetUserDataByFid
      parameters:
      - description: API key required for authentication.
        explode: false
        in: header
        name: api_key
        required: false
        schema:
          default: NEYNAR_API_DOCS
          type: string
        style: simple
      - description: The FID that's being requested
        explode: true
        in: query
        name: fid
        required: false
        schema:
          type: integer
        style: form
      - description: "The type of user data, either as a numerical value or type string.\
          \ If this is omitted, all user data for the FID is returned"
        explode: true
        in: query
        name: user_data_type
        required: false
        schema:
          $ref: '#/components/schemas/UserDataType'
        style: form
      - description: Maximum number of messages to return in a single response
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "Reverse the sort order, returning latest messages first"
        explode: true
        in: query
        name: reverse
        required: false
        schema:
          type: boolean
        style: form
      - description: "The page token returned by the previous query, to fetch the\
          \ next page. If this parameter is empty, fetch the first page"
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserDataByFid_200_response'
          description: The requested UserData.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error response.
      summary: Get UserData for a FID.
      tags:
      - UserData
  /v1/fids:
    get:
      operationId: ListFids
      parameters:
      - description: API key required for authentication.
        explode: false
        in: header
        name: api_key
        required: false
        schema:
          default: NEYNAR_API_DOCS
          type: string
        style: simple
      - description: Maximum number of messages to return in a single response
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "Reverse the sort order, returning latest messages first"
        explode: true
        in: query
        name: reverse
        required: false
        schema:
          type: boolean
        style: form
      - description: "The page token returned by the previous query, to fetch the\
          \ next page. If this parameter is empty, fetch the first page"
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FidsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error response.
      summary: Get a list of all the FIDs
      tags:
      - FIDs
  /v1/storageLimitsByFid:
    get:
      operationId: GetStorageLimitsByFid
      parameters:
      - description: API key required for authentication.
        explode: false
        in: header
        name: api_key
        required: false
        schema:
          default: NEYNAR_API_DOCS
          type: string
        style: simple
      - explode: true
        in: query
        name: fid
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageLimitsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error response.
      summary: Get an FID's storage limits.
      tags:
      - Storage
      x-codegen-request-body-name: body
  /v1/userNameProofsByFid:
    get:
      operationId: ListUsernameProofsByFid
      parameters:
      - description: API key required for authentication.
        explode: false
        in: header
        name: api_key
        required: false
        schema:
          default: NEYNAR_API_DOCS
          type: string
        style: simple
      - description: The FID being requested
        explode: true
        in: query
        name: fid
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameProofsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error response.
      summary: Get a list of proofs provided by an FID
      tags:
      - Usernames
  /v1/userNameProofByName:
    get:
      operationId: GetUsernameProof
      parameters:
      - description: API key required for authentication.
        explode: false
        in: header
        name: api_key
        required: false
        schema:
          default: NEYNAR_API_DOCS
          type: string
        style: simple
      - description: The Farcaster username or ENS address
        examples:
          username:
            value: gavi
          ENS address:
            value: dwr.eth
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNameProof'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error response.
      summary: Get an proof for a username by the Farcaster username
      tags:
      - Usernames
  /v1/verificationsByFid:
    get:
      operationId: ListVerificationsByFid
      parameters:
      - description: API key required for authentication.
        explode: false
        in: header
        name: api_key
        required: false
        schema:
          default: NEYNAR_API_DOCS
          type: string
        style: simple
      - description: The FID being requested
        explode: true
        in: query
        name: fid
        required: false
        schema:
          type: integer
        style: form
      - description: The optional ETH address to filter by
        explode: true
        in: query
        name: address
        required: false
        schema:
          type: string
        style: form
      - description: Maximum number of messages to return in a single response
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "Reverse the sort order, returning latest messages first"
        explode: true
        in: query
        name: reverse
        required: false
        schema:
          type: boolean
        style: form
      - description: "The page token returned by the previous query, to fetch the\
          \ next page. If this parameter is empty, fetch the first page"
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVerificationsByFid_200_response'
          description: The requested Reactions.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error response.
      summary: Get a list of verifications provided by an FID
      tags:
      - Verifications
      x-codegen-request-body-name: body
  /v1/onChainIdRegistryEventByAddress:
    get:
      operationId: GetOnChainIdRegistrationByAddress
      parameters:
      - description: API key required for authentication.
        explode: false
        in: header
        name: api_key
        required: false
        schema:
          default: NEYNAR_API_DOCS
          type: string
        style: simple
      - description: The ETH address being requested
        explode: true
        in: query
        name: address
        required: false
        schema:
          pattern: "^0x[0-9a-fA-F]{40}$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnChainEventIdRegister'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error response.
      summary: Get an on chain ID Registry Event for a given Address
      tags:
      - OnChainEvents
  /v1/onChainEventsByFid:
    get:
      operationId: ListOnChainEventsByFid
      parameters:
      - description: API key required for authentication.
        explode: false
        in: header
        name: api_key
        required: false
        schema:
          default: NEYNAR_API_DOCS
          type: string
        style: simple
      - description: The FID being requested
        explode: true
        in: query
        name: fid
        required: false
        schema:
          type: integer
        style: form
      - description: The numeric of string value of the event type being requested.
        explode: true
        in: query
        name: event_type
        required: false
        schema:
          $ref: '#/components/schemas/OnChainEventType'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOnChainEventsByFid_200_response'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error response.
      summary: Get a list of on-chain events provided by an FID
      tags:
      - OnChainEvents
  /v1/onChainSignersByFid:
    get:
      description: "**Note:** one of two different response schemas is returned  based\
        \ on whether the caller provides the `signer` parameter. If included, a single\
        \ `OnChainEventSigner` message is returned (or a `not_found` error). If omitted,\
        \ a  non-paginated list of `OnChainEventSigner` messages is returned instead"
      operationId: ListOnChainSignersByFid
      parameters:
      - description: API key required for authentication.
        explode: false
        in: header
        name: api_key
        required: false
        schema:
          default: NEYNAR_API_DOCS
          type: string
        style: simple
      - description: The FID being requested
        explode: true
        in: query
        name: fid
        required: false
        schema:
          type: integer
        style: form
      - description: The optional key of signer
        example: 0x0852c07b5695ff94138b025e3f9b4788e06133f04e254f0ea0eb85a06e999cdd
        explode: true
        in: query
        name: signer
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOnChainSignersByFid_200_response'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error response.
      summary: Get a list of signers provided by an FID
      tags:
      - OnChainEvents
  /v1/submitMessage:
    post:
      operationId: SubmitMessage
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
        description: "* \nA Message is a delta operation on the Farcaster network.\
          \ The message protobuf is an envelope \nthat wraps a MessageData object\
          \ and contains a hash and signature which can verify its authenticity."
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error response.
      security:
      - usernamePassword: []
      summary: Submit a signed protobuf-serialized message to the Hub
      tags:
      - SubmitMessage
      x-codegen-request-body-name: body
  /v1/validateMessage:
    post:
      operationId: ValidateMessage
      parameters:
      - description: API key required for authentication.
        explode: false
        in: header
        name: api_key
        required: false
        schema:
          default: NEYNAR_API_DOCS
          type: string
        style: simple
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
        description: "* \nA Message is a delta operation on the Farcaster network.\
          \ The message protobuf is an envelope \nthat wraps a MessageData object\
          \ and contains a hash and signature which can verify its authenticity."
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateMessageResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error response.
      security:
      - usernamePassword: []
      summary: Validate a signed protobuf-serialized message with the Hub
      tags:
      - ValidateMessage
      x-codegen-request-body-name: body
  /v1/events:
    get:
      operationId: ListEvents
      parameters:
      - description: API key required for authentication.
        explode: false
        in: header
        name: api_key
        required: false
        schema:
          default: NEYNAR_API_DOCS
          type: string
        style: simple
      - description: "An optional Hub Id to start getting events from.  This is also\
          \ returned from the API as nextPageEventId, which  can be used to page through\
          \ all the Hub events. Set it to 0  to start from the first event"
        explode: true
        in: query
        name: from_event_id
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEvents_200_response'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error response.
      summary: Get a page of Hub events
      tags:
      - HubEvents
  /v1/eventById:
    get:
      operationId: GetEventById
      parameters:
      - description: API key required for authentication.
        explode: false
        in: header
        name: api_key
        required: false
        schema:
          default: NEYNAR_API_DOCS
          type: string
        style: simple
      - description: The Hub Id of the event
        explode: true
        in: query
        name: event_id
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubEvent'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error response.
      summary: Get an event by its ID
      tags:
      - HubEvents
components:
  parameters:
    apiKey:
      description: API key required for authentication.
      explode: false
      in: header
      name: api_key
      required: false
      schema:
        default: NEYNAR_API_DOCS
        type: string
      style: simple
    pageSize:
      description: Maximum number of messages to return in a single response
      explode: true
      in: query
      name: pageSize
      required: false
      schema:
        type: integer
      style: form
    paginationReverse:
      description: "Reverse the sort order, returning latest messages first"
      explode: true
      in: query
      name: reverse
      required: false
      schema:
        type: boolean
      style: form
    pageToken:
      description: "The page token returned by the previous query, to fetch the next\
        \ page. If this parameter is empty, fetch the first page"
      explode: true
      in: query
      name: pageToken
      required: false
      schema:
        type: string
      style: form
  responses:
    ErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: An unexpected error response.
  schemas:
    CastAdd:
      allOf:
      - $ref: '#/components/schemas/MessageCommon'
      - properties:
          data:
            $ref: '#/components/schemas/CastAdd_allOf_data'
        type: object
      example:
        signatureScheme: SIGNATURE_SCHEME_ED25519
        data:
          fid: 2
          castAddBody:
            mentionsPositions:
            - 6
            - 6
            parentUrl: chain://eip155:1/erc721:0x39d89b649ffa044383333d297e325d42d31329b2
            embedsDeprecated:
            - embedsDeprecated
            - embedsDeprecated
            mentions:
            - 2
            - 2
            text: text
            parentCastId:
              fid: 0
              hash: hash
            embeds:
            - castId:
                fid: 0
                hash: hash
            - castId:
                fid: 0
                hash: hash
          type: MESSAGE_TYPE_CAST_ADD
          timestamp: 48994466
          network: FARCASTER_NETWORK_MAINNET
        signature: signature
        hashScheme: HASH_SCHEME_BLAKE3
        hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
        signer: signer
    CastAddBody:
      description: Adds a new Cast
      example:
        mentionsPositions:
        - 6
        - 6
        parentUrl: chain://eip155:1/erc721:0x39d89b649ffa044383333d297e325d42d31329b2
        embedsDeprecated:
        - embedsDeprecated
        - embedsDeprecated
        mentions:
        - 2
        - 2
        text: text
        parentCastId:
          fid: 0
          hash: hash
        embeds:
        - castId:
            fid: 0
            hash: hash
        - castId:
            fid: 0
            hash: hash
      properties:
        embedsDeprecated:
          items:
            type: string
          title: URLs to be embedded in the cast
          type: array
        mentions:
          items:
            example: 2
            format: uint64
            type: integer
          title: Fids mentioned in the cast
          type: array
        parentCastId:
          $ref: '#/components/schemas/CastId'
        parentUrl:
          example: chain://eip155:1/erc721:0x39d89b649ffa044383333d297e325d42d31329b2
          title: Parent URL
          type: string
        text:
          title: Text of the cast
          type: string
        mentionsPositions:
          items:
            format: int64
            type: integer
          title: Positions of the mentions in the text
          type: array
        embeds:
          items:
            $ref: '#/components/schemas/Embed'
          title: URLs or cast ids to be embedded in the cast
          type: array
      type: object
    CastEmbed:
      example:
        castId:
          fid: 0
          hash: hash
      properties:
        castId:
          $ref: '#/components/schemas/CastId'
      type: object
    CastRemove:
      allOf:
      - $ref: '#/components/schemas/MessageCommon'
      - properties:
          data:
            $ref: '#/components/schemas/CastRemove_allOf_data'
        type: object
    CastId:
      description: Identifier used to look up a Cast
      example:
        fid: 0
        hash: hash
      properties:
        fid:
          format: uint64
          title: Fid of the user who created the cast
          type: integer
        hash:
          pattern: "^0x[0-9a-fA-F]{40}$"
          type: string
      type: object
    CastHash:
      pattern: "^0x[0-9a-fA-F]{40}$"
      type: string
    CastRemoveBody:
      description: Removes an existing Cast
      properties:
        targetHash:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          title: Hash of the cast to remove
          type: string
      type: object
    DbStats:
      example:
        numFidEvents: 6
        numMessages: 0
        numFnameEvents: 1
      properties:
        numMessages:
          format: uint64
          type: integer
        numFidEvents:
          format: uint64
          type: integer
        numFnameEvents:
          format: uint64
          type: integer
      type: object
    Embed:
      oneOf:
      - $ref: '#/components/schemas/CastEmbed'
      - $ref: '#/components/schemas/UrlEmbed'
    ErrorResponse:
      example:
        presentable: true
        metadata:
          errcode:
          - errcode
          - errcode
        code: 5
        errCode: errCode
        name: name
        details: details
      properties:
        errCode:
          type: string
        presentable:
          type: boolean
        name:
          type: string
        code:
          type: integer
        details:
          type: string
        metadata:
          $ref: '#/components/schemas/ErrorResponse_metadata'
      type: object
    FarcasterNetwork:
      default: FARCASTER_NETWORK_MAINNET
      description: |-
        Farcaster network the message is intended for.
        - FARCASTER_NETWORK_MAINNET: Public primary network
         - FARCASTER_NETWORK_TESTNET: Public test network
         - FARCASTER_NETWORK_DEVNET: Private test network
      enum:
      - FARCASTER_NETWORK_MAINNET
      - FARCASTER_NETWORK_TESTNET
      - FARCASTER_NETWORK_DEVNET
      type: string
    FidsResponse:
      example:
        nextPageToken: nextPageToken
        fids:
        - 0
        - 0
      properties:
        fids:
          items:
            format: uint64
            type: integer
          type: array
        nextPageToken:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
      type: object
    FrameActionBody:
      description: A Farcaster Frame action
      properties:
        url:
          format: uri
          type: string
        buttonIndex:
          format: int32
          maximum: 4
          minimum: 1
          title: The index of the button pressed (1-4)
          type: integer
        castId:
          $ref: '#/components/schemas/CastId'
      type: object
    HashScheme:
      default: HASH_SCHEME_BLAKE3
      description: |
        Type of hashing scheme used to produce a digest of MessageData. - HASH_SCHEME_BLAKE3: Default scheme for hashing MessageData
      enum:
      - HASH_SCHEME_BLAKE3
      type: string
    HubEvent:
      discriminator:
        mapping:
          HUB_EVENT_TYPE_MERGE_MESSAGE: '#/components/schemas/HubEventMergeMessage'
          HUB_EVENT_TYPE_PRUNE_MESSAGE: '#/components/schemas/HubEventPruneMessage'
          HUB_EVENT_TYPE_REVOKE_MESSAGE: '#/components/schemas/HubEventRevokeMessage'
          HUB_EVENT_TYPE_MERGE_USERNAME_PROOF: '#/components/schemas/HubEventMergeUsernameProof'
          HUB_EVENT_TYPE_MERGE_ON_CHAIN_EVENT: '#/components/schemas/HubEventMergeOnChainEvent'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/HubEventMergeMessage'
      - $ref: '#/components/schemas/HubEventPruneMessage'
      - $ref: '#/components/schemas/HubEventRevokeMessage'
      - $ref: '#/components/schemas/HubEventMergeUsernameProof'
      - $ref: '#/components/schemas/HubEventMergeOnChainEvent'
    HubEventMergeMessage:
      example:
        mergeMessageBody:
          message:
            signatureScheme: SIGNATURE_SCHEME_ED25519
            data:
              fid: 2
              castAddBody:
                mentionsPositions:
                - 6
                - 6
                parentUrl: chain://eip155:1/erc721:0x39d89b649ffa044383333d297e325d42d31329b2
                embedsDeprecated:
                - embedsDeprecated
                - embedsDeprecated
                mentions:
                - 2
                - 2
                text: text
                parentCastId:
                  fid: 0
                  hash: hash
                embeds:
                - castId:
                    fid: 0
                    hash: hash
                - castId:
                    fid: 0
                    hash: hash
              timestamp: 48994466
              network: FARCASTER_NETWORK_MAINNET
            signature: signature
            hashScheme: HASH_SCHEME_BLAKE3
            hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
            signer: signer
          deletedMessages:
          - signatureScheme: SIGNATURE_SCHEME_ED25519
            data:
              fid: 2
              castAddBody:
                mentionsPositions:
                - 6
                - 6
                parentUrl: chain://eip155:1/erc721:0x39d89b649ffa044383333d297e325d42d31329b2
                embedsDeprecated:
                - embedsDeprecated
                - embedsDeprecated
                mentions:
                - 2
                - 2
                text: text
                parentCastId:
                  fid: 0
                  hash: hash
                embeds:
                - castId:
                    fid: 0
                    hash: hash
                - castId:
                    fid: 0
                    hash: hash
              timestamp: 48994466
              network: FARCASTER_NETWORK_MAINNET
            signature: signature
            hashScheme: HASH_SCHEME_BLAKE3
            hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
            signer: signer
          - signatureScheme: SIGNATURE_SCHEME_ED25519
            data:
              fid: 2
              castAddBody:
                mentionsPositions:
                - 6
                - 6
                parentUrl: chain://eip155:1/erc721:0x39d89b649ffa044383333d297e325d42d31329b2
                embedsDeprecated:
                - embedsDeprecated
                - embedsDeprecated
                mentions:
                - 2
                - 2
                text: text
                parentCastId:
                  fid: 0
                  hash: hash
                embeds:
                - castId:
                    fid: 0
                    hash: hash
                - castId:
                    fid: 0
                    hash: hash
              timestamp: 48994466
              network: FARCASTER_NETWORK_MAINNET
            signature: signature
            hashScheme: HASH_SCHEME_BLAKE3
            hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
            signer: signer
        id: 6
        type: HUB_EVENT_TYPE_MERGE_MESSAGE
      properties:
        type:
          example: HUB_EVENT_TYPE_MERGE_MESSAGE
          type: string
        id:
          format: uint64
          type: integer
        mergeMessageBody:
          $ref: '#/components/schemas/MergeMessageBody'
      type: object
    HubEventPruneMessage:
      properties:
        type:
          example: HUB_EVENT_TYPE_PRUNE_MESSAGE
          type: string
        id:
          format: uint64
          type: integer
        pruneMessageBody:
          $ref: '#/components/schemas/PruneMessageBody'
      type: object
    HubEventRevokeMessage:
      properties:
        type:
          example: HUB_EVENT_TYPE_REVOKE_MESSAGE
          type: string
        id:
          format: uint64
          type: integer
        revokeMessageBody:
          $ref: '#/components/schemas/RevokeMessageBody'
      type: object
    HubEventMergeUsernameProof:
      properties:
        type:
          example: HUB_EVENT_TYPE_MERGE_USERNAME_PROOF
          type: string
        id:
          format: uint64
          type: integer
        mergeUsernameProofBody:
          $ref: '#/components/schemas/MergeUserNameProofBody'
      type: object
    HubEventMergeOnChainEvent:
      properties:
        type:
          example: HUB_EVENT_TYPE_MERGE_ON_CHAIN_EVENT
          type: string
        id:
          format: uint64
          type: integer
        mergeOnChainEventBody:
          $ref: '#/components/schemas/MergeOnChainEventBody'
      type: object
    HubInfoResponse:
      example:
        dbStats:
          numFidEvents: 6
          numMessages: 0
          numFnameEvents: 1
        peerId: peerId
        nickname: nickname
        rootHash: rootHash
        isSyncing: true
        version: version
        hubOperatorFid: 5
      properties:
        version:
          type: string
        isSyncing:
          type: boolean
        nickname:
          type: string
        rootHash:
          type: string
        dbStats:
          $ref: '#/components/schemas/DbStats'
        peerId:
          type: string
        hubOperatorFid:
          format: uint64
          type: integer
      title: Response Types for the Sync RPC Methods
      type: object
    IdRegisterEventBody:
      example:
        from: 0x00000000fcd5a8e45785c8a4b9a718c9348e4f18
        to: 0x00000000fcd5a8e45785c8a4b9a718c9348e4f18
        eventType: ID_REGISTER_EVENT_TYPE_REGISTER
        recoveryAddress: 0x00000000fcd5a8e45785c8a4b9a718c9348e4f18
      properties:
        to:
          example: 0x00000000fcd5a8e45785c8a4b9a718c9348e4f18
          pattern: "^0x[a-fA-F0-9]*$"
          type: string
        eventType:
          $ref: '#/components/schemas/IdRegisterEventType'
        from:
          example: 0x00000000fcd5a8e45785c8a4b9a718c9348e4f18
          pattern: "^0x[a-fA-F0-9]*$|^$"
          type: string
        recoveryAddress:
          example: 0x00000000fcd5a8e45785c8a4b9a718c9348e4f18
          pattern: "^0x[a-fA-F0-9]*$"
          type: string
      type: object
    IdRegisterEventType:
      default: ID_REGISTER_EVENT_TYPE_REGISTER
      enum:
      - ID_REGISTER_EVENT_TYPE_REGISTER
      - ID_REGISTER_EVENT_TYPE_TRANSFER
      - ID_REGISTER_EVENT_TYPE_CHANGE_RECOVERY
      type: string
    LinkAdd:
      allOf:
      - $ref: '#/components/schemas/MessageCommon'
      - properties:
          data:
            $ref: '#/components/schemas/LinkAdd_allOf_data'
        type: object
      example:
        signatureScheme: SIGNATURE_SCHEME_ED25519
        data:
          fid: 2
          linkBody:
            targetFid: 6
            type: follow
            displayTimestamp: 0
          type: MESSAGE_TYPE_CAST_ADD
          timestamp: 48994466
          network: FARCASTER_NETWORK_MAINNET
        signature: signature
        hashScheme: HASH_SCHEME_BLAKE3
        hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
        signer: signer
    LinkBody:
      description: Adds or removes a Link
      example:
        targetFid: 6
        type: follow
        displayTimestamp: 0
      properties:
        type:
          $ref: '#/components/schemas/LinkType'
        displayTimestamp:
          format: int64
          title: User-defined timestamp that preserves original timestamp when message.data.timestamp
            needs to be updated for compaction
          type: integer
        targetFid:
          format: uint64
          title: The fid the link relates to
          type: integer
      type: object
    LinkRemove:
      allOf:
      - $ref: '#/components/schemas/MessageCommon'
      - properties:
          data:
            $ref: '#/components/schemas/LinkRemove_allOf_data'
        type: object
    LinkType:
      default: follow
      description: |-
        Type of Link.
        - follow: Follow another user
      enum:
      - follow
      type: string
    MergeMessageBody:
      example:
        message:
          signatureScheme: SIGNATURE_SCHEME_ED25519
          data:
            fid: 2
            castAddBody:
              mentionsPositions:
              - 6
              - 6
              parentUrl: chain://eip155:1/erc721:0x39d89b649ffa044383333d297e325d42d31329b2
              embedsDeprecated:
              - embedsDeprecated
              - embedsDeprecated
              mentions:
              - 2
              - 2
              text: text
              parentCastId:
                fid: 0
                hash: hash
              embeds:
              - castId:
                  fid: 0
                  hash: hash
              - castId:
                  fid: 0
                  hash: hash
            timestamp: 48994466
            network: FARCASTER_NETWORK_MAINNET
          signature: signature
          hashScheme: HASH_SCHEME_BLAKE3
          hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
          signer: signer
        deletedMessages:
        - signatureScheme: SIGNATURE_SCHEME_ED25519
          data:
            fid: 2
            castAddBody:
              mentionsPositions:
              - 6
              - 6
              parentUrl: chain://eip155:1/erc721:0x39d89b649ffa044383333d297e325d42d31329b2
              embedsDeprecated:
              - embedsDeprecated
              - embedsDeprecated
              mentions:
              - 2
              - 2
              text: text
              parentCastId:
                fid: 0
                hash: hash
              embeds:
              - castId:
                  fid: 0
                  hash: hash
              - castId:
                  fid: 0
                  hash: hash
            timestamp: 48994466
            network: FARCASTER_NETWORK_MAINNET
          signature: signature
          hashScheme: HASH_SCHEME_BLAKE3
          hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
          signer: signer
        - signatureScheme: SIGNATURE_SCHEME_ED25519
          data:
            fid: 2
            castAddBody:
              mentionsPositions:
              - 6
              - 6
              parentUrl: chain://eip155:1/erc721:0x39d89b649ffa044383333d297e325d42d31329b2
              embedsDeprecated:
              - embedsDeprecated
              - embedsDeprecated
              mentions:
              - 2
              - 2
              text: text
              parentCastId:
                fid: 0
                hash: hash
              embeds:
              - castId:
                  fid: 0
                  hash: hash
              - castId:
                  fid: 0
                  hash: hash
            timestamp: 48994466
            network: FARCASTER_NETWORK_MAINNET
          signature: signature
          hashScheme: HASH_SCHEME_BLAKE3
          hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
          signer: signer
      properties:
        message:
          $ref: '#/components/schemas/Message'
        deletedMessages:
          items:
            $ref: '#/components/schemas/Message'
          type: array
      type: object
    MergeOnChainEventBody:
      properties:
        onChainEvent:
          $ref: '#/components/schemas/OnChainEvent'
      type: object
    MergeUserNameProofBody:
      properties:
        usernameProof:
          $ref: '#/components/schemas/UserNameProof'
        deletedUsernameProof:
          $ref: '#/components/schemas/UserNameProof'
        usernameProofMessage:
          $ref: '#/components/schemas/Message'
        deletedUsernameProofMessage:
          $ref: '#/components/schemas/Message'
      type: object
    Message:
      allOf:
      - properties:
          data:
            $ref: '#/components/schemas/Message_allOf_data'
        type: object
      - $ref: '#/components/schemas/MessageCommon'
      description: "* \nA Message is a delta operation on the Farcaster network. The\
        \ message protobuf is an envelope \nthat wraps a MessageData object and contains\
        \ a hash and signature which can verify its authenticity."
      example:
        signatureScheme: SIGNATURE_SCHEME_ED25519
        data:
          fid: 2
          castAddBody:
            mentionsPositions:
            - 6
            - 6
            parentUrl: chain://eip155:1/erc721:0x39d89b649ffa044383333d297e325d42d31329b2
            embedsDeprecated:
            - embedsDeprecated
            - embedsDeprecated
            mentions:
            - 2
            - 2
            text: text
            parentCastId:
              fid: 0
              hash: hash
            embeds:
            - castId:
                fid: 0
                hash: hash
            - castId:
                fid: 0
                hash: hash
          timestamp: 48994466
          network: FARCASTER_NETWORK_MAINNET
        signature: signature
        hashScheme: HASH_SCHEME_BLAKE3
        hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
        signer: signer
    MessageCommon:
      properties:
        hash:
          example: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
          pattern: "^0x[0-9a-fA-F]{40}$"
          title: Hash digest of data
          type: string
        hashScheme:
          $ref: '#/components/schemas/HashScheme'
        signature:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          title: Signature of the hash digest
          type: string
        signatureScheme:
          $ref: '#/components/schemas/SignatureScheme'
        signer:
          pattern: "^0x[0-9a-fA-F]+$"
          title: Public key or address of the key pair that produced the signature
          type: string
      type: object
    MessageDataCommon:
      properties:
        fid:
          example: 2
          format: uint64
          title: Farcaster ID of the user producing the message
          type: integer
        timestamp:
          example: 48994466
          format: int64
          title: Farcaster epoch timestamp in seconds
          type: integer
        network:
          $ref: '#/components/schemas/FarcasterNetwork'
      type: object
    MessageDataCastAdd:
      allOf:
      - $ref: '#/components/schemas/MessageDataCommon'
      - properties:
          castAddBody:
            $ref: '#/components/schemas/CastAddBody'
        type: object
      example:
        fid: 2
        castAddBody:
          mentionsPositions:
          - 6
          - 6
          parentUrl: chain://eip155:1/erc721:0x39d89b649ffa044383333d297e325d42d31329b2
          embedsDeprecated:
          - embedsDeprecated
          - embedsDeprecated
          mentions:
          - 2
          - 2
          text: text
          parentCastId:
            fid: 0
            hash: hash
          embeds:
          - castId:
              fid: 0
              hash: hash
          - castId:
              fid: 0
              hash: hash
        timestamp: 48994466
        network: FARCASTER_NETWORK_MAINNET
    MessageDataCastRemove:
      allOf:
      - $ref: '#/components/schemas/MessageDataCommon'
      - properties:
          castRemoveBody:
            $ref: '#/components/schemas/CastRemoveBody'
        type: object
    MessageDataFrameAction:
      allOf:
      - $ref: '#/components/schemas/MessageDataCommon'
      - properties:
          frameActionBody:
            $ref: '#/components/schemas/FrameActionBody'
        type: object
    MessageDataLink:
      allOf:
      - $ref: '#/components/schemas/MessageDataCommon'
      - properties:
          linkBody:
            $ref: '#/components/schemas/LinkBody'
        type: object
    MessageDataReaction:
      allOf:
      - $ref: '#/components/schemas/MessageDataCommon'
      - properties:
          reactionBody:
            $ref: '#/components/schemas/ReactionBody'
        type: object
    MessageDataUserDataAdd:
      allOf:
      - $ref: '#/components/schemas/MessageDataCommon'
      - properties:
          userDataBody:
            $ref: '#/components/schemas/UserDataBody'
        type: object
    MessageDataUsernameProof:
      allOf:
      - $ref: '#/components/schemas/MessageDataCommon'
      - properties:
          usernameProofBody:
            $ref: '#/components/schemas/UserNameProof'
        type: object
    MessageDataVerificationAdd:
      allOf:
      - $ref: '#/components/schemas/MessageDataCommon'
      - properties:
          verificationAddEthAddressBody:
            $ref: '#/components/schemas/VerificationAddEthAddressBody'
        type: object
    MessageDataVerificationRemove:
      allOf:
      - $ref: '#/components/schemas/MessageDataCommon'
      - properties:
          verificationRemoveBody:
            $ref: '#/components/schemas/VerificationRemoveBody'
        type: object
    MessageType:
      default: MESSAGE_TYPE_CAST_ADD
      description: |-
        Type of the MessageBody.
         - MESSAGE_TYPE_CAST_ADD: Add a new Cast
         - MESSAGE_TYPE_CAST_REMOVE: Remove an existing Cast
         - MESSAGE_TYPE_REACTION_ADD: Add a Reaction to a Cast
         - MESSAGE_TYPE_REACTION_REMOVE: Remove a Reaction from a Cast
         - MESSAGE_TYPE_LINK_ADD: Add a new Link
         - MESSAGE_TYPE_LINK_REMOVE: Remove an existing Link
         - MESSAGE_TYPE_VERIFICATION_ADD_ETH_ADDRESS: Add a Verification of an Ethereum Address
         - MESSAGE_TYPE_VERIFICATION_REMOVE: Remove a Verification
         - MESSAGE_TYPE_USER_DATA_ADD: Add metadata about a user
         - MESSAGE_TYPE_USERNAME_PROOF: Add or replace a username proof
         - MESSAGE_TYPE_FRAME_ACTION: A Farcaster Frame action
      enum:
      - MESSAGE_TYPE_CAST_ADD
      - MESSAGE_TYPE_CAST_REMOVE
      - MESSAGE_TYPE_REACTION_ADD
      - MESSAGE_TYPE_REACTION_REMOVE
      - MESSAGE_TYPE_LINK_ADD
      - MESSAGE_TYPE_LINK_REMOVE
      - MESSAGE_TYPE_VERIFICATION_ADD_ETH_ADDRESS
      - MESSAGE_TYPE_VERIFICATION_REMOVE
      - MESSAGE_TYPE_USER_DATA_ADD
      - MESSAGE_TYPE_USERNAME_PROOF
      - MESSAGE_TYPE_FRAME_ACTION
      type: string
    OnChainEvent:
      discriminator:
        mapping:
          EVENT_TYPE_SIGNER: '#/components/schemas/OnChainEventSigner'
          EVENT_TYPE_SIGNER_MIGRATED: '#/components/schemas/OnChainEventSignerMigrated'
          EVENT_TYPE_ID_REGISTER: '#/components/schemas/OnChainEventIdRegister'
          EVENT_TYPE_STORAGE_RENT: '#/components/schemas/OnChainEventStorageRent'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/OnChainEventSigner'
      - $ref: '#/components/schemas/OnChainEventSignerMigrated'
      - $ref: '#/components/schemas/OnChainEventIdRegister'
      - $ref: '#/components/schemas/OnChainEventStorageRent'
    OnChainEventCommon:
      properties:
        type:
          example: EVENT_TYPE_SIGNER
          type: string
        chainId:
          type: integer
        blockNumber:
          type: integer
        blockHash:
          example: 0x75fbbb8b2a4ede67ac350e1b0503c6a152c0091bd8e3ef4a6927d58e088eae28
          type: string
        blockTimestamp:
          type: integer
        transactionHash:
          example: 0x36ef79e6c460e6ae251908be13116ff0065960adb1ae032b4cc65a8352f28952
          type: string
        logIndex:
          type: integer
        txIndex:
          type: integer
        fid:
          type: integer
      type: object
    OnChainEventSigner:
      allOf:
      - $ref: '#/components/schemas/OnChainEventCommon'
      - properties:
          signerEventBody:
            $ref: '#/components/schemas/SignerEventBody'
        type: object
      example:
        fid: 2
        blockHash: 0x75fbbb8b2a4ede67ac350e1b0503c6a152c0091bd8e3ef4a6927d58e088eae28
        logIndex: 5
        chainId: 0
        blockNumber: 6
        blockTimestamp: 1
        type: EVENT_TYPE_SIGNER
        transactionHash: 0x36ef79e6c460e6ae251908be13116ff0065960adb1ae032b4cc65a8352f28952
        txIndex: 5
        signerEventBody:
          metadata: metadata
          eventType: SIGNER_EVENT_TYPE_ADD
          keyType: 7
          key: key
          metadataType: 9
    OnChainEventSignerMigrated:
      allOf:
      - $ref: '#/components/schemas/OnChainEventCommon'
      - properties:
          signerMigratedEventBody:
            $ref: '#/components/schemas/SignerMigratedEventBody'
        type: object
    OnChainEventIdRegister:
      allOf:
      - $ref: '#/components/schemas/OnChainEventCommon'
      - properties:
          idRegisterEventBody:
            $ref: '#/components/schemas/IdRegisterEventBody'
        type: object
      example:
        fid: 2
        blockHash: 0x75fbbb8b2a4ede67ac350e1b0503c6a152c0091bd8e3ef4a6927d58e088eae28
        logIndex: 5
        chainId: 0
        blockNumber: 6
        idRegisterEventBody:
          from: 0x00000000fcd5a8e45785c8a4b9a718c9348e4f18
          to: 0x00000000fcd5a8e45785c8a4b9a718c9348e4f18
          eventType: ID_REGISTER_EVENT_TYPE_REGISTER
          recoveryAddress: 0x00000000fcd5a8e45785c8a4b9a718c9348e4f18
        blockTimestamp: 1
        type: EVENT_TYPE_SIGNER
        transactionHash: 0x36ef79e6c460e6ae251908be13116ff0065960adb1ae032b4cc65a8352f28952
        txIndex: 5
    OnChainEventStorageRent:
      allOf:
      - $ref: '#/components/schemas/OnChainEventCommon'
      - properties:
          storageRentEventBody:
            $ref: '#/components/schemas/StorageRentEventBody'
        type: object
    OnChainEventType:
      default: EVENT_TYPE_SIGNER
      enum:
      - EVENT_TYPE_SIGNER
      - EVENT_TYPE_SIGNER_MIGRATED
      - EVENT_TYPE_ID_REGISTER
      - EVENT_TYPE_STORAGE_RENT
      type: string
    PruneMessageBody:
      properties:
        message:
          $ref: '#/components/schemas/Message'
      type: object
    Reaction:
      allOf:
      - $ref: '#/components/schemas/MessageCommon'
      - properties:
          data:
            $ref: '#/components/schemas/Reaction_allOf_data'
        type: object
      example:
        signatureScheme: SIGNATURE_SCHEME_ED25519
        data:
          fid: 2
          reactionBody:
            targetCastId:
              fid: 0
              hash: hash
            type: REACTION_TYPE_LIKE
            targetUrl: targetUrl
          type: MESSAGE_TYPE_CAST_ADD
          timestamp: 48994466
          network: FARCASTER_NETWORK_MAINNET
        signature: signature
        hashScheme: HASH_SCHEME_BLAKE3
        hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
        signer: signer
    ReactionBody:
      description: Adds or removes a Reaction from a Cast
      example:
        targetCastId:
          fid: 0
          hash: hash
        type: REACTION_TYPE_LIKE
        targetUrl: targetUrl
      properties:
        type:
          $ref: '#/components/schemas/ReactionType'
        targetCastId:
          $ref: '#/components/schemas/CastId'
        targetUrl:
          title: URL to react to
          type: string
      type: object
    ReactionRemove:
      allOf:
      - $ref: '#/components/schemas/MessageCommon'
      - properties:
          data:
            $ref: '#/components/schemas/MessageDataReaction'
        type: object
    ReactionType:
      default: REACTION_TYPE_LIKE
      description: |-
        Type of Reaction.
        - REACTION_TYPE_LIKE: Like the target cast
         - REACTION_TYPE_RECAST: Share target cast to the user's audience
      enum:
      - REACTION_TYPE_LIKE
      - REACTION_TYPE_RECAST
      type: string
    RevokeMessageBody:
      properties:
        message:
          $ref: '#/components/schemas/Message'
      type: object
    SignatureScheme:
      default: SIGNATURE_SCHEME_ED25519
      description: |-
        Type of signature scheme used to sign the Message hash
        - SIGNATURE_SCHEME_ED25519: Ed25519 signature (default)
         - SIGNATURE_SCHEME_EIP712: ECDSA signature using EIP-712 scheme
      enum:
      - SIGNATURE_SCHEME_ED25519
      - SIGNATURE_SCHEME_EIP712
      type: string
    SignerEventBody:
      example:
        metadata: metadata
        eventType: SIGNER_EVENT_TYPE_ADD
        keyType: 7
        key: key
        metadataType: 9
      properties:
        key:
          pattern: "^0x[a-fA-F0-9]{64}$"
          type: string
        keyType:
          format: int64
          type: integer
        eventType:
          $ref: '#/components/schemas/SignerEventType'
        metadata:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        metadataType:
          format: int64
          type: integer
      type: object
    SignerEventType:
      default: SIGNER_EVENT_TYPE_ADD
      enum:
      - SIGNER_EVENT_TYPE_ADD
      - SIGNER_EVENT_TYPE_REMOVE
      - SIGNER_EVENT_TYPE_ADMIN_RESET
      type: string
    SignerMigratedEventBody:
      properties:
        migratedAt:
          format: int64
          type: integer
      type: object
    StorageLimit:
      example:
        storeType: STORE_TYPE_CASTS
        limit: 0
      properties:
        storeType:
          $ref: '#/components/schemas/StoreType'
        limit:
          format: uint64
          type: integer
      type: object
    StorageLimitsResponse:
      example:
        limits:
        - storeType: STORE_TYPE_CASTS
          limit: 0
        - storeType: STORE_TYPE_CASTS
          limit: 0
      properties:
        limits:
          items:
            $ref: '#/components/schemas/StorageLimit'
          type: array
      type: object
    StorageRentEventBody:
      properties:
        payer:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        units:
          format: int64
          type: integer
        expiry:
          format: int64
          type: integer
      type: object
    StoreType:
      default: STORE_TYPE_CASTS
      enum:
      - STORE_TYPE_CASTS
      - STORE_TYPE_LINKS
      - STORE_TYPE_REACTIONS
      - STORE_TYPE_USER_DATA
      - STORE_TYPE_VERIFICATIONS
      - STORE_TYPE_USERNAME_PROOFS
      type: string
    UrlEmbed:
      properties:
        url:
          format: uri
          type: string
      type: object
    UserDataAdd:
      allOf:
      - $ref: '#/components/schemas/MessageCommon'
      - properties:
          data:
            $ref: '#/components/schemas/UserDataAdd_allOf_data'
        type: object
      example:
        signatureScheme: SIGNATURE_SCHEME_ED25519
        data:
          fid: 2
          userDataBody:
            type: USER_DATA_TYPE_PFP
            value: value
          type: MESSAGE_TYPE_CAST_ADD
          timestamp: 48994466
          network: FARCASTER_NETWORK_MAINNET
        signature: signature
        hashScheme: HASH_SCHEME_BLAKE3
        hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
        signer: signer
    UserDataBody:
      description: Adds metadata about a user
      example:
        type: USER_DATA_TYPE_PFP
        value: value
      properties:
        type:
          $ref: '#/components/schemas/UserDataType'
        value:
          title: Value of the metadata
          type: string
      type: object
    UserDataType:
      default: USER_DATA_TYPE_PFP
      description: |-
        Type of UserData.
        - USER_DATA_TYPE_PFP: Profile Picture for the user
         - USER_DATA_TYPE_DISPLAY: Display Name for the user
         - USER_DATA_TYPE_BIO: Bio for the user
         - USER_DATA_TYPE_URL: URL of the user
         - USER_DATA_TYPE_USERNAME: Preferred Name for the user
      enum:
      - USER_DATA_TYPE_PFP
      - USER_DATA_TYPE_DISPLAY
      - USER_DATA_TYPE_BIO
      - USER_DATA_TYPE_URL
      - USER_DATA_TYPE_USERNAME
      type: string
    UserNameProof:
      example:
        owner: owner
        fid: 6
        signature: signature
        name: gavi
        type: USERNAME_TYPE_FNAME
        timestamp: 0
      properties:
        timestamp:
          format: uint64
          type: integer
        name:
          example: gavi
          type: string
        owner:
          pattern: "^0x[0-9a-fA-F]{40}$"
          type: string
        signature:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        fid:
          format: uint64
          type: integer
        type:
          $ref: '#/components/schemas/UserNameType'
      type: object
    UsernameProofsResponse:
      example:
        proofs:
        - owner: owner
          fid: 6
          signature: signature
          name: gavi
          type: USERNAME_TYPE_FNAME
          timestamp: 0
        - owner: owner
          fid: 6
          signature: signature
          name: gavi
          type: USERNAME_TYPE_FNAME
          timestamp: 0
      properties:
        proofs:
          items:
            $ref: '#/components/schemas/UserNameProof'
          type: array
      type: object
    UserNameType:
      default: USERNAME_TYPE_FNAME
      enum:
      - USERNAME_TYPE_FNAME
      - USERNAME_TYPE_ENS_L1
      type: string
    ValidateMessageResponse:
      example:
        valid: true
        message:
          signatureScheme: SIGNATURE_SCHEME_ED25519
          data:
            fid: 2
            castAddBody:
              mentionsPositions:
              - 6
              - 6
              parentUrl: chain://eip155:1/erc721:0x39d89b649ffa044383333d297e325d42d31329b2
              embedsDeprecated:
              - embedsDeprecated
              - embedsDeprecated
              mentions:
              - 2
              - 2
              text: text
              parentCastId:
                fid: 0
                hash: hash
              embeds:
              - castId:
                  fid: 0
                  hash: hash
              - castId:
                  fid: 0
                  hash: hash
            timestamp: 48994466
            network: FARCASTER_NETWORK_MAINNET
          signature: signature
          hashScheme: HASH_SCHEME_BLAKE3
          hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
          signer: signer
      properties:
        valid:
          type: boolean
        message:
          $ref: '#/components/schemas/Message'
      type: object
    Verification:
      allOf:
      - $ref: '#/components/schemas/MessageCommon'
      - properties:
          data:
            $ref: '#/components/schemas/Verification_allOf_data'
        type: object
      example:
        signatureScheme: SIGNATURE_SCHEME_ED25519
        data:
          fid: 2
          verificationAddEthAddressBody:
            blockHash: blockHash
            address: address
            ethSignature: ethSignature
          type: MESSAGE_TYPE_CAST_ADD
          timestamp: 48994466
          network: FARCASTER_NETWORK_MAINNET
        signature: signature
        hashScheme: HASH_SCHEME_BLAKE3
        hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
        signer: signer
    VerificationAddEthAddressBody:
      description: Adds a Verification of ownership of an Ethereum Address
      example:
        blockHash: blockHash
        address: address
        ethSignature: ethSignature
      properties:
        address:
          pattern: "^(?:0x[a-fA-F0-9]{40}|[1-9A-HJ-NP-Za-km-z]{32,44})$"
          title: Ethereum/Solana address being verified
          type: string
        ethSignature:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          title: Signature produced by the user's Ethereum/Solana address
          type: string
        blockHash:
          pattern: "^(0x[a-fA-F0-9]{64}|[1-9A-HJ-NP-Za-km-z]{44})$"
          title: Hash of the latest Ethereum/Solana block when the signature was produced
          type: string
      type: object
    VerificationRemove:
      allOf:
      - $ref: '#/components/schemas/MessageCommon'
      - properties:
          data:
            $ref: '#/components/schemas/VerificationRemove_allOf_data'
        type: object
    VerificationRemoveBody:
      description: Removes a Verification of any type
      properties:
        address:
          pattern: "^0x[A-Za-z0-9]{40}$"
          title: Address of the Verification to remove
          type: string
      type: object
    ListCastsByFid_200_response:
      example:
        nextPageToken: nextPageToken
        messages:
        - signatureScheme: SIGNATURE_SCHEME_ED25519
          data:
            fid: 2
            castAddBody:
              mentionsPositions:
              - 6
              - 6
              parentUrl: chain://eip155:1/erc721:0x39d89b649ffa044383333d297e325d42d31329b2
              embedsDeprecated:
              - embedsDeprecated
              - embedsDeprecated
              mentions:
              - 2
              - 2
              text: text
              parentCastId:
                fid: 0
                hash: hash
              embeds:
              - castId:
                  fid: 0
                  hash: hash
              - castId:
                  fid: 0
                  hash: hash
            type: MESSAGE_TYPE_CAST_ADD
            timestamp: 48994466
            network: FARCASTER_NETWORK_MAINNET
          signature: signature
          hashScheme: HASH_SCHEME_BLAKE3
          hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
          signer: signer
        - signatureScheme: SIGNATURE_SCHEME_ED25519
          data:
            fid: 2
            castAddBody:
              mentionsPositions:
              - 6
              - 6
              parentUrl: chain://eip155:1/erc721:0x39d89b649ffa044383333d297e325d42d31329b2
              embedsDeprecated:
              - embedsDeprecated
              - embedsDeprecated
              mentions:
              - 2
              - 2
              text: text
              parentCastId:
                fid: 0
                hash: hash
              embeds:
              - castId:
                  fid: 0
                  hash: hash
              - castId:
                  fid: 0
                  hash: hash
            type: MESSAGE_TYPE_CAST_ADD
            timestamp: 48994466
            network: FARCASTER_NETWORK_MAINNET
          signature: signature
          hashScheme: HASH_SCHEME_BLAKE3
          hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
          signer: signer
      properties:
        messages:
          items:
            $ref: '#/components/schemas/CastAdd'
          type: array
        nextPageToken:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
      type: object
    ListReactionsByCast_200_response:
      example:
        nextPageToken: nextPageToken
        messages:
        - signatureScheme: SIGNATURE_SCHEME_ED25519
          data:
            fid: 2
            reactionBody:
              targetCastId:
                fid: 0
                hash: hash
              type: REACTION_TYPE_LIKE
              targetUrl: targetUrl
            type: MESSAGE_TYPE_CAST_ADD
            timestamp: 48994466
            network: FARCASTER_NETWORK_MAINNET
          signature: signature
          hashScheme: HASH_SCHEME_BLAKE3
          hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
          signer: signer
        - signatureScheme: SIGNATURE_SCHEME_ED25519
          data:
            fid: 2
            reactionBody:
              targetCastId:
                fid: 0
                hash: hash
              type: REACTION_TYPE_LIKE
              targetUrl: targetUrl
            type: MESSAGE_TYPE_CAST_ADD
            timestamp: 48994466
            network: FARCASTER_NETWORK_MAINNET
          signature: signature
          hashScheme: HASH_SCHEME_BLAKE3
          hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
          signer: signer
      properties:
        messages:
          items:
            $ref: '#/components/schemas/Reaction'
          type: array
        nextPageToken:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
      type: object
    ListLinksByFid_200_response:
      example:
        nextPageToken: nextPageToken
        messages:
        - signatureScheme: SIGNATURE_SCHEME_ED25519
          data:
            fid: 2
            linkBody:
              targetFid: 6
              type: follow
              displayTimestamp: 0
            type: MESSAGE_TYPE_CAST_ADD
            timestamp: 48994466
            network: FARCASTER_NETWORK_MAINNET
          signature: signature
          hashScheme: HASH_SCHEME_BLAKE3
          hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
          signer: signer
        - signatureScheme: SIGNATURE_SCHEME_ED25519
          data:
            fid: 2
            linkBody:
              targetFid: 6
              type: follow
              displayTimestamp: 0
            type: MESSAGE_TYPE_CAST_ADD
            timestamp: 48994466
            network: FARCASTER_NETWORK_MAINNET
          signature: signature
          hashScheme: HASH_SCHEME_BLAKE3
          hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
          signer: signer
      properties:
        messages:
          items:
            $ref: '#/components/schemas/LinkAdd'
          type: array
        nextPageToken:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
      type: object
    GetUserDataByFid_200_response_oneOf:
      properties:
        messages:
          items:
            $ref: '#/components/schemas/UserDataAdd'
          type: array
        nextPageToken:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
      type: object
    GetUserDataByFid_200_response:
      oneOf:
      - $ref: '#/components/schemas/UserDataAdd'
      - $ref: '#/components/schemas/GetUserDataByFid_200_response_oneOf'
    ListVerificationsByFid_200_response:
      example:
        nextPageToken: nextPageToken
        messages:
        - signatureScheme: SIGNATURE_SCHEME_ED25519
          data:
            fid: 2
            verificationAddEthAddressBody:
              blockHash: blockHash
              address: address
              ethSignature: ethSignature
            type: MESSAGE_TYPE_CAST_ADD
            timestamp: 48994466
            network: FARCASTER_NETWORK_MAINNET
          signature: signature
          hashScheme: HASH_SCHEME_BLAKE3
          hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
          signer: signer
        - signatureScheme: SIGNATURE_SCHEME_ED25519
          data:
            fid: 2
            verificationAddEthAddressBody:
              blockHash: blockHash
              address: address
              ethSignature: ethSignature
            type: MESSAGE_TYPE_CAST_ADD
            timestamp: 48994466
            network: FARCASTER_NETWORK_MAINNET
          signature: signature
          hashScheme: HASH_SCHEME_BLAKE3
          hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
          signer: signer
      properties:
        messages:
          items:
            $ref: '#/components/schemas/Verification'
          type: array
        nextPageToken:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
      type: object
    ListOnChainEventsByFid_200_response:
      example:
        events:
        - fid: 2
          blockHash: 0x75fbbb8b2a4ede67ac350e1b0503c6a152c0091bd8e3ef4a6927d58e088eae28
          logIndex: 5
          chainId: 0
          blockNumber: 6
          blockTimestamp: 1
          type: EVENT_TYPE_SIGNER
          transactionHash: 0x36ef79e6c460e6ae251908be13116ff0065960adb1ae032b4cc65a8352f28952
          txIndex: 5
          signerEventBody:
            metadata: metadata
            eventType: SIGNER_EVENT_TYPE_ADD
            keyType: 7
            key: key
            metadataType: 9
        - fid: 2
          blockHash: 0x75fbbb8b2a4ede67ac350e1b0503c6a152c0091bd8e3ef4a6927d58e088eae28
          logIndex: 5
          chainId: 0
          blockNumber: 6
          blockTimestamp: 1
          type: EVENT_TYPE_SIGNER
          transactionHash: 0x36ef79e6c460e6ae251908be13116ff0065960adb1ae032b4cc65a8352f28952
          txIndex: 5
          signerEventBody:
            metadata: metadata
            eventType: SIGNER_EVENT_TYPE_ADD
            keyType: 7
            key: key
            metadataType: 9
      properties:
        events:
          items:
            $ref: '#/components/schemas/OnChainEvent'
          type: array
      type: object
    ListOnChainSignersByFid_200_response_oneOf:
      properties:
        events:
          items:
            $ref: '#/components/schemas/OnChainEventSigner'
          type: array
      type: object
    ListOnChainSignersByFid_200_response:
      oneOf:
      - $ref: '#/components/schemas/OnChainEventSigner'
      - $ref: '#/components/schemas/ListOnChainSignersByFid_200_response_oneOf'
    ListEvents_200_response:
      example:
        nextPageEventId: 0
        events:
        - mergeMessageBody:
            message:
              signatureScheme: SIGNATURE_SCHEME_ED25519
              data:
                fid: 2
                castAddBody:
                  mentionsPositions:
                  - 6
                  - 6
                  parentUrl: chain://eip155:1/erc721:0x39d89b649ffa044383333d297e325d42d31329b2
                  embedsDeprecated:
                  - embedsDeprecated
                  - embedsDeprecated
                  mentions:
                  - 2
                  - 2
                  text: text
                  parentCastId:
                    fid: 0
                    hash: hash
                  embeds:
                  - castId:
                      fid: 0
                      hash: hash
                  - castId:
                      fid: 0
                      hash: hash
                timestamp: 48994466
                network: FARCASTER_NETWORK_MAINNET
              signature: signature
              hashScheme: HASH_SCHEME_BLAKE3
              hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
              signer: signer
            deletedMessages:
            - signatureScheme: SIGNATURE_SCHEME_ED25519
              data:
                fid: 2
                castAddBody:
                  mentionsPositions:
                  - 6
                  - 6
                  parentUrl: chain://eip155:1/erc721:0x39d89b649ffa044383333d297e325d42d31329b2
                  embedsDeprecated:
                  - embedsDeprecated
                  - embedsDeprecated
                  mentions:
                  - 2
                  - 2
                  text: text
                  parentCastId:
                    fid: 0
                    hash: hash
                  embeds:
                  - castId:
                      fid: 0
                      hash: hash
                  - castId:
                      fid: 0
                      hash: hash
                timestamp: 48994466
                network: FARCASTER_NETWORK_MAINNET
              signature: signature
              hashScheme: HASH_SCHEME_BLAKE3
              hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
              signer: signer
            - signatureScheme: SIGNATURE_SCHEME_ED25519
              data:
                fid: 2
                castAddBody:
                  mentionsPositions:
                  - 6
                  - 6
                  parentUrl: chain://eip155:1/erc721:0x39d89b649ffa044383333d297e325d42d31329b2
                  embedsDeprecated:
                  - embedsDeprecated
                  - embedsDeprecated
                  mentions:
                  - 2
                  - 2
                  text: text
                  parentCastId:
                    fid: 0
                    hash: hash
                  embeds:
                  - castId:
                      fid: 0
                      hash: hash
                  - castId:
                      fid: 0
                      hash: hash
                timestamp: 48994466
                network: FARCASTER_NETWORK_MAINNET
              signature: signature
              hashScheme: HASH_SCHEME_BLAKE3
              hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
              signer: signer
          id: 6
          type: HUB_EVENT_TYPE_MERGE_MESSAGE
        - mergeMessageBody:
            message:
              signatureScheme: SIGNATURE_SCHEME_ED25519
              data:
                fid: 2
                castAddBody:
                  mentionsPositions:
                  - 6
                  - 6
                  parentUrl: chain://eip155:1/erc721:0x39d89b649ffa044383333d297e325d42d31329b2
                  embedsDeprecated:
                  - embedsDeprecated
                  - embedsDeprecated
                  mentions:
                  - 2
                  - 2
                  text: text
                  parentCastId:
                    fid: 0
                    hash: hash
                  embeds:
                  - castId:
                      fid: 0
                      hash: hash
                  - castId:
                      fid: 0
                      hash: hash
                timestamp: 48994466
                network: FARCASTER_NETWORK_MAINNET
              signature: signature
              hashScheme: HASH_SCHEME_BLAKE3
              hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
              signer: signer
            deletedMessages:
            - signatureScheme: SIGNATURE_SCHEME_ED25519
              data:
                fid: 2
                castAddBody:
                  mentionsPositions:
                  - 6
                  - 6
                  parentUrl: chain://eip155:1/erc721:0x39d89b649ffa044383333d297e325d42d31329b2
                  embedsDeprecated:
                  - embedsDeprecated
                  - embedsDeprecated
                  mentions:
                  - 2
                  - 2
                  text: text
                  parentCastId:
                    fid: 0
                    hash: hash
                  embeds:
                  - castId:
                      fid: 0
                      hash: hash
                  - castId:
                      fid: 0
                      hash: hash
                timestamp: 48994466
                network: FARCASTER_NETWORK_MAINNET
              signature: signature
              hashScheme: HASH_SCHEME_BLAKE3
              hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
              signer: signer
            - signatureScheme: SIGNATURE_SCHEME_ED25519
              data:
                fid: 2
                castAddBody:
                  mentionsPositions:
                  - 6
                  - 6
                  parentUrl: chain://eip155:1/erc721:0x39d89b649ffa044383333d297e325d42d31329b2
                  embedsDeprecated:
                  - embedsDeprecated
                  - embedsDeprecated
                  mentions:
                  - 2
                  - 2
                  text: text
                  parentCastId:
                    fid: 0
                    hash: hash
                  embeds:
                  - castId:
                      fid: 0
                      hash: hash
                  - castId:
                      fid: 0
                      hash: hash
                timestamp: 48994466
                network: FARCASTER_NETWORK_MAINNET
              signature: signature
              hashScheme: HASH_SCHEME_BLAKE3
              hash: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
              signer: signer
          id: 6
          type: HUB_EVENT_TYPE_MERGE_MESSAGE
      properties:
        nextPageEventId:
          type: integer
        events:
          items:
            $ref: '#/components/schemas/HubEvent'
          type: array
      type: object
    CastAdd_allOf_data:
      allOf:
      - $ref: '#/components/schemas/MessageDataCastAdd'
      - properties:
          type:
            $ref: '#/components/schemas/MessageType'
        type: object
      example:
        fid: 2
        castAddBody:
          mentionsPositions:
          - 6
          - 6
          parentUrl: chain://eip155:1/erc721:0x39d89b649ffa044383333d297e325d42d31329b2
          embedsDeprecated:
          - embedsDeprecated
          - embedsDeprecated
          mentions:
          - 2
          - 2
          text: text
          parentCastId:
            fid: 0
            hash: hash
          embeds:
          - castId:
              fid: 0
              hash: hash
          - castId:
              fid: 0
              hash: hash
        type: MESSAGE_TYPE_CAST_ADD
        timestamp: 48994466
        network: FARCASTER_NETWORK_MAINNET
    CastRemove_allOf_data:
      allOf:
      - $ref: '#/components/schemas/MessageDataCastRemove'
      - properties:
          type:
            $ref: '#/components/schemas/MessageType'
        type: object
    ErrorResponse_metadata:
      example:
        errcode:
        - errcode
        - errcode
      properties:
        errcode:
          items:
            type: string
          type: array
      type: object
    LinkAdd_allOf_data:
      allOf:
      - $ref: '#/components/schemas/MessageDataLink'
      - properties:
          type:
            $ref: '#/components/schemas/MessageType'
        type: object
      example:
        fid: 2
        linkBody:
          targetFid: 6
          type: follow
          displayTimestamp: 0
        type: MESSAGE_TYPE_CAST_ADD
        timestamp: 48994466
        network: FARCASTER_NETWORK_MAINNET
    LinkRemove_allOf_data:
      allOf:
      - $ref: '#/components/schemas/MessageDataLink'
      - properties:
          type:
            $ref: '#/components/schemas/MessageType'
        type: object
    Message_allOf_data:
      discriminator:
        mapping:
          MESSAGE_TYPE_CAST_ADD: '#/components/schemas/MessageDataCastAdd'
          MESSAGE_TYPE_CAST_REMOVE: '#/components/schemas/MessageDataCastRemove'
          MESSAGE_TYPE_REACTION_ADD: '#/components/schemas/MessageDataReaction'
          MESSAGE_TYPE_REACTION_REMOVE: '#/components/schemas/MessageDataReaction'
          MESSAGE_TYPE_LINK_ADD: '#/components/schemas/MessageDataLink'
          MESSAGE_TYPE_LINK_REMOVE: '#/components/schemas/MessageDataLink'
          MESSAGE_TYPE_VERIFICATION_ADD_ETH_ADDRESS: '#/components/schemas/MessageDataVerificationAdd'
          MESSAGE_TYPE_VERIFICATION_REMOVE: '#/components/schemas/MessageDataVerificationRemove'
          MESSAGE_TYPE_USER_DATA_ADD: '#/components/schemas/MessageDataUserDataAdd'
          MESSAGE_TYPE_USERNAME_PROOF: '#/components/schemas/MessageDataUsernameProof'
          MESSAGE_TYPE_FRAME_ACTION: '#/components/schemas/MessageDataFrameAction'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/MessageDataCastAdd'
      - $ref: '#/components/schemas/MessageDataCastRemove'
      - $ref: '#/components/schemas/MessageDataReaction'
      - $ref: '#/components/schemas/MessageDataLink'
      - $ref: '#/components/schemas/MessageDataVerificationAdd'
      - $ref: '#/components/schemas/MessageDataVerificationRemove'
      - $ref: '#/components/schemas/MessageDataUserDataAdd'
      - $ref: '#/components/schemas/MessageDataUsernameProof'
      - $ref: '#/components/schemas/MessageDataFrameAction'
    Reaction_allOf_data:
      allOf:
      - $ref: '#/components/schemas/MessageDataReaction'
      - properties:
          type:
            $ref: '#/components/schemas/MessageType'
        type: object
      example:
        fid: 2
        reactionBody:
          targetCastId:
            fid: 0
            hash: hash
          type: REACTION_TYPE_LIKE
          targetUrl: targetUrl
        type: MESSAGE_TYPE_CAST_ADD
        timestamp: 48994466
        network: FARCASTER_NETWORK_MAINNET
    UserDataAdd_allOf_data:
      allOf:
      - $ref: '#/components/schemas/MessageDataUserDataAdd'
      - properties:
          type:
            $ref: '#/components/schemas/MessageType'
        type: object
      example:
        fid: 2
        userDataBody:
          type: USER_DATA_TYPE_PFP
          value: value
        type: MESSAGE_TYPE_CAST_ADD
        timestamp: 48994466
        network: FARCASTER_NETWORK_MAINNET
    Verification_allOf_data:
      allOf:
      - $ref: '#/components/schemas/MessageDataVerificationAdd'
      - properties:
          type:
            $ref: '#/components/schemas/MessageType'
        type: object
      example:
        fid: 2
        verificationAddEthAddressBody:
          blockHash: blockHash
          address: address
          ethSignature: ethSignature
        type: MESSAGE_TYPE_CAST_ADD
        timestamp: 48994466
        network: FARCASTER_NETWORK_MAINNET
    VerificationRemove_allOf_data:
      allOf:
      - $ref: '#/components/schemas/MessageDataVerificationRemove'
      - properties:
          type:
            $ref: '#/components/schemas/MessageType'
        type: object
  securitySchemes:
    usernamePassword:
      scheme: basic
      type: http
