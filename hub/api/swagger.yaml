openapi: 3.0.1
info:
  title: Raw Farcaster Hub API
  description: |
    Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Farcaster docs](https://www.thehubble.xyz/docs/httpapi/httpapi.html) for more details.
  version: "1.0"
servers:
- url: https://hub-api.neynar.com
paths:
  /v1/info:
    get:
      tags:
      - Info
      summary: Sync Methods
      operationId: GetInfo
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: dbstats
        in: query
        description: Whether to return DB stats
        required: true
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubInfoResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/castById:
    get:
      tags:
      - Casts
      summary: Get a cast by its FID and Hash.
      operationId: GetCastById
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        description: The FID of the cast's creator
        required: true
        style: form
        explode: true
        schema:
          type: integer
        example: 3
      - name: hash
        in: query
        description: The cast's hash
        required: true
        style: form
        explode: true
        schema:
          pattern: "^0x[0-9a-fA-F]{40}$"
          type: string
        example: 0x03aff391a6eb1772b20b4ead9a89f732be75fe27
      responses:
        "200":
          description: The requested Cast.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CastAdd'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/castsByFid:
    get:
      tags:
      - Casts
      summary: Fetch all casts authored by an FID.
      operationId: ListCastsByFid
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        description: The FID of the casts' creator
        required: true
        style: form
        explode: true
        schema:
          type: integer
        example: 3
      - name: pageSize
        in: query
        description: Maximum number of messages to return in a single response
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: reverse
        in: query
        description: "Reverse the sort order, returning latest messages first"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: pageToken
        in: query
        description: "The page token returned by the previous query, to fetch the\
          \ next page. If this parameter is empty, fetch the first page"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: The requested Casts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/castsByMention:
    get:
      tags:
      - Casts
      summary: Fetch all casts that mention an FID
      operationId: ListCastsByMention
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        description: The FID that is mentioned in a cast
        required: true
        style: form
        explode: true
        schema:
          type: integer
        example: 3
      - name: pageSize
        in: query
        description: Maximum number of messages to return in a single response
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: reverse
        in: query
        description: "Reverse the sort order, returning latest messages first"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: pageToken
        in: query
        description: "The page token returned by the previous query, to fetch the\
          \ next page. If this parameter is empty, fetch the first page"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: The requested Casts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/castsByParent:
    get:
      tags:
      - Casts
      summary: Fetch all casts by parent cast's FID and Hash OR by the parent's URL
      operationId: ListCastsByParent
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        description: The FID of the parent cast
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 226
      - name: hash
        in: query
        description: The parent cast's hash
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 0x03aff391a6eb1772b20b4ead9a89f732be75fe27
      - name: url
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: chain://eip155:1/erc721:0x39d89b649ffa044383333d297e325d42d31329b2
      - name: pageSize
        in: query
        description: Maximum number of messages to return in a single response
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: reverse
        in: query
        description: "Reverse the sort order, returning latest messages first"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: pageToken
        in: query
        description: "The page token returned by the previous query, to fetch the\
          \ next page. If this parameter is empty, fetch the first page"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: The requested Casts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/reactionById:
    get:
      tags:
      - Reactions
      summary: Get a reaction by its created FID and target Cast.
      operationId: GetReactionById
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        description: The FID of the reaction's creator
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: target_fid
        in: query
        description: The FID of the cast's creator
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: target_hash
        in: query
        description: The cast's hash
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: reaction_type
        in: query
        description: "The type of reaction, either as a numerical enum value or string\
          \ representation"
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ReactionType'
      responses:
        "200":
          description: The requested Reaction.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reaction'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/reactionsByCast:
    get:
      tags:
      - Reactions
      summary: Get all reactions to a cast
      operationId: ListReactionsByCast
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: target_fid
        in: query
        description: The FID of the cast's creator
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: target_hash
        in: query
        description: The hash of the cast
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: reaction_type
        in: query
        description: "The type of reaction, either as a numerical enum value or string\
          \ representation"
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ReactionType'
      - name: pageSize
        in: query
        description: Maximum number of messages to return in a single response
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: reverse
        in: query
        description: "Reverse the sort order, returning latest messages first"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: pageToken
        in: query
        description: "The page token returned by the previous query, to fetch the\
          \ next page. If this parameter is empty, fetch the first page"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: The requested Reactions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/reactionsByFid:
    get:
      tags:
      - Reactions
      summary: Get all reactions by an FID
      operationId: ListReactionsByFid
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        description: The FID of the reaction's creator
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: reaction_type
        in: query
        description: "The type of reaction, either as a numerical enum value or string\
          \ representation"
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ReactionType'
      - name: pageSize
        in: query
        description: Maximum number of messages to return in a single response
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: reverse
        in: query
        description: "Reverse the sort order, returning latest messages first"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: pageToken
        in: query
        description: "The page token returned by the previous query, to fetch the\
          \ next page. If this parameter is empty, fetch the first page"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: The requested Reactions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/reactionsByTarget:
    get:
      tags:
      - Reactions
      summary: Get all reactions to a target URL
      operationId: ListReactionsByTarget
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: url
        in: query
        description: The URL of the parent cast
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: chain://eip155:1/erc721:0x39d89b649ffa044383333d297e325d42d31329b2
      - name: reaction_type
        in: query
        description: "The type of reaction, either as a numerical enum value or string\
          \ representation"
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ReactionType'
      - name: pageSize
        in: query
        description: Maximum number of messages to return in a single response
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: reverse
        in: query
        description: "Reverse the sort order, returning latest messages first"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: pageToken
        in: query
        description: "The page token returned by the previous query, to fetch the\
          \ next page. If this parameter is empty, fetch the first page"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: The requested Reactions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/linkById:
    get:
      tags:
      - Links
      summary: Get a link by its FID and target FID.
      operationId: GetLinkById
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        description: The FID of the link's originator
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: target_fid
        in: query
        description: The FID of the target of the link
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: link_type
        in: query
        description: "The type of link, as a string value"
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/LinkType'
      responses:
        "200":
          description: The requested Link.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkAdd'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/linksByFid:
    get:
      tags:
      - Links
      summary: Get all links from a source FID
      operationId: ListLinksByFid
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        description: The FID of the link's originator
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: link_type
        in: query
        description: "The type of link, as a string value"
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/LinkType'
      - name: pageSize
        in: query
        description: Maximum number of messages to return in a single response
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: reverse
        in: query
        description: "Reverse the sort order, returning latest messages first"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: pageToken
        in: query
        description: "The page token returned by the previous query, to fetch the\
          \ next page. If this parameter is empty, fetch the first page"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: The requested Links.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/linksByTargetFid:
    get:
      tags:
      - Links
      summary: Get all links to a target FID
      operationId: ListLinksByTargetFid
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: target_fid
        in: query
        description: The FID of the target of the link
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: link_type
        in: query
        description: "The type of link, as a string value"
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/LinkType'
      - name: pageSize
        in: query
        description: Maximum number of messages to return in a single response
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: reverse
        in: query
        description: "Reverse the sort order, returning latest messages first"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: pageToken
        in: query
        description: "The page token returned by the previous query, to fetch the\
          \ next page. If this parameter is empty, fetch the first page"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: The requested Links.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/userDataByFid:
    get:
      tags:
      - UserData
      summary: Get UserData for a FID.
      description: "**Note:** one of two different response schemas is returned  based\
        \ on whether the caller provides the `user_data_type` parameter. If included,\
        \ a single `UserDataAdd` message is returned (or a `not_found` error). If\
        \ omitted, a paginated list of `UserDataAdd` messages is returned instead"
      operationId: GetUserDataByFid
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        description: The FID that's being requested
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: user_data_type
        in: query
        description: "The type of user data, either as a numerical value or type string.\
          \ If this is omitted, all user data for the FID is returned"
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/UserDataType'
      - name: pageSize
        in: query
        description: Maximum number of messages to return in a single response
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: reverse
        in: query
        description: "Reverse the sort order, returning latest messages first"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: pageToken
        in: query
        description: "The page token returned by the previous query, to fetch the\
          \ next page. If this parameter is empty, fetch the first page"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: The requested UserData.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/fids:
    get:
      tags:
      - FIDs
      summary: Get a list of all the FIDs
      operationId: ListFids
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: pageSize
        in: query
        description: Maximum number of messages to return in a single response
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: reverse
        in: query
        description: "Reverse the sort order, returning latest messages first"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: pageToken
        in: query
        description: "The page token returned by the previous query, to fetch the\
          \ next page. If this parameter is empty, fetch the first page"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FidsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/storageLimitsByFid:
    get:
      tags:
      - Storage
      summary: Get an FID's storage limits.
      operationId: GetStorageLimitsByFid
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageLimitsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /v1/userNameProofsByFid:
    get:
      tags:
      - Usernames
      summary: Get a list of proofs provided by an FID
      operationId: ListUsernameProofsByFid
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        description: The FID being requested
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameProofsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/userNameProofByName:
    get:
      tags:
      - Usernames
      summary: Get an proof for a username by the Farcaster username
      operationId: GetUsernameProof
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: name
        in: query
        description: The Farcaster username or ENS address
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          username:
            value: gavi
          ENS address:
            value: dwr.eth
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNameProof'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/verificationsByFid:
    get:
      tags:
      - Verifications
      summary: Get a list of verifications provided by an FID
      operationId: ListVerificationsByFid
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        description: The FID being requested
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: address
        in: query
        description: The optional ETH address to filter by
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: Maximum number of messages to return in a single response
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: reverse
        in: query
        description: "Reverse the sort order, returning latest messages first"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: pageToken
        in: query
        description: "The page token returned by the previous query, to fetch the\
          \ next page. If this parameter is empty, fetch the first page"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: The requested Reactions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /v1/onChainIdRegistryEventByAddress:
    get:
      tags:
      - OnChainEvents
      summary: Get an on chain ID Registry Event for a given Address
      operationId: GetOnChainIdRegistrationByAddress
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: address
        in: query
        description: The ETH address being requested
        required: true
        style: form
        explode: true
        schema:
          pattern: "^0x[0-9a-fA-F]{40}$"
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnChainEventIdRegister'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/onChainEventsByFid:
    get:
      tags:
      - OnChainEvents
      summary: Get a list of on-chain events provided by an FID
      operationId: ListOnChainEventsByFid
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        description: The FID being requested
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: event_type
        in: query
        description: The numeric of string value of the event type being requested.
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/OnChainEventType'
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/onChainSignersByFid:
    get:
      tags:
      - OnChainEvents
      summary: Get a list of signers provided by an FID
      description: "**Note:** one of two different response schemas is returned  based\
        \ on whether the caller provides the `signer` parameter. If included, a single\
        \ `OnChainEventSigner` message is returned (or a `not_found` error). If omitted,\
        \ a  non-paginated list of `OnChainEventSigner` messages is returned instead"
      operationId: ListOnChainSignersByFid
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        description: The FID being requested
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: signer
        in: query
        description: The optional key of signer
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 0x0852c07b5695ff94138b025e3f9b4788e06133f04e254f0ea0eb85a06e999cdd
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/submitMessage:
    post:
      tags:
      - SubmitMessage
      summary: Submit a signed protobuf-serialized message to the Hub
      operationId: SubmitMessage
      requestBody:
        description: "* \nA Message is a delta operation on the Farcaster network.\
          \ The message protobuf is an envelope \nthat wraps a MessageData object\
          \ and contains a hash and signature which can verify its authenticity."
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - usernamePassword: []
      x-codegen-request-body-name: body
  /v1/validateMessage:
    post:
      tags:
      - ValidateMessage
      summary: Validate a signed protobuf-serialized message with the Hub
      operationId: ValidateMessage
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        description: "* \nA Message is a delta operation on the Farcaster network.\
          \ The message protobuf is an envelope \nthat wraps a MessageData object\
          \ and contains a hash and signature which can verify its authenticity."
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateMessageResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - usernamePassword: []
      x-codegen-request-body-name: body
  /v1/events:
    get:
      tags:
      - HubEvents
      summary: Get a page of Hub events
      operationId: ListEvents
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: from_event_id
        in: query
        description: "An optional Hub Id to start getting events from.  This is also\
          \ returned from the API as nextPageEventId, which  can be used to page through\
          \ all the Hub events. Set it to 0  to start from the first event"
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/eventById:
    get:
      tags:
      - HubEvents
      summary: Get an event by its ID
      operationId: GetEventById
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: event_id
        in: query
        description: The Hub Id of the event
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubEvent'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    CastAdd:
      allOf:
      - $ref: '#/components/schemas/MessageCommon'
      - required:
        - data
        type: object
        properties:
          data:
            allOf:
            - $ref: '#/components/schemas/MessageDataCastAdd'
            - required:
              - type
              type: object
              properties:
                type:
                  $ref: '#/components/schemas/MessageType'
    CastAddBody:
      required:
      - embeds
      - embedsDeprecated
      - mentions
      - mentionsPositions
      - text
      type: object
      properties:
        embedsDeprecated:
          title: URLs to be embedded in the cast
          type: array
          items:
            type: string
        mentions:
          title: Fids mentioned in the cast
          type: array
          items:
            type: integer
            format: uint64
            example: 2
        parentCastId:
          $ref: '#/components/schemas/CastId'
        parentUrl:
          title: Parent URL
          type: string
          example: chain://eip155:1/erc721:0x39d89b649ffa044383333d297e325d42d31329b2
        text:
          title: Text of the cast
          type: string
        mentionsPositions:
          title: Positions of the mentions in the text
          type: array
          items:
            type: integer
            format: int64
        embeds:
          title: URLs or cast ids to be embedded in the cast
          type: array
          items:
            $ref: '#/components/schemas/Embed'
      description: Adds a new Cast
    CastEmbed:
      required:
      - castId
      type: object
      properties:
        castId:
          $ref: '#/components/schemas/CastId'
    CastRemove:
      allOf:
      - $ref: '#/components/schemas/MessageCommon'
      - required:
        - data
        type: object
        properties:
          data:
            allOf:
            - $ref: '#/components/schemas/MessageDataCastRemove'
            - required:
              - type
              type: object
              properties:
                type:
                  $ref: '#/components/schemas/MessageType'
    CastId:
      required:
      - fid
      - hash
      type: object
      properties:
        fid:
          title: Fid of the user who created the cast
          type: integer
          format: uint64
        hash:
          $ref: '#/components/schemas/CastHash'
      description: Identifier used to look up a Cast
    CastHash:
      pattern: "^0x[0-9a-fA-F]{40}$"
      type: string
    CastRemoveBody:
      required:
      - targetHash
      type: object
      properties:
        targetHash:
          title: Hash of the cast to remove
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
      description: Removes an existing Cast
    DbStats:
      required:
      - numFidEvents
      - numFnameEvents
      - numMessages
      type: object
      properties:
        numMessages:
          type: integer
          format: uint64
        numFidEvents:
          type: integer
          format: uint64
        numFnameEvents:
          type: integer
          format: uint64
      example:
        numFidEvents: 6
        numMessages: 0
        numFnameEvents: 1
    Embed:
      oneOf:
      - $ref: '#/components/schemas/CastEmbed'
      - $ref: '#/components/schemas/UrlEmbed'
    ErrorResponse:
      required:
      - code
      - details
      - errCode
      - metadata
      - name
      - presentable
      type: object
      properties:
        errCode:
          type: string
        presentable:
          type: boolean
        name:
          type: string
        code:
          type: integer
        details:
          type: string
        metadata:
          $ref: '#/components/schemas/ErrorResponse_metadata'
    FarcasterNetwork:
      type: string
      description: |-
        Farcaster network the message is intended for.
        - FARCASTER_NETWORK_MAINNET: Public primary network
         - FARCASTER_NETWORK_TESTNET: Public test network
         - FARCASTER_NETWORK_DEVNET: Private test network
      default: FARCASTER_NETWORK_MAINNET
      enum:
      - FARCASTER_NETWORK_MAINNET
      - FARCASTER_NETWORK_TESTNET
      - FARCASTER_NETWORK_DEVNET
    FidsResponse:
      required:
      - fids
      - nextPageToken
      type: object
      properties:
        fids:
          type: array
          items:
            type: integer
            format: uint64
        nextPageToken:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
      example:
        nextPageToken: ""
        fids:
        - 0
        - 0
    FrameActionBody:
      required:
      - buttonIndex
      - castId
      - url
      type: object
      properties:
        url:
          type: string
          format: uri
        buttonIndex:
          title: The index of the button pressed (1-4)
          maximum: 4
          minimum: 1
          type: integer
          format: int32
        castId:
          $ref: '#/components/schemas/CastId'
      description: A Farcaster Frame action
    HashScheme:
      type: string
      description: |
        Type of hashing scheme used to produce a digest of MessageData. - HASH_SCHEME_BLAKE3: Default scheme for hashing MessageData
      default: HASH_SCHEME_BLAKE3
      enum:
      - HASH_SCHEME_BLAKE3
    HubEvent:
      discriminator:
        propertyName: type
        mapping:
          HUB_EVENT_TYPE_MERGE_MESSAGE: '#/components/schemas/HubEventMergeMessage'
          HUB_EVENT_TYPE_PRUNE_MESSAGE: '#/components/schemas/HubEventPruneMessage'
          HUB_EVENT_TYPE_REVOKE_MESSAGE: '#/components/schemas/HubEventRevokeMessage'
          HUB_EVENT_TYPE_MERGE_USERNAME_PROOF: '#/components/schemas/HubEventMergeUsernameProof'
          HUB_EVENT_TYPE_MERGE_ON_CHAIN_EVENT: '#/components/schemas/HubEventMergeOnChainEvent'
      oneOf:
      - $ref: '#/components/schemas/HubEventMergeMessage'
      - $ref: '#/components/schemas/HubEventPruneMessage'
      - $ref: '#/components/schemas/HubEventRevokeMessage'
      - $ref: '#/components/schemas/HubEventMergeUsernameProof'
      - $ref: '#/components/schemas/HubEventMergeOnChainEvent'
    HubEventMergeMessage:
      required:
      - id
      - mergeMessageBody
      - type
      type: object
      properties:
        type:
          type: string
          example: HUB_EVENT_TYPE_MERGE_MESSAGE
        id:
          type: integer
          format: uint64
        mergeMessageBody:
          $ref: '#/components/schemas/MergeMessageBody'
    HubEventPruneMessage:
      required:
      - id
      - pruneMessageBody
      - type
      type: object
      properties:
        type:
          type: string
          example: HUB_EVENT_TYPE_PRUNE_MESSAGE
        id:
          type: integer
          format: uint64
        pruneMessageBody:
          $ref: '#/components/schemas/PruneMessageBody'
    HubEventRevokeMessage:
      required:
      - id
      - revokeMessageBody
      - type
      type: object
      properties:
        type:
          type: string
          example: HUB_EVENT_TYPE_REVOKE_MESSAGE
        id:
          type: integer
          format: uint64
        revokeMessageBody:
          $ref: '#/components/schemas/RevokeMessageBody'
    HubEventMergeUsernameProof:
      required:
      - id
      - mergeUsernameProofBody
      - type
      type: object
      properties:
        type:
          type: string
          example: HUB_EVENT_TYPE_MERGE_USERNAME_PROOF
        id:
          type: integer
          format: uint64
        mergeUsernameProofBody:
          $ref: '#/components/schemas/MergeUserNameProofBody'
    HubEventMergeOnChainEvent:
      required:
      - id
      - mergeOnChainEventBody
      - type
      type: object
      properties:
        type:
          type: string
          example: HUB_EVENT_TYPE_MERGE_ON_CHAIN_EVENT
        id:
          type: integer
          format: uint64
        mergeOnChainEventBody:
          $ref: '#/components/schemas/MergeOnChainEventBody'
    HubInfoResponse:
      title: Response Types for the Sync RPC Methods
      required:
      - hubOperatorFid
      - isSyncing
      - nickname
      - peerId
      - rootHash
      - version
      type: object
      properties:
        version:
          type: string
        isSyncing:
          type: boolean
        nickname:
          type: string
        rootHash:
          type: string
        dbStats:
          $ref: '#/components/schemas/DbStats'
        peerId:
          type: string
        hubOperatorFid:
          type: integer
          format: uint64
      example:
        dbStats:
          numFidEvents: 6
          numMessages: 0
          numFnameEvents: 1
        peerId: peerId
        nickname: nickname
        rootHash: rootHash
        isSyncing: true
        version: version
        hubOperatorFid: 5
    IdRegisterEventBody:
      required:
      - eventType
      - from
      - recoveryAddress
      - to
      type: object
      properties:
        to:
          pattern: "^0x[a-fA-F0-9]*$"
          type: string
          example: 0x00000000fcd5a8e45785c8a4b9a718c9348e4f18
        eventType:
          $ref: '#/components/schemas/IdRegisterEventType'
        from:
          pattern: "^0x[a-fA-F0-9]*$|^$"
          type: string
          example: 0x00000000fcd5a8e45785c8a4b9a718c9348e4f18
        recoveryAddress:
          pattern: "^0x[a-fA-F0-9]*$"
          type: string
          example: 0x00000000fcd5a8e45785c8a4b9a718c9348e4f18
    IdRegisterEventType:
      type: string
      default: ID_REGISTER_EVENT_TYPE_REGISTER
      enum:
      - ID_REGISTER_EVENT_TYPE_REGISTER
      - ID_REGISTER_EVENT_TYPE_TRANSFER
      - ID_REGISTER_EVENT_TYPE_CHANGE_RECOVERY
    LinkAdd:
      allOf:
      - $ref: '#/components/schemas/MessageCommon'
      - required:
        - data
        type: object
        properties:
          data:
            allOf:
            - $ref: '#/components/schemas/MessageDataLink'
            - required:
              - type
              type: object
              properties:
                type:
                  $ref: '#/components/schemas/MessageType'
    LinkBody:
      required:
      - targetFid
      - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/LinkType'
        displayTimestamp:
          title: User-defined timestamp that preserves original timestamp when message.data.timestamp
            needs to be updated for compaction
          type: integer
          format: int64
        targetFid:
          title: The fid the link relates to
          type: integer
          format: uint64
      description: Adds or removes a Link
    LinkRemove:
      allOf:
      - $ref: '#/components/schemas/MessageCommon'
      - required:
        - data
        type: object
        properties:
          data:
            allOf:
            - $ref: '#/components/schemas/MessageDataLink'
            - required:
              - type
              type: object
              properties:
                type:
                  $ref: '#/components/schemas/MessageType'
    LinkType:
      type: string
      description: |-
        Type of Link.
        - follow: Follow another user
      default: follow
      enum:
      - follow
    MergeMessageBody:
      required:
      - deletedMessages
      - message
      type: object
      properties:
        message:
          $ref: '#/components/schemas/Message'
        deletedMessages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
    MergeOnChainEventBody:
      required:
      - onChainEvent
      type: object
      properties:
        onChainEvent:
          $ref: '#/components/schemas/OnChainEvent'
    MergeUserNameProofBody:
      type: object
      properties:
        usernameProof:
          $ref: '#/components/schemas/UserNameProof'
        deletedUsernameProof:
          $ref: '#/components/schemas/UserNameProof'
        usernameProofMessage:
          $ref: '#/components/schemas/Message'
        deletedUsernameProofMessage:
          $ref: '#/components/schemas/Message'
    Message:
      description: "* \nA Message is a delta operation on the Farcaster network. The\
        \ message protobuf is an envelope \nthat wraps a MessageData object and contains\
        \ a hash and signature which can verify its authenticity."
      allOf:
      - required:
        - data
        type: object
        properties:
          data:
            discriminator:
              propertyName: type
              mapping:
                MESSAGE_TYPE_CAST_ADD: '#/components/schemas/MessageDataCastAdd'
                MESSAGE_TYPE_CAST_REMOVE: '#/components/schemas/MessageDataCastRemove'
                MESSAGE_TYPE_REACTION_ADD: '#/components/schemas/MessageDataReaction'
                MESSAGE_TYPE_REACTION_REMOVE: '#/components/schemas/MessageDataReaction'
                MESSAGE_TYPE_LINK_ADD: '#/components/schemas/MessageDataLink'
                MESSAGE_TYPE_LINK_REMOVE: '#/components/schemas/MessageDataLink'
                MESSAGE_TYPE_VERIFICATION_ADD_ETH_ADDRESS: '#/components/schemas/MessageDataVerificationAdd'
                MESSAGE_TYPE_VERIFICATION_REMOVE: '#/components/schemas/MessageDataVerificationRemove'
                MESSAGE_TYPE_USER_DATA_ADD: '#/components/schemas/MessageDataUserDataAdd'
                MESSAGE_TYPE_USERNAME_PROOF: '#/components/schemas/MessageDataUsernameProof'
                MESSAGE_TYPE_FRAME_ACTION: '#/components/schemas/MessageDataFrameAction'
            oneOf:
            - $ref: '#/components/schemas/MessageDataCastAdd'
            - $ref: '#/components/schemas/MessageDataCastRemove'
            - $ref: '#/components/schemas/MessageDataReaction'
            - $ref: '#/components/schemas/MessageDataLink'
            - $ref: '#/components/schemas/MessageDataVerificationAdd'
            - $ref: '#/components/schemas/MessageDataVerificationRemove'
            - $ref: '#/components/schemas/MessageDataUserDataAdd'
            - $ref: '#/components/schemas/MessageDataUsernameProof'
            - $ref: '#/components/schemas/MessageDataFrameAction'
      - $ref: '#/components/schemas/MessageCommon'
    MessageCommon:
      required:
      - hash
      - hashScheme
      - signature
      - signatureScheme
      - signer
      type: object
      properties:
        hash:
          title: Hash digest of data
          pattern: "^0x[0-9a-fA-F]{40}$"
          type: string
          example: 0xd2b1ddc6c88e865a33cb1a565e0058d757042974
        hashScheme:
          $ref: '#/components/schemas/HashScheme'
        signature:
          title: Signature of the hash digest
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        signatureScheme:
          $ref: '#/components/schemas/SignatureScheme'
        signer:
          title: Public key or address of the key pair that produced the signature
          pattern: "^0x[0-9a-fA-F]+$"
          type: string
    MessageDataCommon:
      required:
      - fid
      - network
      - timestamp
      type: object
      properties:
        fid:
          title: Farcaster ID of the user producing the message
          type: integer
          format: uint64
          example: 2
        timestamp:
          title: Farcaster epoch timestamp in seconds
          type: integer
          format: int64
          example: 48994466
        network:
          $ref: '#/components/schemas/FarcasterNetwork'
    MessageDataCastAdd:
      allOf:
      - $ref: '#/components/schemas/MessageDataCommon'
      - required:
        - castAddBody
        type: object
        properties:
          castAddBody:
            $ref: '#/components/schemas/CastAddBody'
    MessageDataCastRemove:
      allOf:
      - $ref: '#/components/schemas/MessageDataCommon'
      - required:
        - castRemoveBody
        type: object
        properties:
          castRemoveBody:
            $ref: '#/components/schemas/CastRemoveBody'
    MessageDataFrameAction:
      allOf:
      - $ref: '#/components/schemas/MessageDataCommon'
      - required:
        - frameActionBody
        type: object
        properties:
          frameActionBody:
            $ref: '#/components/schemas/FrameActionBody'
    MessageDataLink:
      allOf:
      - $ref: '#/components/schemas/MessageDataCommon'
      - required:
        - linkBody
        type: object
        properties:
          linkBody:
            $ref: '#/components/schemas/LinkBody'
    MessageDataReaction:
      allOf:
      - $ref: '#/components/schemas/MessageDataCommon'
      - required:
        - reactionBody
        type: object
        properties:
          reactionBody:
            $ref: '#/components/schemas/ReactionBody'
    MessageDataUserDataAdd:
      allOf:
      - $ref: '#/components/schemas/MessageDataCommon'
      - required:
        - userDataBody
        type: object
        properties:
          userDataBody:
            $ref: '#/components/schemas/UserDataBody'
    MessageDataUsernameProof:
      allOf:
      - $ref: '#/components/schemas/MessageDataCommon'
      - required:
        - usernameProofBody
        type: object
        properties:
          usernameProofBody:
            $ref: '#/components/schemas/UserNameProof'
    MessageDataVerificationAdd:
      allOf:
      - $ref: '#/components/schemas/MessageDataCommon'
      - required:
        - verificationAddEthAddressBody
        type: object
        properties:
          verificationAddEthAddressBody:
            $ref: '#/components/schemas/VerificationAddEthAddressBody'
    MessageDataVerificationRemove:
      allOf:
      - $ref: '#/components/schemas/MessageDataCommon'
      - required:
        - verificationRemoveBody
        type: object
        properties:
          verificationRemoveBody:
            $ref: '#/components/schemas/VerificationRemoveBody'
    MessageType:
      type: string
      description: |-
        Type of the MessageBody.
         - MESSAGE_TYPE_CAST_ADD: Add a new Cast
         - MESSAGE_TYPE_CAST_REMOVE: Remove an existing Cast
         - MESSAGE_TYPE_REACTION_ADD: Add a Reaction to a Cast
         - MESSAGE_TYPE_REACTION_REMOVE: Remove a Reaction from a Cast
         - MESSAGE_TYPE_LINK_ADD: Add a new Link
         - MESSAGE_TYPE_LINK_REMOVE: Remove an existing Link
         - MESSAGE_TYPE_VERIFICATION_ADD_ETH_ADDRESS: Add a Verification of an Ethereum Address
         - MESSAGE_TYPE_VERIFICATION_REMOVE: Remove a Verification
         - MESSAGE_TYPE_USER_DATA_ADD: Add metadata about a user
         - MESSAGE_TYPE_USERNAME_PROOF: Add or replace a username proof
         - MESSAGE_TYPE_FRAME_ACTION: A Farcaster Frame action
      default: MESSAGE_TYPE_CAST_ADD
      enum:
      - MESSAGE_TYPE_CAST_ADD
      - MESSAGE_TYPE_CAST_REMOVE
      - MESSAGE_TYPE_REACTION_ADD
      - MESSAGE_TYPE_REACTION_REMOVE
      - MESSAGE_TYPE_LINK_ADD
      - MESSAGE_TYPE_LINK_REMOVE
      - MESSAGE_TYPE_VERIFICATION_ADD_ETH_ADDRESS
      - MESSAGE_TYPE_VERIFICATION_REMOVE
      - MESSAGE_TYPE_USER_DATA_ADD
      - MESSAGE_TYPE_USERNAME_PROOF
      - MESSAGE_TYPE_FRAME_ACTION
    OnChainEvent:
      discriminator:
        propertyName: type
        mapping:
          EVENT_TYPE_SIGNER: '#/components/schemas/OnChainEventSigner'
          EVENT_TYPE_SIGNER_MIGRATED: '#/components/schemas/OnChainEventSignerMigrated'
          EVENT_TYPE_ID_REGISTER: '#/components/schemas/OnChainEventIdRegister'
          EVENT_TYPE_STORAGE_RENT: '#/components/schemas/OnChainEventStorageRent'
      oneOf:
      - $ref: '#/components/schemas/OnChainEventSigner'
      - $ref: '#/components/schemas/OnChainEventSignerMigrated'
      - $ref: '#/components/schemas/OnChainEventIdRegister'
      - $ref: '#/components/schemas/OnChainEventStorageRent'
    OnChainEventCommon:
      required:
      - blockHash
      - blockNumber
      - blockTimestamp
      - chainId
      - fid
      - logIndex
      - transactionHash
      - txIndex
      - type
      type: object
      properties:
        type:
          type: string
          example: EVENT_TYPE_SIGNER
        chainId:
          type: integer
        blockNumber:
          type: integer
        blockHash:
          type: string
          example: 0x75fbbb8b2a4ede67ac350e1b0503c6a152c0091bd8e3ef4a6927d58e088eae28
        blockTimestamp:
          type: integer
        transactionHash:
          type: string
          example: 0x36ef79e6c460e6ae251908be13116ff0065960adb1ae032b4cc65a8352f28952
        logIndex:
          type: integer
        txIndex:
          type: integer
        fid:
          type: integer
    OnChainEventSigner:
      allOf:
      - $ref: '#/components/schemas/OnChainEventCommon'
      - required:
        - signerEventBody
        type: object
        properties:
          signerEventBody:
            $ref: '#/components/schemas/SignerEventBody'
    OnChainEventSignerMigrated:
      allOf:
      - $ref: '#/components/schemas/OnChainEventCommon'
      - required:
        - signerMigratedEventBody
        type: object
        properties:
          signerMigratedEventBody:
            $ref: '#/components/schemas/SignerMigratedEventBody'
    OnChainEventIdRegister:
      allOf:
      - $ref: '#/components/schemas/OnChainEventCommon'
      - required:
        - idRegisterEventBody
        type: object
        properties:
          idRegisterEventBody:
            $ref: '#/components/schemas/IdRegisterEventBody'
    OnChainEventStorageRent:
      allOf:
      - $ref: '#/components/schemas/OnChainEventCommon'
      - required:
        - storageRentEventBody
        type: object
        properties:
          storageRentEventBody:
            $ref: '#/components/schemas/StorageRentEventBody'
    OnChainEventType:
      type: string
      default: EVENT_TYPE_SIGNER
      enum:
      - EVENT_TYPE_SIGNER
      - EVENT_TYPE_SIGNER_MIGRATED
      - EVENT_TYPE_ID_REGISTER
      - EVENT_TYPE_STORAGE_RENT
    PruneMessageBody:
      required:
      - message
      type: object
      properties:
        message:
          $ref: '#/components/schemas/Message'
    Reaction:
      allOf:
      - $ref: '#/components/schemas/MessageCommon'
      - required:
        - data
        type: object
        properties:
          data:
            allOf:
            - $ref: '#/components/schemas/MessageDataReaction'
            - required:
              - type
              type: object
              properties:
                type:
                  $ref: '#/components/schemas/MessageType'
    ReactionBody:
      required:
      - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ReactionType'
        targetCastId:
          $ref: '#/components/schemas/CastId'
        targetUrl:
          title: URL to react to
          type: string
      description: Adds or removes a Reaction from a Cast
    ReactionRemove:
      allOf:
      - $ref: '#/components/schemas/MessageCommon'
      - required:
        - data
        type: object
        properties:
          data:
            $ref: '#/components/schemas/MessageDataReaction'
    ReactionType:
      type: string
      description: |-
        Type of Reaction.
        - REACTION_TYPE_LIKE: Like the target cast
         - REACTION_TYPE_RECAST: Share target cast to the user's audience
      default: REACTION_TYPE_LIKE
      enum:
      - REACTION_TYPE_LIKE
      - REACTION_TYPE_RECAST
    RevokeMessageBody:
      required:
      - message
      type: object
      properties:
        message:
          $ref: '#/components/schemas/Message'
    SignatureScheme:
      type: string
      description: |-
        Type of signature scheme used to sign the Message hash
        - SIGNATURE_SCHEME_ED25519: Ed25519 signature (default)
         - SIGNATURE_SCHEME_EIP712: ECDSA signature using EIP-712 scheme
      default: SIGNATURE_SCHEME_ED25519
      enum:
      - SIGNATURE_SCHEME_ED25519
      - SIGNATURE_SCHEME_EIP712
    SignerEventBody:
      required:
      - eventType
      - key
      - keyType
      - metadata
      - metadataType
      type: object
      properties:
        key:
          pattern: "^0x[a-fA-F0-9]{64}$"
          type: string
        keyType:
          type: integer
          format: int64
        eventType:
          $ref: '#/components/schemas/SignerEventType'
        metadata:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        metadataType:
          type: integer
          format: int64
    SignerEventType:
      type: string
      default: SIGNER_EVENT_TYPE_ADD
      enum:
      - SIGNER_EVENT_TYPE_ADD
      - SIGNER_EVENT_TYPE_REMOVE
      - SIGNER_EVENT_TYPE_ADMIN_RESET
    SignerMigratedEventBody:
      required:
      - migratedAt
      type: object
      properties:
        migratedAt:
          type: integer
          format: int64
    StorageLimit:
      required:
      - limit
      - storeType
      type: object
      properties:
        storeType:
          $ref: '#/components/schemas/StoreType'
        limit:
          type: integer
          format: uint64
      example:
        storeType: STORE_TYPE_CASTS
        limit: 0
    StorageLimitsResponse:
      required:
      - limits
      type: object
      properties:
        limits:
          type: array
          items:
            $ref: '#/components/schemas/StorageLimit'
      example:
        limits:
        - storeType: STORE_TYPE_CASTS
          limit: 0
        - storeType: STORE_TYPE_CASTS
          limit: 0
    StorageRentEventBody:
      required:
      - expiry
      - payer
      - units
      type: object
      properties:
        payer:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        units:
          type: integer
          format: int64
        expiry:
          type: integer
          format: int64
    StoreType:
      type: string
      default: STORE_TYPE_CASTS
      enum:
      - STORE_TYPE_CASTS
      - STORE_TYPE_LINKS
      - STORE_TYPE_REACTIONS
      - STORE_TYPE_USER_DATA
      - STORE_TYPE_VERIFICATIONS
      - STORE_TYPE_USERNAME_PROOFS
    UrlEmbed:
      required:
      - url
      type: object
      properties:
        url:
          type: string
          format: uri
    UserDataAdd:
      allOf:
      - $ref: '#/components/schemas/MessageCommon'
      - required:
        - data
        type: object
        properties:
          data:
            allOf:
            - $ref: '#/components/schemas/MessageDataUserDataAdd'
            - required:
              - type
              type: object
              properties:
                type:
                  $ref: '#/components/schemas/MessageType'
    UserDataBody:
      required:
      - type
      - value
      type: object
      properties:
        type:
          $ref: '#/components/schemas/UserDataType'
        value:
          title: Value of the metadata
          type: string
      description: Adds metadata about a user
    UserDataType:
      type: string
      description: |-
        Type of UserData.
        - USER_DATA_TYPE_PFP: Profile Picture for the user
         - USER_DATA_TYPE_DISPLAY: Display Name for the user
         - USER_DATA_TYPE_BIO: Bio for the user
         - USER_DATA_TYPE_URL: URL of the user
         - USER_DATA_TYPE_USERNAME: Preferred Name for the user
      default: USER_DATA_TYPE_PFP
      enum:
      - USER_DATA_TYPE_PFP
      - USER_DATA_TYPE_DISPLAY
      - USER_DATA_TYPE_BIO
      - USER_DATA_TYPE_URL
      - USER_DATA_TYPE_USERNAME
    UserNameProof:
      required:
      - fid
      - name
      - owner
      - signature
      - timestamp
      - type
      type: object
      properties:
        timestamp:
          type: integer
          format: uint64
        name:
          type: string
          example: gavi
        owner:
          pattern: "^0x[0-9a-fA-F]{40}$"
          type: string
        signature:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        fid:
          type: integer
          format: uint64
        type:
          $ref: '#/components/schemas/UserNameType'
      example:
        owner: owner
        fid: 6
        signature: ""
        name: gavi
        type: USERNAME_TYPE_FNAME
        timestamp: 0
    UsernameProofsResponse:
      required:
      - proofs
      type: object
      properties:
        proofs:
          type: array
          items:
            $ref: '#/components/schemas/UserNameProof'
      example:
        proofs:
        - owner: owner
          fid: 6
          signature: ""
          name: gavi
          type: USERNAME_TYPE_FNAME
          timestamp: 0
        - owner: owner
          fid: 6
          signature: ""
          name: gavi
          type: USERNAME_TYPE_FNAME
          timestamp: 0
    UserNameType:
      type: string
      default: USERNAME_TYPE_FNAME
      enum:
      - USERNAME_TYPE_FNAME
      - USERNAME_TYPE_ENS_L1
    ValidateMessageResponse:
      required:
      - message
      - valid
      type: object
      properties:
        valid:
          type: boolean
        message:
          $ref: '#/components/schemas/Message'
      example:
        valid: true
        message: ""
    Verification:
      allOf:
      - $ref: '#/components/schemas/MessageCommon'
      - required:
        - data
        type: object
        properties:
          data:
            allOf:
            - $ref: '#/components/schemas/MessageDataVerificationAdd'
            - required:
              - type
              type: object
              properties:
                type:
                  $ref: '#/components/schemas/MessageType'
    VerificationAddEthAddressBody:
      required:
      - address
      - blockHash
      - ethSignature
      type: object
      properties:
        address:
          title: Ethereum/Solana address being verified
          pattern: "^(?:0x[a-fA-F0-9]{40}|[1-9A-HJ-NP-Za-km-z]{32,44})$"
          type: string
        ethSignature:
          title: Signature produced by the user's Ethereum/Solana address
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        blockHash:
          title: Hash of the latest Ethereum/Solana block when the signature was produced
          pattern: "^(0x[a-fA-F0-9]{64}|[1-9A-HJ-NP-Za-km-z]{44})$"
          type: string
      description: Adds a Verification of ownership of an Ethereum Address
    VerificationRemove:
      allOf:
      - $ref: '#/components/schemas/MessageCommon'
      - required:
        - data
        type: object
        properties:
          data:
            allOf:
            - $ref: '#/components/schemas/MessageDataVerificationRemove'
            - required:
              - type
              type: object
              properties:
                type:
                  $ref: '#/components/schemas/MessageType'
    VerificationRemoveBody:
      required:
      - address
      type: object
      properties:
        address:
          title: Address of the Verification to remove
          pattern: "^0x[A-Za-z0-9]{40}$"
          type: string
      description: Removes a Verification of any type
    inline_response_200:
      required:
      - messages
      - nextPageToken
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/CastAdd'
        nextPageToken:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
      example:
        nextPageToken: ""
        messages:
        - ""
        - ""
    inline_response_200_1:
      required:
      - messages
      - nextPageToken
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Reaction'
        nextPageToken:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
      example:
        nextPageToken: ""
        messages:
        - ""
        - ""
    inline_response_200_2:
      required:
      - messages
      - nextPageToken
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/LinkAdd'
        nextPageToken:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
      example:
        nextPageToken: ""
        messages:
        - ""
        - ""
    inline_response_200_3:
      oneOf:
      - $ref: '#/components/schemas/UserDataAdd'
      - required:
        - messages
        - nextPageToken
        type: object
        properties:
          messages:
            type: array
            items:
              $ref: '#/components/schemas/UserDataAdd'
          nextPageToken:
            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
            type: string
            format: byte
    inline_response_200_4:
      required:
      - messages
      - nextPageToken
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Verification'
        nextPageToken:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
      example:
        nextPageToken: ""
        messages:
        - ""
        - ""
    inline_response_200_5:
      required:
      - events
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/OnChainEvent'
      example:
        events:
        - ""
        - ""
    inline_response_200_6:
      oneOf:
      - $ref: '#/components/schemas/OnChainEventSigner'
      - required:
        - events
        type: object
        properties:
          events:
            type: array
            items:
              $ref: '#/components/schemas/OnChainEventSigner'
    inline_response_200_7:
      required:
      - events
      - nextPageEventId
      type: object
      properties:
        nextPageEventId:
          type: integer
        events:
          type: array
          items:
            $ref: '#/components/schemas/HubEvent'
      example:
        nextPageEventId: 0
        events:
        - ""
        - ""
    ErrorResponse_metadata:
      required:
      - errcode
      type: object
      properties:
        errcode:
          type: array
          items:
            type: string
  responses:
    ErrorResponse:
      description: An unexpected error response.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  parameters:
    apiKey:
      name: api_key
      in: header
      description: API key required for authentication.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        default: NEYNAR_API_DOCS
    pageSize:
      name: pageSize
      in: query
      description: Maximum number of messages to return in a single response
      required: false
      style: form
      explode: true
      schema:
        type: integer
    paginationReverse:
      name: reverse
      in: query
      description: "Reverse the sort order, returning latest messages first"
      required: false
      style: form
      explode: true
      schema:
        type: boolean
    pageToken:
      name: pageToken
      in: query
      description: "The page token returned by the previous query, to fetch the next\
        \ page. If this parameter is empty, fetch the first page"
      required: false
      style: form
      explode: true
      schema:
        type: string
  securitySchemes:
    usernamePassword:
      type: http
      scheme: basic
