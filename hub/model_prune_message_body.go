/*
Raw Farcaster Hub API

Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Farcaster docs](https://www.thehubble.xyz/docs/httpapi/httpapi.html) for more details. 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PruneMessageBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PruneMessageBody{}

// PruneMessageBody struct for PruneMessageBody
type PruneMessageBody struct {
	Message *Message `json:"message,omitempty"`
}

// NewPruneMessageBody instantiates a new PruneMessageBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPruneMessageBody() *PruneMessageBody {
	this := PruneMessageBody{}
	return &this
}

// NewPruneMessageBodyWithDefaults instantiates a new PruneMessageBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPruneMessageBodyWithDefaults() *PruneMessageBody {
	this := PruneMessageBody{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *PruneMessageBody) GetMessage() Message {
	if o == nil || IsNil(o.Message) {
		var ret Message
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PruneMessageBody) GetMessageOk() (*Message, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *PruneMessageBody) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given Message and assigns it to the Message field.
func (o *PruneMessageBody) SetMessage(v Message) {
	o.Message = &v
}

func (o PruneMessageBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PruneMessageBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullablePruneMessageBody struct {
	value *PruneMessageBody
	isSet bool
}

func (v NullablePruneMessageBody) Get() *PruneMessageBody {
	return v.value
}

func (v *NullablePruneMessageBody) Set(val *PruneMessageBody) {
	v.value = val
	v.isSet = true
}

func (v NullablePruneMessageBody) IsSet() bool {
	return v.isSet
}

func (v *NullablePruneMessageBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePruneMessageBody(val *PruneMessageBody) *NullablePruneMessageBody {
	return &NullablePruneMessageBody{value: val, isSet: true}
}

func (v NullablePruneMessageBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePruneMessageBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


