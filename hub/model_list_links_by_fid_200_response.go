/*
Raw Farcaster Hub API

Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Farcaster docs](https://www.thehubble.xyz/docs/httpapi/httpapi.html) for more details. 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the ListLinksByFid200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListLinksByFid200Response{}

// ListLinksByFid200Response struct for ListLinksByFid200Response
type ListLinksByFid200Response struct {
	Messages []LinkAdd `json:"messages"`
	NextPageToken string `json:"nextPageToken" validate:"regexp=^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"`
	AdditionalProperties map[string]interface{}
}

type _ListLinksByFid200Response ListLinksByFid200Response

// NewListLinksByFid200Response instantiates a new ListLinksByFid200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListLinksByFid200Response(messages []LinkAdd, nextPageToken string) *ListLinksByFid200Response {
	this := ListLinksByFid200Response{}
	this.Messages = messages
	this.NextPageToken = nextPageToken
	return &this
}

// NewListLinksByFid200ResponseWithDefaults instantiates a new ListLinksByFid200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListLinksByFid200ResponseWithDefaults() *ListLinksByFid200Response {
	this := ListLinksByFid200Response{}
	return &this
}

// GetMessages returns the Messages field value
func (o *ListLinksByFid200Response) GetMessages() []LinkAdd {
	if o == nil {
		var ret []LinkAdd
		return ret
	}

	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value
// and a boolean to check if the value has been set.
func (o *ListLinksByFid200Response) GetMessagesOk() ([]LinkAdd, bool) {
	if o == nil {
		return nil, false
	}
	return o.Messages, true
}

// SetMessages sets field value
func (o *ListLinksByFid200Response) SetMessages(v []LinkAdd) {
	o.Messages = v
}

// GetNextPageToken returns the NextPageToken field value
func (o *ListLinksByFid200Response) GetNextPageToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value
// and a boolean to check if the value has been set.
func (o *ListLinksByFid200Response) GetNextPageTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NextPageToken, true
}

// SetNextPageToken sets field value
func (o *ListLinksByFid200Response) SetNextPageToken(v string) {
	o.NextPageToken = v
}

func (o ListLinksByFid200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListLinksByFid200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["messages"] = o.Messages
	toSerialize["nextPageToken"] = o.NextPageToken

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListLinksByFid200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"messages",
		"nextPageToken",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListLinksByFid200Response := _ListLinksByFid200Response{}

	err = json.Unmarshal(data, &varListLinksByFid200Response)

	if err != nil {
		return err
	}

	*o = ListLinksByFid200Response(varListLinksByFid200Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "messages")
		delete(additionalProperties, "nextPageToken")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListLinksByFid200Response struct {
	value *ListLinksByFid200Response
	isSet bool
}

func (v NullableListLinksByFid200Response) Get() *ListLinksByFid200Response {
	return v.value
}

func (v *NullableListLinksByFid200Response) Set(val *ListLinksByFid200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListLinksByFid200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListLinksByFid200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListLinksByFid200Response(val *ListLinksByFid200Response) *NullableListLinksByFid200Response {
	return &NullableListLinksByFid200Response{value: val, isSet: true}
}

func (v NullableListLinksByFid200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListLinksByFid200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


