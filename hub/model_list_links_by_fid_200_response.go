/*
Raw Farcaster Hub API

Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Farcaster docs](https://www.thehubble.xyz/docs/httpapi/httpapi.html) for more details. 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListLinksByFid200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListLinksByFid200Response{}

// ListLinksByFid200Response struct for ListLinksByFid200Response
type ListLinksByFid200Response struct {
	Messages []LinkAdd `json:"messages,omitempty"`
	NextPageToken *string `json:"nextPageToken,omitempty" validate:"regexp=^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"`
}

// NewListLinksByFid200Response instantiates a new ListLinksByFid200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListLinksByFid200Response() *ListLinksByFid200Response {
	this := ListLinksByFid200Response{}
	return &this
}

// NewListLinksByFid200ResponseWithDefaults instantiates a new ListLinksByFid200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListLinksByFid200ResponseWithDefaults() *ListLinksByFid200Response {
	this := ListLinksByFid200Response{}
	return &this
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *ListLinksByFid200Response) GetMessages() []LinkAdd {
	if o == nil || IsNil(o.Messages) {
		var ret []LinkAdd
		return ret
	}
	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListLinksByFid200Response) GetMessagesOk() ([]LinkAdd, bool) {
	if o == nil || IsNil(o.Messages) {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *ListLinksByFid200Response) HasMessages() bool {
	if o != nil && !IsNil(o.Messages) {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []LinkAdd and assigns it to the Messages field.
func (o *ListLinksByFid200Response) SetMessages(v []LinkAdd) {
	o.Messages = v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *ListLinksByFid200Response) GetNextPageToken() string {
	if o == nil || IsNil(o.NextPageToken) {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListLinksByFid200Response) GetNextPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextPageToken) {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *ListLinksByFid200Response) HasNextPageToken() bool {
	if o != nil && !IsNil(o.NextPageToken) {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *ListLinksByFid200Response) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

func (o ListLinksByFid200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListLinksByFid200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Messages) {
		toSerialize["messages"] = o.Messages
	}
	if !IsNil(o.NextPageToken) {
		toSerialize["nextPageToken"] = o.NextPageToken
	}
	return toSerialize, nil
}

type NullableListLinksByFid200Response struct {
	value *ListLinksByFid200Response
	isSet bool
}

func (v NullableListLinksByFid200Response) Get() *ListLinksByFid200Response {
	return v.value
}

func (v *NullableListLinksByFid200Response) Set(val *ListLinksByFid200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListLinksByFid200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListLinksByFid200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListLinksByFid200Response(val *ListLinksByFid200Response) *NullableListLinksByFid200Response {
	return &NullableListLinksByFid200Response{value: val, isSet: true}
}

func (v NullableListLinksByFid200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListLinksByFid200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


