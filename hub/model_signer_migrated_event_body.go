/*
Raw Farcaster Hub API

Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Farcaster docs](https://www.thehubble.xyz/docs/httpapi/httpapi.html) for more details. 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the SignerMigratedEventBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SignerMigratedEventBody{}

// SignerMigratedEventBody struct for SignerMigratedEventBody
type SignerMigratedEventBody struct {
	MigratedAt int64 `json:"migratedAt"`
	AdditionalProperties map[string]interface{}
}

type _SignerMigratedEventBody SignerMigratedEventBody

// NewSignerMigratedEventBody instantiates a new SignerMigratedEventBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignerMigratedEventBody(migratedAt int64) *SignerMigratedEventBody {
	this := SignerMigratedEventBody{}
	this.MigratedAt = migratedAt
	return &this
}

// NewSignerMigratedEventBodyWithDefaults instantiates a new SignerMigratedEventBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignerMigratedEventBodyWithDefaults() *SignerMigratedEventBody {
	this := SignerMigratedEventBody{}
	return &this
}

// GetMigratedAt returns the MigratedAt field value
func (o *SignerMigratedEventBody) GetMigratedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MigratedAt
}

// GetMigratedAtOk returns a tuple with the MigratedAt field value
// and a boolean to check if the value has been set.
func (o *SignerMigratedEventBody) GetMigratedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MigratedAt, true
}

// SetMigratedAt sets field value
func (o *SignerMigratedEventBody) SetMigratedAt(v int64) {
	o.MigratedAt = v
}

func (o SignerMigratedEventBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SignerMigratedEventBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["migratedAt"] = o.MigratedAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SignerMigratedEventBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"migratedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSignerMigratedEventBody := _SignerMigratedEventBody{}

	err = json.Unmarshal(data, &varSignerMigratedEventBody)

	if err != nil {
		return err
	}

	*o = SignerMigratedEventBody(varSignerMigratedEventBody)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "migratedAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSignerMigratedEventBody struct {
	value *SignerMigratedEventBody
	isSet bool
}

func (v NullableSignerMigratedEventBody) Get() *SignerMigratedEventBody {
	return v.value
}

func (v *NullableSignerMigratedEventBody) Set(val *SignerMigratedEventBody) {
	v.value = val
	v.isSet = true
}

func (v NullableSignerMigratedEventBody) IsSet() bool {
	return v.isSet
}

func (v *NullableSignerMigratedEventBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignerMigratedEventBody(val *SignerMigratedEventBody) *NullableSignerMigratedEventBody {
	return &NullableSignerMigratedEventBody{value: val, isSet: true}
}

func (v NullableSignerMigratedEventBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignerMigratedEventBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


