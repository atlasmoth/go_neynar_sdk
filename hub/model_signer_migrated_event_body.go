/*
Raw Farcaster Hub API

Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Farcaster docs](https://www.thehubble.xyz/docs/httpapi/httpapi.html) for more details. 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SignerMigratedEventBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SignerMigratedEventBody{}

// SignerMigratedEventBody struct for SignerMigratedEventBody
type SignerMigratedEventBody struct {
	MigratedAt *int64 `json:"migratedAt,omitempty"`
}

// NewSignerMigratedEventBody instantiates a new SignerMigratedEventBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignerMigratedEventBody() *SignerMigratedEventBody {
	this := SignerMigratedEventBody{}
	return &this
}

// NewSignerMigratedEventBodyWithDefaults instantiates a new SignerMigratedEventBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignerMigratedEventBodyWithDefaults() *SignerMigratedEventBody {
	this := SignerMigratedEventBody{}
	return &this
}

// GetMigratedAt returns the MigratedAt field value if set, zero value otherwise.
func (o *SignerMigratedEventBody) GetMigratedAt() int64 {
	if o == nil || IsNil(o.MigratedAt) {
		var ret int64
		return ret
	}
	return *o.MigratedAt
}

// GetMigratedAtOk returns a tuple with the MigratedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignerMigratedEventBody) GetMigratedAtOk() (*int64, bool) {
	if o == nil || IsNil(o.MigratedAt) {
		return nil, false
	}
	return o.MigratedAt, true
}

// HasMigratedAt returns a boolean if a field has been set.
func (o *SignerMigratedEventBody) HasMigratedAt() bool {
	if o != nil && !IsNil(o.MigratedAt) {
		return true
	}

	return false
}

// SetMigratedAt gets a reference to the given int64 and assigns it to the MigratedAt field.
func (o *SignerMigratedEventBody) SetMigratedAt(v int64) {
	o.MigratedAt = &v
}

func (o SignerMigratedEventBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SignerMigratedEventBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MigratedAt) {
		toSerialize["migratedAt"] = o.MigratedAt
	}
	return toSerialize, nil
}

type NullableSignerMigratedEventBody struct {
	value *SignerMigratedEventBody
	isSet bool
}

func (v NullableSignerMigratedEventBody) Get() *SignerMigratedEventBody {
	return v.value
}

func (v *NullableSignerMigratedEventBody) Set(val *SignerMigratedEventBody) {
	v.value = val
	v.isSet = true
}

func (v NullableSignerMigratedEventBody) IsSet() bool {
	return v.isSet
}

func (v *NullableSignerMigratedEventBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignerMigratedEventBody(val *SignerMigratedEventBody) *NullableSignerMigratedEventBody {
	return &NullableSignerMigratedEventBody{value: val, isSet: true}
}

func (v NullableSignerMigratedEventBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignerMigratedEventBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


