/*
Raw Farcaster Hub API

Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Farcaster docs](https://www.thehubble.xyz/docs/httpapi/httpapi.html) for more details. 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FidsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FidsResponse{}

// FidsResponse struct for FidsResponse
type FidsResponse struct {
	Fids []int32 `json:"fids,omitempty"`
	NextPageToken *string `json:"nextPageToken,omitempty" validate:"regexp=^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"`
}

// NewFidsResponse instantiates a new FidsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFidsResponse() *FidsResponse {
	this := FidsResponse{}
	return &this
}

// NewFidsResponseWithDefaults instantiates a new FidsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFidsResponseWithDefaults() *FidsResponse {
	this := FidsResponse{}
	return &this
}

// GetFids returns the Fids field value if set, zero value otherwise.
func (o *FidsResponse) GetFids() []int32 {
	if o == nil || IsNil(o.Fids) {
		var ret []int32
		return ret
	}
	return o.Fids
}

// GetFidsOk returns a tuple with the Fids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FidsResponse) GetFidsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Fids) {
		return nil, false
	}
	return o.Fids, true
}

// HasFids returns a boolean if a field has been set.
func (o *FidsResponse) HasFids() bool {
	if o != nil && !IsNil(o.Fids) {
		return true
	}

	return false
}

// SetFids gets a reference to the given []int32 and assigns it to the Fids field.
func (o *FidsResponse) SetFids(v []int32) {
	o.Fids = v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *FidsResponse) GetNextPageToken() string {
	if o == nil || IsNil(o.NextPageToken) {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FidsResponse) GetNextPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextPageToken) {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *FidsResponse) HasNextPageToken() bool {
	if o != nil && !IsNil(o.NextPageToken) {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *FidsResponse) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

func (o FidsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FidsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Fids) {
		toSerialize["fids"] = o.Fids
	}
	if !IsNil(o.NextPageToken) {
		toSerialize["nextPageToken"] = o.NextPageToken
	}
	return toSerialize, nil
}

type NullableFidsResponse struct {
	value *FidsResponse
	isSet bool
}

func (v NullableFidsResponse) Get() *FidsResponse {
	return v.value
}

func (v *NullableFidsResponse) Set(val *FidsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFidsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFidsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFidsResponse(val *FidsResponse) *NullableFidsResponse {
	return &NullableFidsResponse{value: val, isSet: true}
}

func (v NullableFidsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFidsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


