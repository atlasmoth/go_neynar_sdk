/*
Raw Farcaster Hub API

Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Farcaster docs](https://www.thehubble.xyz/docs/httpapi/httpapi.html) for more details. 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VerificationAddEthAddressBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerificationAddEthAddressBody{}

// VerificationAddEthAddressBody Adds a Verification of ownership of an Ethereum Address
type VerificationAddEthAddressBody struct {
	Address *string `json:"address,omitempty" validate:"regexp=^(?:0x[a-fA-F0-9]{40}|[1-9A-HJ-NP-Za-km-z]{32,44})$"`
	EthSignature *string `json:"ethSignature,omitempty" validate:"regexp=^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"`
	BlockHash *string `json:"blockHash,omitempty" validate:"regexp=^(0x[a-fA-F0-9]{64}|[1-9A-HJ-NP-Za-km-z]{44})$"`
}

// NewVerificationAddEthAddressBody instantiates a new VerificationAddEthAddressBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerificationAddEthAddressBody() *VerificationAddEthAddressBody {
	this := VerificationAddEthAddressBody{}
	return &this
}

// NewVerificationAddEthAddressBodyWithDefaults instantiates a new VerificationAddEthAddressBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerificationAddEthAddressBodyWithDefaults() *VerificationAddEthAddressBody {
	this := VerificationAddEthAddressBody{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *VerificationAddEthAddressBody) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerificationAddEthAddressBody) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *VerificationAddEthAddressBody) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *VerificationAddEthAddressBody) SetAddress(v string) {
	o.Address = &v
}

// GetEthSignature returns the EthSignature field value if set, zero value otherwise.
func (o *VerificationAddEthAddressBody) GetEthSignature() string {
	if o == nil || IsNil(o.EthSignature) {
		var ret string
		return ret
	}
	return *o.EthSignature
}

// GetEthSignatureOk returns a tuple with the EthSignature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerificationAddEthAddressBody) GetEthSignatureOk() (*string, bool) {
	if o == nil || IsNil(o.EthSignature) {
		return nil, false
	}
	return o.EthSignature, true
}

// HasEthSignature returns a boolean if a field has been set.
func (o *VerificationAddEthAddressBody) HasEthSignature() bool {
	if o != nil && !IsNil(o.EthSignature) {
		return true
	}

	return false
}

// SetEthSignature gets a reference to the given string and assigns it to the EthSignature field.
func (o *VerificationAddEthAddressBody) SetEthSignature(v string) {
	o.EthSignature = &v
}

// GetBlockHash returns the BlockHash field value if set, zero value otherwise.
func (o *VerificationAddEthAddressBody) GetBlockHash() string {
	if o == nil || IsNil(o.BlockHash) {
		var ret string
		return ret
	}
	return *o.BlockHash
}

// GetBlockHashOk returns a tuple with the BlockHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerificationAddEthAddressBody) GetBlockHashOk() (*string, bool) {
	if o == nil || IsNil(o.BlockHash) {
		return nil, false
	}
	return o.BlockHash, true
}

// HasBlockHash returns a boolean if a field has been set.
func (o *VerificationAddEthAddressBody) HasBlockHash() bool {
	if o != nil && !IsNil(o.BlockHash) {
		return true
	}

	return false
}

// SetBlockHash gets a reference to the given string and assigns it to the BlockHash field.
func (o *VerificationAddEthAddressBody) SetBlockHash(v string) {
	o.BlockHash = &v
}

func (o VerificationAddEthAddressBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VerificationAddEthAddressBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.EthSignature) {
		toSerialize["ethSignature"] = o.EthSignature
	}
	if !IsNil(o.BlockHash) {
		toSerialize["blockHash"] = o.BlockHash
	}
	return toSerialize, nil
}

type NullableVerificationAddEthAddressBody struct {
	value *VerificationAddEthAddressBody
	isSet bool
}

func (v NullableVerificationAddEthAddressBody) Get() *VerificationAddEthAddressBody {
	return v.value
}

func (v *NullableVerificationAddEthAddressBody) Set(val *VerificationAddEthAddressBody) {
	v.value = val
	v.isSet = true
}

func (v NullableVerificationAddEthAddressBody) IsSet() bool {
	return v.isSet
}

func (v *NullableVerificationAddEthAddressBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerificationAddEthAddressBody(val *VerificationAddEthAddressBody) *NullableVerificationAddEthAddressBody {
	return &NullableVerificationAddEthAddressBody{value: val, isSet: true}
}

func (v NullableVerificationAddEthAddressBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerificationAddEthAddressBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


