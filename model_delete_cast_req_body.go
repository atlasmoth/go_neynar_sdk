/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DeleteCastReqBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteCastReqBody{}

// DeleteCastReqBody struct for DeleteCastReqBody
type DeleteCastReqBody struct {
	// UUID of the signer
	SignerUuid string `json:"signer_uuid"`
	// Ethereum address
	TargetHash string `json:"target_hash" validate:"regexp=^0x[a-fA-F0-9]{40}$"`
}

type _DeleteCastReqBody DeleteCastReqBody

// NewDeleteCastReqBody instantiates a new DeleteCastReqBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteCastReqBody(signerUuid string, targetHash string) *DeleteCastReqBody {
	this := DeleteCastReqBody{}
	this.SignerUuid = signerUuid
	this.TargetHash = targetHash
	return &this
}

// NewDeleteCastReqBodyWithDefaults instantiates a new DeleteCastReqBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteCastReqBodyWithDefaults() *DeleteCastReqBody {
	this := DeleteCastReqBody{}
	return &this
}

// GetSignerUuid returns the SignerUuid field value
func (o *DeleteCastReqBody) GetSignerUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SignerUuid
}

// GetSignerUuidOk returns a tuple with the SignerUuid field value
// and a boolean to check if the value has been set.
func (o *DeleteCastReqBody) GetSignerUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignerUuid, true
}

// SetSignerUuid sets field value
func (o *DeleteCastReqBody) SetSignerUuid(v string) {
	o.SignerUuid = v
}

// GetTargetHash returns the TargetHash field value
func (o *DeleteCastReqBody) GetTargetHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetHash
}

// GetTargetHashOk returns a tuple with the TargetHash field value
// and a boolean to check if the value has been set.
func (o *DeleteCastReqBody) GetTargetHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetHash, true
}

// SetTargetHash sets field value
func (o *DeleteCastReqBody) SetTargetHash(v string) {
	o.TargetHash = v
}

func (o DeleteCastReqBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteCastReqBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["signer_uuid"] = o.SignerUuid
	toSerialize["target_hash"] = o.TargetHash
	return toSerialize, nil
}

func (o *DeleteCastReqBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"signer_uuid",
		"target_hash",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeleteCastReqBody := _DeleteCastReqBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeleteCastReqBody)

	if err != nil {
		return err
	}

	*o = DeleteCastReqBody(varDeleteCastReqBody)

	return err
}

type NullableDeleteCastReqBody struct {
	value *DeleteCastReqBody
	isSet bool
}

func (v NullableDeleteCastReqBody) Get() *DeleteCastReqBody {
	return v.value
}

func (v *NullableDeleteCastReqBody) Set(val *DeleteCastReqBody) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteCastReqBody) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteCastReqBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteCastReqBody(val *DeleteCastReqBody) *NullableDeleteCastReqBody {
	return &NullableDeleteCastReqBody{value: val, isSet: true}
}

func (v NullableDeleteCastReqBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteCastReqBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


