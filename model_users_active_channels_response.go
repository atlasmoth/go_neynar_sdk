/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UsersActiveChannelsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsersActiveChannelsResponse{}

// UsersActiveChannelsResponse struct for UsersActiveChannelsResponse
type UsersActiveChannelsResponse struct {
	Channels []Channel   `json:"channels,omitempty"`
	Next     *NextCursor `json:"next,omitempty"`
}

// NewUsersActiveChannelsResponse instantiates a new UsersActiveChannelsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsersActiveChannelsResponse() *UsersActiveChannelsResponse {
	this := UsersActiveChannelsResponse{}
	return &this
}

// NewUsersActiveChannelsResponseWithDefaults instantiates a new UsersActiveChannelsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsersActiveChannelsResponseWithDefaults() *UsersActiveChannelsResponse {
	this := UsersActiveChannelsResponse{}
	return &this
}

// GetChannels returns the Channels field value if set, zero value otherwise.
func (o *UsersActiveChannelsResponse) GetChannels() []Channel {
	if o == nil || IsNil(o.Channels) {
		var ret []Channel
		return ret
	}
	return o.Channels
}

// GetChannelsOk returns a tuple with the Channels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersActiveChannelsResponse) GetChannelsOk() ([]Channel, bool) {
	if o == nil || IsNil(o.Channels) {
		return nil, false
	}
	return o.Channels, true
}

// HasChannels returns a boolean if a field has been set.
func (o *UsersActiveChannelsResponse) HasChannels() bool {
	if o != nil && !IsNil(o.Channels) {
		return true
	}

	return false
}

// SetChannels gets a reference to the given []Channel and assigns it to the Channels field.
func (o *UsersActiveChannelsResponse) SetChannels(v []Channel) {
	o.Channels = v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *UsersActiveChannelsResponse) GetNext() NextCursor {
	if o == nil || IsNil(o.Next) {
		var ret NextCursor
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersActiveChannelsResponse) GetNextOk() (*NextCursor, bool) {
	if o == nil || IsNil(o.Next) {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *UsersActiveChannelsResponse) HasNext() bool {
	if o != nil && !IsNil(o.Next) {
		return true
	}

	return false
}

// SetNext gets a reference to the given NextCursor and assigns it to the Next field.
func (o *UsersActiveChannelsResponse) SetNext(v NextCursor) {
	o.Next = &v
}

func (o UsersActiveChannelsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsersActiveChannelsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Channels) {
		toSerialize["channels"] = o.Channels
	}
	if !IsNil(o.Next) {
		toSerialize["next"] = o.Next
	}
	return toSerialize, nil
}

type NullableUsersActiveChannelsResponse struct {
	value *UsersActiveChannelsResponse
	isSet bool
}

func (v NullableUsersActiveChannelsResponse) Get() *UsersActiveChannelsResponse {
	return v.value
}

func (v *NullableUsersActiveChannelsResponse) Set(val *UsersActiveChannelsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUsersActiveChannelsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUsersActiveChannelsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsersActiveChannelsResponse(val *UsersActiveChannelsResponse) *NullableUsersActiveChannelsResponse {
	return &NullableUsersActiveChannelsResponse{value: val, isSet: true}
}

func (v NullableUsersActiveChannelsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsersActiveChannelsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
