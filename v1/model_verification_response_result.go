/*
Farcaster API V1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the VerificationResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerificationResponseResult{}

// VerificationResponseResult struct for VerificationResponseResult
type VerificationResponseResult struct {
	Fid string `json:"fid"`
	Username string `json:"username"`
	DisplayName string `json:"display_name"`
	Verifications []string `json:"verifications"`
	AdditionalProperties map[string]interface{}
}

type _VerificationResponseResult VerificationResponseResult

// NewVerificationResponseResult instantiates a new VerificationResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerificationResponseResult(fid string, username string, displayName string, verifications []string) *VerificationResponseResult {
	this := VerificationResponseResult{}
	this.Fid = fid
	this.Username = username
	this.DisplayName = displayName
	this.Verifications = verifications
	return &this
}

// NewVerificationResponseResultWithDefaults instantiates a new VerificationResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerificationResponseResultWithDefaults() *VerificationResponseResult {
	this := VerificationResponseResult{}
	return &this
}

// GetFid returns the Fid field value
func (o *VerificationResponseResult) GetFid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Fid
}

// GetFidOk returns a tuple with the Fid field value
// and a boolean to check if the value has been set.
func (o *VerificationResponseResult) GetFidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fid, true
}

// SetFid sets field value
func (o *VerificationResponseResult) SetFid(v string) {
	o.Fid = v
}

// GetUsername returns the Username field value
func (o *VerificationResponseResult) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *VerificationResponseResult) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *VerificationResponseResult) SetUsername(v string) {
	o.Username = v
}

// GetDisplayName returns the DisplayName field value
func (o *VerificationResponseResult) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *VerificationResponseResult) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *VerificationResponseResult) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetVerifications returns the Verifications field value
func (o *VerificationResponseResult) GetVerifications() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Verifications
}

// GetVerificationsOk returns a tuple with the Verifications field value
// and a boolean to check if the value has been set.
func (o *VerificationResponseResult) GetVerificationsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Verifications, true
}

// SetVerifications sets field value
func (o *VerificationResponseResult) SetVerifications(v []string) {
	o.Verifications = v
}

func (o VerificationResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VerificationResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["fid"] = o.Fid
	toSerialize["username"] = o.Username
	toSerialize["display_name"] = o.DisplayName
	toSerialize["verifications"] = o.Verifications

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *VerificationResponseResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fid",
		"username",
		"display_name",
		"verifications",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVerificationResponseResult := _VerificationResponseResult{}

	err = json.Unmarshal(data, &varVerificationResponseResult)

	if err != nil {
		return err
	}

	*o = VerificationResponseResult(varVerificationResponseResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "fid")
		delete(additionalProperties, "username")
		delete(additionalProperties, "display_name")
		delete(additionalProperties, "verifications")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVerificationResponseResult struct {
	value *VerificationResponseResult
	isSet bool
}

func (v NullableVerificationResponseResult) Get() *VerificationResponseResult {
	return v.value
}

func (v *NullableVerificationResponseResult) Set(val *VerificationResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableVerificationResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableVerificationResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerificationResponseResult(val *VerificationResponseResult) *NullableVerificationResponseResult {
	return &NullableVerificationResponseResult{value: val, isSet: true}
}

func (v NullableVerificationResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerificationResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


