/*
Farcaster API V1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ReactionWithCastMetaCast type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReactionWithCastMetaCast{}

// ReactionWithCastMetaCast struct for ReactionWithCastMetaCast
type ReactionWithCastMetaCast struct {
	// User identifier (unsigned integer)
	CastFid *int32 `json:"cast_fid,omitempty"`
	CastHash *string `json:"cast_hash,omitempty"`
	CastText *string `json:"cast_text,omitempty"`
	CastEmbeds []EmbedUrl `json:"cast_embeds,omitempty"`
	CastTimestamp *time.Time `json:"cast_timestamp,omitempty"`
}

// NewReactionWithCastMetaCast instantiates a new ReactionWithCastMetaCast object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReactionWithCastMetaCast() *ReactionWithCastMetaCast {
	this := ReactionWithCastMetaCast{}
	var castFid int32 = 3
	this.CastFid = &castFid
	return &this
}

// NewReactionWithCastMetaCastWithDefaults instantiates a new ReactionWithCastMetaCast object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReactionWithCastMetaCastWithDefaults() *ReactionWithCastMetaCast {
	this := ReactionWithCastMetaCast{}
	var castFid int32 = 3
	this.CastFid = &castFid
	return &this
}

// GetCastFid returns the CastFid field value if set, zero value otherwise.
func (o *ReactionWithCastMetaCast) GetCastFid() int32 {
	if o == nil || IsNil(o.CastFid) {
		var ret int32
		return ret
	}
	return *o.CastFid
}

// GetCastFidOk returns a tuple with the CastFid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReactionWithCastMetaCast) GetCastFidOk() (*int32, bool) {
	if o == nil || IsNil(o.CastFid) {
		return nil, false
	}
	return o.CastFid, true
}

// HasCastFid returns a boolean if a field has been set.
func (o *ReactionWithCastMetaCast) HasCastFid() bool {
	if o != nil && !IsNil(o.CastFid) {
		return true
	}

	return false
}

// SetCastFid gets a reference to the given int32 and assigns it to the CastFid field.
func (o *ReactionWithCastMetaCast) SetCastFid(v int32) {
	o.CastFid = &v
}

// GetCastHash returns the CastHash field value if set, zero value otherwise.
func (o *ReactionWithCastMetaCast) GetCastHash() string {
	if o == nil || IsNil(o.CastHash) {
		var ret string
		return ret
	}
	return *o.CastHash
}

// GetCastHashOk returns a tuple with the CastHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReactionWithCastMetaCast) GetCastHashOk() (*string, bool) {
	if o == nil || IsNil(o.CastHash) {
		return nil, false
	}
	return o.CastHash, true
}

// HasCastHash returns a boolean if a field has been set.
func (o *ReactionWithCastMetaCast) HasCastHash() bool {
	if o != nil && !IsNil(o.CastHash) {
		return true
	}

	return false
}

// SetCastHash gets a reference to the given string and assigns it to the CastHash field.
func (o *ReactionWithCastMetaCast) SetCastHash(v string) {
	o.CastHash = &v
}

// GetCastText returns the CastText field value if set, zero value otherwise.
func (o *ReactionWithCastMetaCast) GetCastText() string {
	if o == nil || IsNil(o.CastText) {
		var ret string
		return ret
	}
	return *o.CastText
}

// GetCastTextOk returns a tuple with the CastText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReactionWithCastMetaCast) GetCastTextOk() (*string, bool) {
	if o == nil || IsNil(o.CastText) {
		return nil, false
	}
	return o.CastText, true
}

// HasCastText returns a boolean if a field has been set.
func (o *ReactionWithCastMetaCast) HasCastText() bool {
	if o != nil && !IsNil(o.CastText) {
		return true
	}

	return false
}

// SetCastText gets a reference to the given string and assigns it to the CastText field.
func (o *ReactionWithCastMetaCast) SetCastText(v string) {
	o.CastText = &v
}

// GetCastEmbeds returns the CastEmbeds field value if set, zero value otherwise.
func (o *ReactionWithCastMetaCast) GetCastEmbeds() []EmbedUrl {
	if o == nil || IsNil(o.CastEmbeds) {
		var ret []EmbedUrl
		return ret
	}
	return o.CastEmbeds
}

// GetCastEmbedsOk returns a tuple with the CastEmbeds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReactionWithCastMetaCast) GetCastEmbedsOk() ([]EmbedUrl, bool) {
	if o == nil || IsNil(o.CastEmbeds) {
		return nil, false
	}
	return o.CastEmbeds, true
}

// HasCastEmbeds returns a boolean if a field has been set.
func (o *ReactionWithCastMetaCast) HasCastEmbeds() bool {
	if o != nil && !IsNil(o.CastEmbeds) {
		return true
	}

	return false
}

// SetCastEmbeds gets a reference to the given []EmbedUrl and assigns it to the CastEmbeds field.
func (o *ReactionWithCastMetaCast) SetCastEmbeds(v []EmbedUrl) {
	o.CastEmbeds = v
}

// GetCastTimestamp returns the CastTimestamp field value if set, zero value otherwise.
func (o *ReactionWithCastMetaCast) GetCastTimestamp() time.Time {
	if o == nil || IsNil(o.CastTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.CastTimestamp
}

// GetCastTimestampOk returns a tuple with the CastTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReactionWithCastMetaCast) GetCastTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CastTimestamp) {
		return nil, false
	}
	return o.CastTimestamp, true
}

// HasCastTimestamp returns a boolean if a field has been set.
func (o *ReactionWithCastMetaCast) HasCastTimestamp() bool {
	if o != nil && !IsNil(o.CastTimestamp) {
		return true
	}

	return false
}

// SetCastTimestamp gets a reference to the given time.Time and assigns it to the CastTimestamp field.
func (o *ReactionWithCastMetaCast) SetCastTimestamp(v time.Time) {
	o.CastTimestamp = &v
}

func (o ReactionWithCastMetaCast) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReactionWithCastMetaCast) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CastFid) {
		toSerialize["cast_fid"] = o.CastFid
	}
	if !IsNil(o.CastHash) {
		toSerialize["cast_hash"] = o.CastHash
	}
	if !IsNil(o.CastText) {
		toSerialize["cast_text"] = o.CastText
	}
	if !IsNil(o.CastEmbeds) {
		toSerialize["cast_embeds"] = o.CastEmbeds
	}
	if !IsNil(o.CastTimestamp) {
		toSerialize["cast_timestamp"] = o.CastTimestamp
	}
	return toSerialize, nil
}

type NullableReactionWithCastMetaCast struct {
	value *ReactionWithCastMetaCast
	isSet bool
}

func (v NullableReactionWithCastMetaCast) Get() *ReactionWithCastMetaCast {
	return v.value
}

func (v *NullableReactionWithCastMetaCast) Set(val *ReactionWithCastMetaCast) {
	v.value = val
	v.isSet = true
}

func (v NullableReactionWithCastMetaCast) IsSet() bool {
	return v.isSet
}

func (v *NullableReactionWithCastMetaCast) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReactionWithCastMetaCast(val *ReactionWithCastMetaCast) *NullableReactionWithCastMetaCast {
	return &NullableReactionWithCastMetaCast{value: val, isSet: true}
}

func (v NullableReactionWithCastMetaCast) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReactionWithCastMetaCast) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


