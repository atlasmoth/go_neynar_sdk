/*
Farcaster API V1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the NextCursor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NextCursor{}

// NextCursor Returns next cursor
type NextCursor struct {
	Cursor NullableString `json:"cursor,omitempty"`
}

// NewNextCursor instantiates a new NextCursor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNextCursor() *NextCursor {
	this := NextCursor{}
	return &this
}

// NewNextCursorWithDefaults instantiates a new NextCursor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNextCursorWithDefaults() *NextCursor {
	this := NextCursor{}
	return &this
}

// GetCursor returns the Cursor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NextCursor) GetCursor() string {
	if o == nil || IsNil(o.Cursor.Get()) {
		var ret string
		return ret
	}
	return *o.Cursor.Get()
}

// GetCursorOk returns a tuple with the Cursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NextCursor) GetCursorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cursor.Get(), o.Cursor.IsSet()
}

// HasCursor returns a boolean if a field has been set.
func (o *NextCursor) HasCursor() bool {
	if o != nil && o.Cursor.IsSet() {
		return true
	}

	return false
}

// SetCursor gets a reference to the given NullableString and assigns it to the Cursor field.
func (o *NextCursor) SetCursor(v string) {
	o.Cursor.Set(&v)
}
// SetCursorNil sets the value for Cursor to be an explicit nil
func (o *NextCursor) SetCursorNil() {
	o.Cursor.Set(nil)
}

// UnsetCursor ensures that no value is present for Cursor, not even an explicit nil
func (o *NextCursor) UnsetCursor() {
	o.Cursor.Unset()
}

func (o NextCursor) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NextCursor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Cursor.IsSet() {
		toSerialize["cursor"] = o.Cursor.Get()
	}
	return toSerialize, nil
}

type NullableNextCursor struct {
	value *NextCursor
	isSet bool
}

func (v NullableNextCursor) Get() *NextCursor {
	return v.value
}

func (v *NullableNextCursor) Set(val *NextCursor) {
	v.value = val
	v.isSet = true
}

func (v NullableNextCursor) IsSet() bool {
	return v.isSet
}

func (v *NullableNextCursor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNextCursor(val *NextCursor) *NullableNextCursor {
	return &NullableNextCursor{value: val, isSet: true}
}

func (v NullableNextCursor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNextCursor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


