/*
Farcaster API V1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserCastLikeResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserCastLikeResponse{}

// UserCastLikeResponse struct for UserCastLikeResponse
type UserCastLikeResponse struct {
	Result *UserCastLikeResponseResult `json:"result,omitempty"`
}

// NewUserCastLikeResponse instantiates a new UserCastLikeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserCastLikeResponse() *UserCastLikeResponse {
	this := UserCastLikeResponse{}
	return &this
}

// NewUserCastLikeResponseWithDefaults instantiates a new UserCastLikeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserCastLikeResponseWithDefaults() *UserCastLikeResponse {
	this := UserCastLikeResponse{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *UserCastLikeResponse) GetResult() UserCastLikeResponseResult {
	if o == nil || IsNil(o.Result) {
		var ret UserCastLikeResponseResult
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCastLikeResponse) GetResultOk() (*UserCastLikeResponseResult, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *UserCastLikeResponse) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given UserCastLikeResponseResult and assigns it to the Result field.
func (o *UserCastLikeResponse) SetResult(v UserCastLikeResponseResult) {
	o.Result = &v
}

func (o UserCastLikeResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserCastLikeResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

type NullableUserCastLikeResponse struct {
	value *UserCastLikeResponse
	isSet bool
}

func (v NullableUserCastLikeResponse) Get() *UserCastLikeResponse {
	return v.value
}

func (v *NullableUserCastLikeResponse) Set(val *UserCastLikeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUserCastLikeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUserCastLikeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserCastLikeResponse(val *UserCastLikeResponse) *NullableUserCastLikeResponse {
	return &NullableUserCastLikeResponse{value: val, isSet: true}
}

func (v NullableUserCastLikeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserCastLikeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


