/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the BuyStorageReqBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BuyStorageReqBody{}

// BuyStorageReqBody struct for BuyStorageReqBody
type BuyStorageReqBody struct {
	Fid int32 `json:"fid"`
	// Number of storage units to buy. A storage unit lets you store 5000 casts, 2500 reactions and 2500 links.
	Units *int32 `json:"units,omitempty"`
	// An Idempotency key is a unique identifier for the request. **Note:**  1) This is used to prevent duplicate requests. Use the same idem key on retry attempts. 2) This should be a unique identifier for each request. 3) Recommended format is a 16-character string generated by the developer at the time of making this request.
	Idem *string `json:"idem,omitempty"`
}

type _BuyStorageReqBody BuyStorageReqBody

// NewBuyStorageReqBody instantiates a new BuyStorageReqBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBuyStorageReqBody(fid int32) *BuyStorageReqBody {
	this := BuyStorageReqBody{}
	this.Fid = fid
	return &this
}

// NewBuyStorageReqBodyWithDefaults instantiates a new BuyStorageReqBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBuyStorageReqBodyWithDefaults() *BuyStorageReqBody {
	this := BuyStorageReqBody{}
	return &this
}

// GetFid returns the Fid field value
func (o *BuyStorageReqBody) GetFid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Fid
}

// GetFidOk returns a tuple with the Fid field value
// and a boolean to check if the value has been set.
func (o *BuyStorageReqBody) GetFidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fid, true
}

// SetFid sets field value
func (o *BuyStorageReqBody) SetFid(v int32) {
	o.Fid = v
}

// GetUnits returns the Units field value if set, zero value otherwise.
func (o *BuyStorageReqBody) GetUnits() int32 {
	if o == nil || IsNil(o.Units) {
		var ret int32
		return ret
	}
	return *o.Units
}

// GetUnitsOk returns a tuple with the Units field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyStorageReqBody) GetUnitsOk() (*int32, bool) {
	if o == nil || IsNil(o.Units) {
		return nil, false
	}
	return o.Units, true
}

// HasUnits returns a boolean if a field has been set.
func (o *BuyStorageReqBody) HasUnits() bool {
	if o != nil && !IsNil(o.Units) {
		return true
	}

	return false
}

// SetUnits gets a reference to the given int32 and assigns it to the Units field.
func (o *BuyStorageReqBody) SetUnits(v int32) {
	o.Units = &v
}

// GetIdem returns the Idem field value if set, zero value otherwise.
func (o *BuyStorageReqBody) GetIdem() string {
	if o == nil || IsNil(o.Idem) {
		var ret string
		return ret
	}
	return *o.Idem
}

// GetIdemOk returns a tuple with the Idem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyStorageReqBody) GetIdemOk() (*string, bool) {
	if o == nil || IsNil(o.Idem) {
		return nil, false
	}
	return o.Idem, true
}

// HasIdem returns a boolean if a field has been set.
func (o *BuyStorageReqBody) HasIdem() bool {
	if o != nil && !IsNil(o.Idem) {
		return true
	}

	return false
}

// SetIdem gets a reference to the given string and assigns it to the Idem field.
func (o *BuyStorageReqBody) SetIdem(v string) {
	o.Idem = &v
}

func (o BuyStorageReqBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BuyStorageReqBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["fid"] = o.Fid
	if !IsNil(o.Units) {
		toSerialize["units"] = o.Units
	}
	if !IsNil(o.Idem) {
		toSerialize["idem"] = o.Idem
	}
	return toSerialize, nil
}

func (o *BuyStorageReqBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBuyStorageReqBody := _BuyStorageReqBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBuyStorageReqBody)

	if err != nil {
		return err
	}

	*o = BuyStorageReqBody(varBuyStorageReqBody)

	return err
}

type NullableBuyStorageReqBody struct {
	value *BuyStorageReqBody
	isSet bool
}

func (v NullableBuyStorageReqBody) Get() *BuyStorageReqBody {
	return v.value
}

func (v *NullableBuyStorageReqBody) Set(val *BuyStorageReqBody) {
	v.value = val
	v.isSet = true
}

func (v NullableBuyStorageReqBody) IsSet() bool {
	return v.isSet
}

func (v *NullableBuyStorageReqBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuyStorageReqBody(val *BuyStorageReqBody) *NullableBuyStorageReqBody {
	return &NullableBuyStorageReqBody{value: val, isSet: true}
}

func (v NullableBuyStorageReqBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuyStorageReqBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
