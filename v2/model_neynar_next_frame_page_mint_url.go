/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the NeynarNextFramePageMintUrl type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NeynarNextFramePageMintUrl{}

// NeynarNextFramePageMintUrl struct for NeynarNextFramePageMintUrl
type NeynarNextFramePageMintUrl struct {
	// The URL for minting, specific to the mint action.
	MintUrl *string `json:"mint_url,omitempty"`
}

// NewNeynarNextFramePageMintUrl instantiates a new NeynarNextFramePageMintUrl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNeynarNextFramePageMintUrl() *NeynarNextFramePageMintUrl {
	this := NeynarNextFramePageMintUrl{}
	return &this
}

// NewNeynarNextFramePageMintUrlWithDefaults instantiates a new NeynarNextFramePageMintUrl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNeynarNextFramePageMintUrlWithDefaults() *NeynarNextFramePageMintUrl {
	this := NeynarNextFramePageMintUrl{}
	return &this
}

// GetMintUrl returns the MintUrl field value if set, zero value otherwise.
func (o *NeynarNextFramePageMintUrl) GetMintUrl() string {
	if o == nil || IsNil(o.MintUrl) {
		var ret string
		return ret
	}
	return *o.MintUrl
}

// GetMintUrlOk returns a tuple with the MintUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NeynarNextFramePageMintUrl) GetMintUrlOk() (*string, bool) {
	if o == nil || IsNil(o.MintUrl) {
		return nil, false
	}
	return o.MintUrl, true
}

// HasMintUrl returns a boolean if a field has been set.
func (o *NeynarNextFramePageMintUrl) HasMintUrl() bool {
	if o != nil && !IsNil(o.MintUrl) {
		return true
	}

	return false
}

// SetMintUrl gets a reference to the given string and assigns it to the MintUrl field.
func (o *NeynarNextFramePageMintUrl) SetMintUrl(v string) {
	o.MintUrl = &v
}

func (o NeynarNextFramePageMintUrl) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NeynarNextFramePageMintUrl) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MintUrl) {
		toSerialize["mint_url"] = o.MintUrl
	}
	return toSerialize, nil
}

type NullableNeynarNextFramePageMintUrl struct {
	value *NeynarNextFramePageMintUrl
	isSet bool
}

func (v NullableNeynarNextFramePageMintUrl) Get() *NeynarNextFramePageMintUrl {
	return v.value
}

func (v *NullableNeynarNextFramePageMintUrl) Set(val *NeynarNextFramePageMintUrl) {
	v.value = val
	v.isSet = true
}

func (v NullableNeynarNextFramePageMintUrl) IsSet() bool {
	return v.isSet
}

func (v *NullableNeynarNextFramePageMintUrl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNeynarNextFramePageMintUrl(val *NeynarNextFramePageMintUrl) *NullableNeynarNextFramePageMintUrl {
	return &NullableNeynarNextFramePageMintUrl{value: val, isSet: true}
}

func (v NullableNeynarNextFramePageMintUrl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNeynarNextFramePageMintUrl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


