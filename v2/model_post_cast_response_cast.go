/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PostCastResponseCast type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostCastResponseCast{}

// PostCastResponseCast struct for PostCastResponseCast
type PostCastResponseCast struct {
	// Ethereum address
	Hash *string `json:"hash,omitempty" validate:"regexp=^0x[a-fA-F0-9]{40}$"`
	Author *PostCastResponseCastAuthor `json:"author,omitempty"`
	Text *string `json:"text,omitempty"`
}

// NewPostCastResponseCast instantiates a new PostCastResponseCast object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostCastResponseCast() *PostCastResponseCast {
	this := PostCastResponseCast{}
	return &this
}

// NewPostCastResponseCastWithDefaults instantiates a new PostCastResponseCast object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostCastResponseCastWithDefaults() *PostCastResponseCast {
	this := PostCastResponseCast{}
	return &this
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *PostCastResponseCast) GetHash() string {
	if o == nil || IsNil(o.Hash) {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostCastResponseCast) GetHashOk() (*string, bool) {
	if o == nil || IsNil(o.Hash) {
		return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *PostCastResponseCast) HasHash() bool {
	if o != nil && !IsNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *PostCastResponseCast) SetHash(v string) {
	o.Hash = &v
}

// GetAuthor returns the Author field value if set, zero value otherwise.
func (o *PostCastResponseCast) GetAuthor() PostCastResponseCastAuthor {
	if o == nil || IsNil(o.Author) {
		var ret PostCastResponseCastAuthor
		return ret
	}
	return *o.Author
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostCastResponseCast) GetAuthorOk() (*PostCastResponseCastAuthor, bool) {
	if o == nil || IsNil(o.Author) {
		return nil, false
	}
	return o.Author, true
}

// HasAuthor returns a boolean if a field has been set.
func (o *PostCastResponseCast) HasAuthor() bool {
	if o != nil && !IsNil(o.Author) {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given PostCastResponseCastAuthor and assigns it to the Author field.
func (o *PostCastResponseCast) SetAuthor(v PostCastResponseCastAuthor) {
	o.Author = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *PostCastResponseCast) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostCastResponseCast) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *PostCastResponseCast) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *PostCastResponseCast) SetText(v string) {
	o.Text = &v
}

func (o PostCastResponseCast) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostCastResponseCast) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Hash) {
		toSerialize["hash"] = o.Hash
	}
	if !IsNil(o.Author) {
		toSerialize["author"] = o.Author
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	return toSerialize, nil
}

type NullablePostCastResponseCast struct {
	value *PostCastResponseCast
	isSet bool
}

func (v NullablePostCastResponseCast) Get() *PostCastResponseCast {
	return v.value
}

func (v *NullablePostCastResponseCast) Set(val *PostCastResponseCast) {
	v.value = val
	v.isSet = true
}

func (v NullablePostCastResponseCast) IsSet() bool {
	return v.isSet
}

func (v *NullablePostCastResponseCast) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostCastResponseCast(val *PostCastResponseCast) *NullablePostCastResponseCast {
	return &NullablePostCastResponseCast{value: val, isSet: true}
}

func (v NullablePostCastResponseCast) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostCastResponseCast) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


