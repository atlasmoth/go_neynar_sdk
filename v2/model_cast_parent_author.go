/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CastParentAuthor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CastParentAuthor{}

// CastParentAuthor struct for CastParentAuthor
type CastParentAuthor struct {
	Fid NullableInt32 `json:"fid,omitempty"`
}

// NewCastParentAuthor instantiates a new CastParentAuthor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCastParentAuthor() *CastParentAuthor {
	this := CastParentAuthor{}
	return &this
}

// NewCastParentAuthorWithDefaults instantiates a new CastParentAuthor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCastParentAuthorWithDefaults() *CastParentAuthor {
	this := CastParentAuthor{}
	return &this
}

// GetFid returns the Fid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CastParentAuthor) GetFid() int32 {
	if o == nil || IsNil(o.Fid.Get()) {
		var ret int32
		return ret
	}
	return *o.Fid.Get()
}

// GetFidOk returns a tuple with the Fid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CastParentAuthor) GetFidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Fid.Get(), o.Fid.IsSet()
}

// HasFid returns a boolean if a field has been set.
func (o *CastParentAuthor) HasFid() bool {
	if o != nil && o.Fid.IsSet() {
		return true
	}

	return false
}

// SetFid gets a reference to the given NullableInt32 and assigns it to the Fid field.
func (o *CastParentAuthor) SetFid(v int32) {
	o.Fid.Set(&v)
}
// SetFidNil sets the value for Fid to be an explicit nil
func (o *CastParentAuthor) SetFidNil() {
	o.Fid.Set(nil)
}

// UnsetFid ensures that no value is present for Fid, not even an explicit nil
func (o *CastParentAuthor) UnsetFid() {
	o.Fid.Unset()
}

func (o CastParentAuthor) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CastParentAuthor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Fid.IsSet() {
		toSerialize["fid"] = o.Fid.Get()
	}
	return toSerialize, nil
}

type NullableCastParentAuthor struct {
	value *CastParentAuthor
	isSet bool
}

func (v NullableCastParentAuthor) Get() *CastParentAuthor {
	return v.value
}

func (v *NullableCastParentAuthor) Set(val *CastParentAuthor) {
	v.value = val
	v.isSet = true
}

func (v NullableCastParentAuthor) IsSet() bool {
	return v.isSet
}

func (v *NullableCastParentAuthor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCastParentAuthor(val *CastParentAuthor) *NullableCastParentAuthor {
	return &NullableCastParentAuthor{value: val, isSet: true}
}

func (v NullableCastParentAuthor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCastParentAuthor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


