/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the WebhookSecret type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookSecret{}

// WebhookSecret struct for WebhookSecret
type WebhookSecret struct {
	Uid string `json:"uid"`
	Value string `json:"value"`
	ExpiresAt string `json:"expires_at"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
	DeletedAt string `json:"deleted_at"`
	AdditionalProperties map[string]interface{}
}

type _WebhookSecret WebhookSecret

// NewWebhookSecret instantiates a new WebhookSecret object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookSecret(uid string, value string, expiresAt string, createdAt string, updatedAt string, deletedAt string) *WebhookSecret {
	this := WebhookSecret{}
	this.Uid = uid
	this.Value = value
	this.ExpiresAt = expiresAt
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.DeletedAt = deletedAt
	return &this
}

// NewWebhookSecretWithDefaults instantiates a new WebhookSecret object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookSecretWithDefaults() *WebhookSecret {
	this := WebhookSecret{}
	return &this
}

// GetUid returns the Uid field value
func (o *WebhookSecret) GetUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uid
}

// GetUidOk returns a tuple with the Uid field value
// and a boolean to check if the value has been set.
func (o *WebhookSecret) GetUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uid, true
}

// SetUid sets field value
func (o *WebhookSecret) SetUid(v string) {
	o.Uid = v
}

// GetValue returns the Value field value
func (o *WebhookSecret) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *WebhookSecret) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *WebhookSecret) SetValue(v string) {
	o.Value = v
}

// GetExpiresAt returns the ExpiresAt field value
func (o *WebhookSecret) GetExpiresAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value
// and a boolean to check if the value has been set.
func (o *WebhookSecret) GetExpiresAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiresAt, true
}

// SetExpiresAt sets field value
func (o *WebhookSecret) SetExpiresAt(v string) {
	o.ExpiresAt = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *WebhookSecret) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *WebhookSecret) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *WebhookSecret) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *WebhookSecret) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *WebhookSecret) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *WebhookSecret) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetDeletedAt returns the DeletedAt field value
func (o *WebhookSecret) GetDeletedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value
// and a boolean to check if the value has been set.
func (o *WebhookSecret) GetDeletedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeletedAt, true
}

// SetDeletedAt sets field value
func (o *WebhookSecret) SetDeletedAt(v string) {
	o.DeletedAt = v
}

func (o WebhookSecret) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookSecret) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["uid"] = o.Uid
	toSerialize["value"] = o.Value
	toSerialize["expires_at"] = o.ExpiresAt
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["deleted_at"] = o.DeletedAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WebhookSecret) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"uid",
		"value",
		"expires_at",
		"created_at",
		"updated_at",
		"deleted_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookSecret := _WebhookSecret{}

	err = json.Unmarshal(data, &varWebhookSecret)

	if err != nil {
		return err
	}

	*o = WebhookSecret(varWebhookSecret)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "uid")
		delete(additionalProperties, "value")
		delete(additionalProperties, "expires_at")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "deleted_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWebhookSecret struct {
	value *WebhookSecret
	isSet bool
}

func (v NullableWebhookSecret) Get() *WebhookSecret {
	return v.value
}

func (v *NullableWebhookSecret) Set(val *WebhookSecret) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookSecret) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookSecret) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookSecret(val *WebhookSecret) *NullableWebhookSecret {
	return &NullableWebhookSecret{value: val, isSet: true}
}

func (v NullableWebhookSecret) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookSecret) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


