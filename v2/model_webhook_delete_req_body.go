/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the WebhookDeleteReqBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookDeleteReqBody{}

// WebhookDeleteReqBody struct for WebhookDeleteReqBody
type WebhookDeleteReqBody struct {
	WebhookId *string `json:"webhook_id,omitempty"`
}

// NewWebhookDeleteReqBody instantiates a new WebhookDeleteReqBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookDeleteReqBody() *WebhookDeleteReqBody {
	this := WebhookDeleteReqBody{}
	return &this
}

// NewWebhookDeleteReqBodyWithDefaults instantiates a new WebhookDeleteReqBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookDeleteReqBodyWithDefaults() *WebhookDeleteReqBody {
	this := WebhookDeleteReqBody{}
	return &this
}

// GetWebhookId returns the WebhookId field value if set, zero value otherwise.
func (o *WebhookDeleteReqBody) GetWebhookId() string {
	if o == nil || IsNil(o.WebhookId) {
		var ret string
		return ret
	}
	return *o.WebhookId
}

// GetWebhookIdOk returns a tuple with the WebhookId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookDeleteReqBody) GetWebhookIdOk() (*string, bool) {
	if o == nil || IsNil(o.WebhookId) {
		return nil, false
	}
	return o.WebhookId, true
}

// HasWebhookId returns a boolean if a field has been set.
func (o *WebhookDeleteReqBody) HasWebhookId() bool {
	if o != nil && !IsNil(o.WebhookId) {
		return true
	}

	return false
}

// SetWebhookId gets a reference to the given string and assigns it to the WebhookId field.
func (o *WebhookDeleteReqBody) SetWebhookId(v string) {
	o.WebhookId = &v
}

func (o WebhookDeleteReqBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookDeleteReqBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WebhookId) {
		toSerialize["webhook_id"] = o.WebhookId
	}
	return toSerialize, nil
}

type NullableWebhookDeleteReqBody struct {
	value *WebhookDeleteReqBody
	isSet bool
}

func (v NullableWebhookDeleteReqBody) Get() *WebhookDeleteReqBody {
	return v.value
}

func (v *NullableWebhookDeleteReqBody) Set(val *WebhookDeleteReqBody) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookDeleteReqBody) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookDeleteReqBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookDeleteReqBody(val *WebhookDeleteReqBody) *NullableWebhookDeleteReqBody {
	return &NullableWebhookDeleteReqBody{value: val, isSet: true}
}

func (v NullableWebhookDeleteReqBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookDeleteReqBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


