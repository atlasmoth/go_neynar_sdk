/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the WebhookDeleteReqBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookDeleteReqBody{}

// WebhookDeleteReqBody struct for WebhookDeleteReqBody
type WebhookDeleteReqBody struct {
	WebhookId string `json:"webhook_id"`
	AdditionalProperties map[string]interface{}
}

type _WebhookDeleteReqBody WebhookDeleteReqBody

// NewWebhookDeleteReqBody instantiates a new WebhookDeleteReqBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookDeleteReqBody(webhookId string) *WebhookDeleteReqBody {
	this := WebhookDeleteReqBody{}
	this.WebhookId = webhookId
	return &this
}

// NewWebhookDeleteReqBodyWithDefaults instantiates a new WebhookDeleteReqBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookDeleteReqBodyWithDefaults() *WebhookDeleteReqBody {
	this := WebhookDeleteReqBody{}
	return &this
}

// GetWebhookId returns the WebhookId field value
func (o *WebhookDeleteReqBody) GetWebhookId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookId
}

// GetWebhookIdOk returns a tuple with the WebhookId field value
// and a boolean to check if the value has been set.
func (o *WebhookDeleteReqBody) GetWebhookIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WebhookId, true
}

// SetWebhookId sets field value
func (o *WebhookDeleteReqBody) SetWebhookId(v string) {
	o.WebhookId = v
}

func (o WebhookDeleteReqBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookDeleteReqBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["webhook_id"] = o.WebhookId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WebhookDeleteReqBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"webhook_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookDeleteReqBody := _WebhookDeleteReqBody{}

	err = json.Unmarshal(data, &varWebhookDeleteReqBody)

	if err != nil {
		return err
	}

	*o = WebhookDeleteReqBody(varWebhookDeleteReqBody)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "webhook_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWebhookDeleteReqBody struct {
	value *WebhookDeleteReqBody
	isSet bool
}

func (v NullableWebhookDeleteReqBody) Get() *WebhookDeleteReqBody {
	return v.value
}

func (v *NullableWebhookDeleteReqBody) Set(val *WebhookDeleteReqBody) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookDeleteReqBody) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookDeleteReqBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookDeleteReqBody(val *WebhookDeleteReqBody) *NullableWebhookDeleteReqBody {
	return &NullableWebhookDeleteReqBody{value: val, isSet: true}
}

func (v NullableWebhookDeleteReqBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookDeleteReqBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


