/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProfileUrl type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileUrl{}

// ProfileUrl struct for ProfileUrl
type ProfileUrl struct {
	Pfp *ProfileUrlPfp `json:"pfp,omitempty"`
}

// NewProfileUrl instantiates a new ProfileUrl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileUrl() *ProfileUrl {
	this := ProfileUrl{}
	return &this
}

// NewProfileUrlWithDefaults instantiates a new ProfileUrl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileUrlWithDefaults() *ProfileUrl {
	this := ProfileUrl{}
	return &this
}

// GetPfp returns the Pfp field value if set, zero value otherwise.
func (o *ProfileUrl) GetPfp() ProfileUrlPfp {
	if o == nil || IsNil(o.Pfp) {
		var ret ProfileUrlPfp
		return ret
	}
	return *o.Pfp
}

// GetPfpOk returns a tuple with the Pfp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileUrl) GetPfpOk() (*ProfileUrlPfp, bool) {
	if o == nil || IsNil(o.Pfp) {
		return nil, false
	}
	return o.Pfp, true
}

// HasPfp returns a boolean if a field has been set.
func (o *ProfileUrl) HasPfp() bool {
	if o != nil && !IsNil(o.Pfp) {
		return true
	}

	return false
}

// SetPfp gets a reference to the given ProfileUrlPfp and assigns it to the Pfp field.
func (o *ProfileUrl) SetPfp(v ProfileUrlPfp) {
	o.Pfp = &v
}

func (o ProfileUrl) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileUrl) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pfp) {
		toSerialize["pfp"] = o.Pfp
	}
	return toSerialize, nil
}

type NullableProfileUrl struct {
	value *ProfileUrl
	isSet bool
}

func (v NullableProfileUrl) Get() *ProfileUrl {
	return v.value
}

func (v *NullableProfileUrl) Set(val *ProfileUrl) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileUrl) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileUrl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileUrl(val *ProfileUrl) *NullableProfileUrl {
	return &NullableProfileUrl{value: val, isSet: true}
}

func (v NullableProfileUrl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileUrl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


