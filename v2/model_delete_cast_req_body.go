/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DeleteCastReqBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteCastReqBody{}

// DeleteCastReqBody struct for DeleteCastReqBody
type DeleteCastReqBody struct {
	// UUID of the signer
	SignerUuid *string `json:"signer_uuid,omitempty"`
	// Ethereum address
	TargetHash *string `json:"target_hash,omitempty" validate:"regexp=^0x[a-fA-F0-9]{40}$"`
}

// NewDeleteCastReqBody instantiates a new DeleteCastReqBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteCastReqBody() *DeleteCastReqBody {
	this := DeleteCastReqBody{}
	return &this
}

// NewDeleteCastReqBodyWithDefaults instantiates a new DeleteCastReqBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteCastReqBodyWithDefaults() *DeleteCastReqBody {
	this := DeleteCastReqBody{}
	return &this
}

// GetSignerUuid returns the SignerUuid field value if set, zero value otherwise.
func (o *DeleteCastReqBody) GetSignerUuid() string {
	if o == nil || IsNil(o.SignerUuid) {
		var ret string
		return ret
	}
	return *o.SignerUuid
}

// GetSignerUuidOk returns a tuple with the SignerUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteCastReqBody) GetSignerUuidOk() (*string, bool) {
	if o == nil || IsNil(o.SignerUuid) {
		return nil, false
	}
	return o.SignerUuid, true
}

// HasSignerUuid returns a boolean if a field has been set.
func (o *DeleteCastReqBody) HasSignerUuid() bool {
	if o != nil && !IsNil(o.SignerUuid) {
		return true
	}

	return false
}

// SetSignerUuid gets a reference to the given string and assigns it to the SignerUuid field.
func (o *DeleteCastReqBody) SetSignerUuid(v string) {
	o.SignerUuid = &v
}

// GetTargetHash returns the TargetHash field value if set, zero value otherwise.
func (o *DeleteCastReqBody) GetTargetHash() string {
	if o == nil || IsNil(o.TargetHash) {
		var ret string
		return ret
	}
	return *o.TargetHash
}

// GetTargetHashOk returns a tuple with the TargetHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteCastReqBody) GetTargetHashOk() (*string, bool) {
	if o == nil || IsNil(o.TargetHash) {
		return nil, false
	}
	return o.TargetHash, true
}

// HasTargetHash returns a boolean if a field has been set.
func (o *DeleteCastReqBody) HasTargetHash() bool {
	if o != nil && !IsNil(o.TargetHash) {
		return true
	}

	return false
}

// SetTargetHash gets a reference to the given string and assigns it to the TargetHash field.
func (o *DeleteCastReqBody) SetTargetHash(v string) {
	o.TargetHash = &v
}

func (o DeleteCastReqBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteCastReqBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SignerUuid) {
		toSerialize["signer_uuid"] = o.SignerUuid
	}
	if !IsNil(o.TargetHash) {
		toSerialize["target_hash"] = o.TargetHash
	}
	return toSerialize, nil
}

type NullableDeleteCastReqBody struct {
	value *DeleteCastReqBody
	isSet bool
}

func (v NullableDeleteCastReqBody) Get() *DeleteCastReqBody {
	return v.value
}

func (v *NullableDeleteCastReqBody) Set(val *DeleteCastReqBody) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteCastReqBody) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteCastReqBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteCastReqBody(val *DeleteCastReqBody) *NullableDeleteCastReqBody {
	return &NullableDeleteCastReqBody{value: val, isSet: true}
}

func (v NullableDeleteCastReqBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteCastReqBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


