/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the WebhookSubscriptionFiltersUserUpdated type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookSubscriptionFiltersUserUpdated{}

// WebhookSubscriptionFiltersUserUpdated struct for WebhookSubscriptionFiltersUserUpdated
type WebhookSubscriptionFiltersUserUpdated struct {
	Fids []int32 `json:"fids,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WebhookSubscriptionFiltersUserUpdated WebhookSubscriptionFiltersUserUpdated

// NewWebhookSubscriptionFiltersUserUpdated instantiates a new WebhookSubscriptionFiltersUserUpdated object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookSubscriptionFiltersUserUpdated() *WebhookSubscriptionFiltersUserUpdated {
	this := WebhookSubscriptionFiltersUserUpdated{}
	return &this
}

// NewWebhookSubscriptionFiltersUserUpdatedWithDefaults instantiates a new WebhookSubscriptionFiltersUserUpdated object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookSubscriptionFiltersUserUpdatedWithDefaults() *WebhookSubscriptionFiltersUserUpdated {
	this := WebhookSubscriptionFiltersUserUpdated{}
	return &this
}

// GetFids returns the Fids field value if set, zero value otherwise.
func (o *WebhookSubscriptionFiltersUserUpdated) GetFids() []int32 {
	if o == nil || IsNil(o.Fids) {
		var ret []int32
		return ret
	}
	return o.Fids
}

// GetFidsOk returns a tuple with the Fids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookSubscriptionFiltersUserUpdated) GetFidsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Fids) {
		return nil, false
	}
	return o.Fids, true
}

// HasFids returns a boolean if a field has been set.
func (o *WebhookSubscriptionFiltersUserUpdated) HasFids() bool {
	if o != nil && !IsNil(o.Fids) {
		return true
	}

	return false
}

// SetFids gets a reference to the given []int32 and assigns it to the Fids field.
func (o *WebhookSubscriptionFiltersUserUpdated) SetFids(v []int32) {
	o.Fids = v
}

func (o WebhookSubscriptionFiltersUserUpdated) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookSubscriptionFiltersUserUpdated) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Fids) {
		toSerialize["fids"] = o.Fids
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WebhookSubscriptionFiltersUserUpdated) UnmarshalJSON(data []byte) (err error) {
	varWebhookSubscriptionFiltersUserUpdated := _WebhookSubscriptionFiltersUserUpdated{}

	err = json.Unmarshal(data, &varWebhookSubscriptionFiltersUserUpdated)

	if err != nil {
		return err
	}

	*o = WebhookSubscriptionFiltersUserUpdated(varWebhookSubscriptionFiltersUserUpdated)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "fids")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWebhookSubscriptionFiltersUserUpdated struct {
	value *WebhookSubscriptionFiltersUserUpdated
	isSet bool
}

func (v NullableWebhookSubscriptionFiltersUserUpdated) Get() *WebhookSubscriptionFiltersUserUpdated {
	return v.value
}

func (v *NullableWebhookSubscriptionFiltersUserUpdated) Set(val *WebhookSubscriptionFiltersUserUpdated) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookSubscriptionFiltersUserUpdated) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookSubscriptionFiltersUserUpdated) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookSubscriptionFiltersUserUpdated(val *WebhookSubscriptionFiltersUserUpdated) *NullableWebhookSubscriptionFiltersUserUpdated {
	return &NullableWebhookSubscriptionFiltersUserUpdated{value: val, isSet: true}
}

func (v NullableWebhookSubscriptionFiltersUserUpdated) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookSubscriptionFiltersUserUpdated) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


