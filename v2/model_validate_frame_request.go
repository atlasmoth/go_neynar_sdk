/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the ValidateFrameRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValidateFrameRequest{}

// ValidateFrameRequest struct for ValidateFrameRequest
type ValidateFrameRequest struct {
	// Hexadecimal string of message bytes.
	MessageBytesInHex string `json:"message_bytes_in_hex"`
	// Adds viewer_context inside the cast object to indicate whether the interactor reacted to the cast housing the frame.
	CastReactionContext *bool `json:"cast_reaction_context,omitempty"`
	// Adds viewer_context inside the user (interactor) object to indicate whether the interactor follows or is followed by the cast author.
	FollowContext *bool `json:"follow_context,omitempty"`
	// Adds context about the app used by the user inside `frame.action`.
	SignerContext *bool `json:"signer_context,omitempty"`
	// Adds context about the channel that the cast belongs to inside of the cast object.
	ChannelFollowContext *bool `json:"channel_follow_context,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ValidateFrameRequest ValidateFrameRequest

// NewValidateFrameRequest instantiates a new ValidateFrameRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidateFrameRequest(messageBytesInHex string) *ValidateFrameRequest {
	this := ValidateFrameRequest{}
	this.MessageBytesInHex = messageBytesInHex
	var castReactionContext bool = true
	this.CastReactionContext = &castReactionContext
	var followContext bool = false
	this.FollowContext = &followContext
	var signerContext bool = false
	this.SignerContext = &signerContext
	var channelFollowContext bool = false
	this.ChannelFollowContext = &channelFollowContext
	return &this
}

// NewValidateFrameRequestWithDefaults instantiates a new ValidateFrameRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidateFrameRequestWithDefaults() *ValidateFrameRequest {
	this := ValidateFrameRequest{}
	var castReactionContext bool = true
	this.CastReactionContext = &castReactionContext
	var followContext bool = false
	this.FollowContext = &followContext
	var signerContext bool = false
	this.SignerContext = &signerContext
	var channelFollowContext bool = false
	this.ChannelFollowContext = &channelFollowContext
	return &this
}

// GetMessageBytesInHex returns the MessageBytesInHex field value
func (o *ValidateFrameRequest) GetMessageBytesInHex() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessageBytesInHex
}

// GetMessageBytesInHexOk returns a tuple with the MessageBytesInHex field value
// and a boolean to check if the value has been set.
func (o *ValidateFrameRequest) GetMessageBytesInHexOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageBytesInHex, true
}

// SetMessageBytesInHex sets field value
func (o *ValidateFrameRequest) SetMessageBytesInHex(v string) {
	o.MessageBytesInHex = v
}

// GetCastReactionContext returns the CastReactionContext field value if set, zero value otherwise.
func (o *ValidateFrameRequest) GetCastReactionContext() bool {
	if o == nil || IsNil(o.CastReactionContext) {
		var ret bool
		return ret
	}
	return *o.CastReactionContext
}

// GetCastReactionContextOk returns a tuple with the CastReactionContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateFrameRequest) GetCastReactionContextOk() (*bool, bool) {
	if o == nil || IsNil(o.CastReactionContext) {
		return nil, false
	}
	return o.CastReactionContext, true
}

// HasCastReactionContext returns a boolean if a field has been set.
func (o *ValidateFrameRequest) HasCastReactionContext() bool {
	if o != nil && !IsNil(o.CastReactionContext) {
		return true
	}

	return false
}

// SetCastReactionContext gets a reference to the given bool and assigns it to the CastReactionContext field.
func (o *ValidateFrameRequest) SetCastReactionContext(v bool) {
	o.CastReactionContext = &v
}

// GetFollowContext returns the FollowContext field value if set, zero value otherwise.
func (o *ValidateFrameRequest) GetFollowContext() bool {
	if o == nil || IsNil(o.FollowContext) {
		var ret bool
		return ret
	}
	return *o.FollowContext
}

// GetFollowContextOk returns a tuple with the FollowContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateFrameRequest) GetFollowContextOk() (*bool, bool) {
	if o == nil || IsNil(o.FollowContext) {
		return nil, false
	}
	return o.FollowContext, true
}

// HasFollowContext returns a boolean if a field has been set.
func (o *ValidateFrameRequest) HasFollowContext() bool {
	if o != nil && !IsNil(o.FollowContext) {
		return true
	}

	return false
}

// SetFollowContext gets a reference to the given bool and assigns it to the FollowContext field.
func (o *ValidateFrameRequest) SetFollowContext(v bool) {
	o.FollowContext = &v
}

// GetSignerContext returns the SignerContext field value if set, zero value otherwise.
func (o *ValidateFrameRequest) GetSignerContext() bool {
	if o == nil || IsNil(o.SignerContext) {
		var ret bool
		return ret
	}
	return *o.SignerContext
}

// GetSignerContextOk returns a tuple with the SignerContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateFrameRequest) GetSignerContextOk() (*bool, bool) {
	if o == nil || IsNil(o.SignerContext) {
		return nil, false
	}
	return o.SignerContext, true
}

// HasSignerContext returns a boolean if a field has been set.
func (o *ValidateFrameRequest) HasSignerContext() bool {
	if o != nil && !IsNil(o.SignerContext) {
		return true
	}

	return false
}

// SetSignerContext gets a reference to the given bool and assigns it to the SignerContext field.
func (o *ValidateFrameRequest) SetSignerContext(v bool) {
	o.SignerContext = &v
}

// GetChannelFollowContext returns the ChannelFollowContext field value if set, zero value otherwise.
func (o *ValidateFrameRequest) GetChannelFollowContext() bool {
	if o == nil || IsNil(o.ChannelFollowContext) {
		var ret bool
		return ret
	}
	return *o.ChannelFollowContext
}

// GetChannelFollowContextOk returns a tuple with the ChannelFollowContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateFrameRequest) GetChannelFollowContextOk() (*bool, bool) {
	if o == nil || IsNil(o.ChannelFollowContext) {
		return nil, false
	}
	return o.ChannelFollowContext, true
}

// HasChannelFollowContext returns a boolean if a field has been set.
func (o *ValidateFrameRequest) HasChannelFollowContext() bool {
	if o != nil && !IsNil(o.ChannelFollowContext) {
		return true
	}

	return false
}

// SetChannelFollowContext gets a reference to the given bool and assigns it to the ChannelFollowContext field.
func (o *ValidateFrameRequest) SetChannelFollowContext(v bool) {
	o.ChannelFollowContext = &v
}

func (o ValidateFrameRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValidateFrameRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["message_bytes_in_hex"] = o.MessageBytesInHex
	if !IsNil(o.CastReactionContext) {
		toSerialize["cast_reaction_context"] = o.CastReactionContext
	}
	if !IsNil(o.FollowContext) {
		toSerialize["follow_context"] = o.FollowContext
	}
	if !IsNil(o.SignerContext) {
		toSerialize["signer_context"] = o.SignerContext
	}
	if !IsNil(o.ChannelFollowContext) {
		toSerialize["channel_follow_context"] = o.ChannelFollowContext
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ValidateFrameRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"message_bytes_in_hex",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varValidateFrameRequest := _ValidateFrameRequest{}

	err = json.Unmarshal(data, &varValidateFrameRequest)

	if err != nil {
		return err
	}

	*o = ValidateFrameRequest(varValidateFrameRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "message_bytes_in_hex")
		delete(additionalProperties, "cast_reaction_context")
		delete(additionalProperties, "follow_context")
		delete(additionalProperties, "signer_context")
		delete(additionalProperties, "channel_follow_context")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableValidateFrameRequest struct {
	value *ValidateFrameRequest
	isSet bool
}

func (v NullableValidateFrameRequest) Get() *ValidateFrameRequest {
	return v.value
}

func (v *NullableValidateFrameRequest) Set(val *ValidateFrameRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableValidateFrameRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableValidateFrameRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidateFrameRequest(val *ValidateFrameRequest) *NullableValidateFrameRequest {
	return &NullableValidateFrameRequest{value: val, isSet: true}
}

func (v NullableValidateFrameRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidateFrameRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


