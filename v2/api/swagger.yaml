openapi: 3.0.0
info:
  title: Farcaster API V2
  version: "2.0"
servers:
- url: https://api.neynar.com/v2
tags:
- name: User
  description: Operations related to user
  externalDocs:
    description: More info about user
    url: https://docs.neynar.com/reference/user-operations
- name: Signer
  description: Operations related to signer
  externalDocs:
    description: More info about signer
    url: https://docs.neynar.com/reference/signer-operations
- name: Cast
  description: Operations related to cast
  externalDocs:
    description: More info about cast
    url: https://docs.neynar.com/reference/cast-operations
- name: Feed
  description: Operations related to feed
  externalDocs:
    description: More info about feed
    url: https://docs.neynar.com/reference/feed-operations
- name: Reaction
  description: Operations related to reaction
  externalDocs:
    description: More info about reaction
    url: https://docs.neynar.com/reference/reaction-operations
- name: Notifications
  description: Operations related to notifications
  externalDocs:
    description: More info about notifications
    url: https://docs.neynar.com/reference/notifications-operations
- name: Channel
  description: Operations related to channels
  externalDocs:
    description: More info about channels
    url: https://docs.neynar.com/reference/channel-operations
- name: Follows
  description: Operations related to follows
  externalDocs:
    description: More info about follows
    url: https://docs.neynar.com/reference/follows-operations
- name: Storage
  description: Operations related to storage
  externalDocs:
    description: More info about storage
    url: https://docs.neynar.com/reference/storage-operations
- name: Frame
  description: Operations related to frames
  externalDocs:
    description: More info about frames
    url: https://docs.neynar.com/reference/frame-operations
- name: fname
  description: Operations related to fname
  externalDocs:
    description: More info about fname
    url: https://docs.neynar.com/reference/fname-operations
- name: Webhook
  description: Operations related to a webhook
  externalDocs:
    description: More info about webhook
    url: https://docs.neynar.com/reference/webhook-operations
paths:
  /farcaster/user/fid:
    get:
      tags:
      - User
      summary: Fetches fid to assign it new user
      description: Fetches fid to assign it new user
      externalDocs:
        url: https://docs.neynar.com/reference/get-fresh-fid
      operationId: get-fresh-fid
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFIDResponse'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/signer/developer_managed:
    get:
      tags:
      - Signer
      summary: Fetches the status of a signer by public key
      description: Fetches the status of a developer managed signer by public key
      externalDocs:
        url: https://docs.neynar.com/reference/developer-managed-signer
      operationId: developer-managed-signer
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: public_key
        in: query
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Ed25519PublicKey'
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeveloperManagedSigner'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/signer/developer_managed/signed_key:
    post:
      tags:
      - Signer
      summary: Registers Signed Key
      description: Registers an signed key and returns the developer managed signer
        status with an approval url.
      externalDocs:
        url: https://docs.neynar.com/reference/register-signed-key-for-developer-managed-signer
      operationId: register-signed-key-for-developer-managed-signer
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDeveloperManagedSignedKeyReqBody'
            example:
              app_fid: 18949
              deadline: 1693627665
              public_key: 0x3daa8f99c5f760688a3c9f95716ed93dee5ed5d7722d776b7c4deac957755f22
              signature: 0xe5d95c391e165dac8efea373efe301d3ea823e1f41713f8943713cbe2850566672e33ff3e17e19abb89703f650a2597f62b4fda0ce28ca15d59eb6d4e971ee531b
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeveloperManagedSigner'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/signer:
    get:
      tags:
      - Signer
      summary: Fetches the status of a signer
      description: Gets information status of a signer by passing in a signer_uuid
        (Use post API to generate a signer)
      externalDocs:
        url: https://docs.neynar.com/reference/signer
      operationId: signer
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: signer_uuid
        in: query
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SignerUUID'
        example: 19d0c5fd-9b33-4a48-a0e2-bc7b0555baec
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Signer'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
    post:
      tags:
      - Signer
      summary: Creates a signer and returns the signer status
      description: |
        Creates a signer and returns the signer status. \
        **Note**: While tesing please reuse the signer, it costs money to approve a signer.
      externalDocs:
        url: https://docs.neynar.com/reference/create-signer
      operationId: create-signer
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Signer'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/signer/signed_key:
    post:
      tags:
      - Signer
      summary: Register Signed Key
      description: "Registers an app fid, deadline and a signature. Returns the signer\
        \ status with an approval url."
      externalDocs:
        url: https://docs.neynar.com/reference/register-signed-key
      operationId: register-signed-key
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterSignerKeyReqBody'
            example:
              signer_uuid: 19d0c5fd-9b33-4a48-a0e2-bc7b0555baec
              app_fid: 18949
              deadline: 1693627665
              signature: 0xe5d95c391e165dac8efea373efe301d3ea823e1f41713f8943713cbe2850566672e33ff3e17e19abb89703f650a2597f62b4fda0ce28ca15d59eb6d4e971ee531b
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Signer'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/user/search:
    get:
      tags:
      - User
      summary: Search for Usernames
      description: Search for Usernames
      externalDocs:
        url: https://docs.neynar.com/reference/user-search
      operationId: user-search
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: q
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: r
      - name: viewer_fid
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          maximum: 10
          type: integer
          format: int32
          default: 5
        example: 10
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSearchResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/user/bulk:
    get:
      tags:
      - User
      summary: Fetch users based on FIDs
      description: Fetches information about multiple users based on FIDs
      externalDocs:
        url: https://docs.neynar.com/reference/user-bulk
      operationId: user-bulk
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fids
        in: query
        description: "Comma separated list of FIDs, up to 100 at a time"
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: "194, 191, 6131"
      - name: viewer_fid
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUsersResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/user/power:
    get:
      tags:
      - User
      summary: Fetch power user objects
      description: Fetches power users based on Warpcast power badges. Information
        is updated once a day.
      externalDocs:
        url: https://docs.neynar.com/reference/user-power
      operationId: power-users
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: viewer_fid
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3
      - name: limit
        in: query
        description: "Number of power users to fetch, max 100"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 25
        example: 10
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/user/power_lite:
    get:
      tags:
      - User
      summary: Fetch power user FIDs
      description: Fetches power users and respond in a backwards compatible format
        to Warpcast's deprecated power badge endpoint.
      externalDocs:
        url: https://docs.neynar.com/reference/user-power-lite
      operationId: user-power-lite
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPowerLiteResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/user/active:
    get:
      tags:
      - User
      summary: Fetch active users
      description: Warpcast has deprecated the active badge. Use user/power endpoint
        instead.
      externalDocs:
        url: https://docs.neynar.com/reference/active-users
      operationId: active-users
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 25
        example: 10
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
      deprecated: true
  /farcaster/user/bulk-by-address:
    get:
      tags:
      - User
      summary: Fetches users based on Eth or Sol addresses
      description: |-
        Fetches all users based on multiple Ethereum or Solana addresses.

        Each farcaster user has a custody Ethereum address and optionally verified Ethereum or Solana addresses. This endpoint returns all users that have any of the given addresses as their custody or verified Ethereum or Solana addresses.

        A custody address can be associated with only 1 farcaster user at a time but a verified address can be associated with multiple users.
        You can pass in Ethereum and Solana addresses, comma separated, in the same request. The response will contain users associated with the given addresses.
      externalDocs:
        url: https://docs.neynar.com/reference/user-bulk-by-address
      operationId: user-bulk-by-address
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: addresses
        in: query
        description: "Comma separated list of Ethereum addresses, up to 350 at a time"
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: "0xa6a8736f18f383f1cc2d938576933e5ea7df01a1,0x7cac817861e5c3384753403fb6c0c556c204b1ce"
      - name: address_types
        in: query
        description: |
          Customize which address types the request should search for. This is a comma-separated string that can include the following values: 'custody_address' and 'verified_address'. By default api returns both. To select multiple types, use a comma-separated list of these values.
        required: false
        style: form
        explode: true
        schema:
          pattern: "^(custody_address,?|verified_address,?)+$"
          type: string
        example: "custody_address,verified_address"
      - name: viewer_fid
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUsersByAddressResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/user/channels:
    get:
      tags:
      - Channel
      summary: Retrieve all channels that a given fid follows
      description: Returns a list of all channels with their details that a fid follows.
      externalDocs:
        url: https://docs.neynar.com/reference/user-channels
      operationId: user-channels
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        description: The fid of the user.
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
      - name: limit
        in: query
        description: "Number of results to retrieve (default 25, max 100)"
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 25
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelListResponse'
  /farcaster/user:
    post:
      tags:
      - User
      summary: Register account on farcaster
      description: |
        Register account on farcaster.

        **Note:** This API must be called within 10 minutes of the fetch fid API call (i.e., /v2/farcaster/user/fid). Otherwise, Neynar will assign this fid to another available user.
      externalDocs:
        url: https://docs.neynar.com/reference/register-user
      operationId: register-user
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserReqBody'
            example:
              signature: 0xe0cd4da80fb30d59e3ce5a10768c35043bc31487362977cf0a3acf15338a730f4aa329568055c943d777dd81fcb60292f15fc0bcf644da1943b6aa0b3ea9bdcf1b
              fid: 321518
              requested_user_custody_address: 0x2c57e688154C082955cF205F4A335E852D3e25f1
              deadline: 1707371935
              fname: desired_fname
        required: true
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterUserResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
    patch:
      tags:
      - User
      summary: Update user profile
      description: |
        Update user profile \
        (In order to update user's profile `signer_uuid` must be approved)
      externalDocs:
        url: https://docs.neynar.com/reference/update-user
      operationId: update-user
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserReqBody'
            example:
              signer_uuid: 19d0c5fd-9b33-4a48-a0e2-bc7b0555baec
              bio: Hey there..!!!
              pfp_url: https://i.imgur.com/keIWEYM.jpg
              username: dan
              display_name: Dan Romero
        required: true
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/message:
    post:
      tags:
      - Signer
      summary: Publish a message to farcaster
      description: Publish a message to farcaster. The message must be signed by a
        signer managed by the developer. Use the @farcaster/core library to construct
        and sign the message. Use the Message.toJSON method on the signed message
        and pass the JSON in the body of this POST request.
      externalDocs:
        url: https://docs.neynar.com/reference/publish-message
      operationId: publish-message
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishMessageReqBody'
        required: true
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishMessageResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/cast:
    get:
      tags:
      - Cast
      summary: Retrieve cast for a given hash or Warpcast URL
      description: Gets information about an individual cast by passing in a Warpcast
        web URL or cast hash
      externalDocs:
        url: https://docs.neynar.com/reference/cast
      operationId: cast
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: identifier
        in: query
        description: Cast identifier (Its either a url or a hash)
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: https://warpcast.com/rish/0x9288c1
      - name: type
        in: query
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/CastParamType'
        example: url
      - name: viewer_fid
        in: query
        description: adds viewer_context to cast object to show whether viewer has
          liked or recasted the cast.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CastResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
    post:
      tags:
      - Cast
      summary: Posts a cast
      description: "Posts a cast or cast reply. Works with mentions and embeds.  \n\
        (In order to post a cast `signer_uuid` must be approved)\n"
      externalDocs:
        url: https://docs.neynar.com/reference/post-cast
      operationId: post-cast
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCastReqBody'
            example:
              signer_uuid: 19d0c5fd-9b33-4a48-a0e2-bc7b0555baec
              text: Writing to @farcaster via the @neynar APIs 🪐
        required: true
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCastResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
    delete:
      tags:
      - Cast
      summary: Delete a cast
      description: |
        Delete an existing cast. \
        (In order to delete a cast `signer_uuid` must be approved)
      externalDocs:
        url: https://docs.neynar.com/reference/delete-cast
      operationId: delete-cast
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCastReqBody'
            example:
              signer_uuid: 19d0c5fd-9b33-4a48-a0e2-bc7b0555baec
              target_hash: 0x1ea99cbed57e4020314ba3fadd7c692d2de34d5f
        required: true
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/casts:
    get:
      tags:
      - Cast
      summary: Gets information about an array of casts
      description: Retrieve multiple casts using their respective hashes.
      externalDocs:
        url: https://docs.neynar.com/reference/casts
      operationId: casts
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: casts
        in: query
        description: Hashes of the cast to be retrived (Comma separated)
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: "0xa896906a5e397b4fec247c3ee0e9e4d4990b8004,0x27ff810f7f718afd8c40be236411f017982e0994"
      - name: viewer_fid
        in: query
        description: adds viewer_context to cast object to show whether viewer has
          liked or recasted the cast.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3
      - name: sort_type
        in: query
        description: Optional parameter to sort the casts based on different criteria
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - trending
          - likes
          - recasts
          - replies
          - recent
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CastsResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/cast/search:
    get:
      tags:
      - Cast
      summary: Search for casts
      description: "Search for casts based on a query string, with optional AND filters"
      externalDocs:
        url: https://docs.neynar.com/reference/cast-search
      operationId: cast-search
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: q
        in: query
        description: Query string to search for casts
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: star wars
      - name: author_fid
        in: query
        description: Fid of the user whose casts you want to search
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 194
      - name: viewer_fid
        in: query
        description: "Fid of the viewer of the casts, used to show viewer_context"
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3
      - name: parent_url
        in: query
        description: Parent URL of the casts you want to search
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: channel_id
        in: query
        description: Channel ID of the casts you want to search
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          format: int32
          default: 25
        example: 25
      - name: cursor
        in: query
        description: Pagination cursor
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CastsSearchResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/cast/conversation:
    get:
      tags:
      - Cast
      summary: Retrieve the conversation for a given cast
      description: Gets all casts related to a conversation surrounding a cast by
        passing in a cast hash or Warpcast URL. Includes all the ancestors of a cast
        up to the root parent in a chronological order. Includes all direct_replies
        to the cast up to the reply_depth specified in the query parameter.
      externalDocs:
        url: https://docs.neynar.com/reference/cast-conversation
      operationId: cast-conversation
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: identifier
        in: query
        description: Cast identifier (Its either a url or a hash)
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: https://warpcast.com/rish/0x9288c1
      - name: type
        in: query
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/CastParamType'
        example: url
      - name: reply_depth
        in: query
        description: The depth of replies in the conversation that will be returned
          (default 2)
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ReplyDepth'
      - name: include_chronological_parent_casts
        in: query
        description: Include all parent casts in chronological order
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: viewer_fid
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3
      - name: limit
        in: query
        description: "Number of results to retrieve (default 20, max 50)"
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 1
          type: integer
          default: 20
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/feed:
    get:
      tags:
      - Feed
      summary: Retrieve casts based on filters
      description: Retrieve casts based on filters. Ensure setting the correct parameters
        based on the feed_type and filter_type.
      externalDocs:
        url: https://docs.neynar.com/reference/feed
      operationId: feed
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: feed_type
        in: query
        description: Defaults to following (requires fid or address). If set to filter
          (requires filter_type)
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/FeedType'
        example: filter
      - name: filter_type
        in: query
        description: Used when feed_type=filter. Can be set to fids (requires fids)
          or parent_url (requires parent_url) or channel_id (requires channel_id)
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/FilterType'
        example: fids
      - name: fid
        in: query
        description: "(Optional) fid of user whose feed you want to create. By default,\
          \ the API expects this field, except if you pass a filter_type"
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
      - name: fids
        in: query
        description: Used when filter_type=fids . Create a feed based on a list of
          fids. Max array size is 250. Requires feed_type and filter_type.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "3,2,194"
      - name: parent_url
        in: query
        description: Used when filter_type=parent_url can be used to fetch content
          under any parent url e.g. FIP-2 channels on Warpcast. Requires feed_type
          and filter_type
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: channel_id
        in: query
        description: Used when filter_type=channel_id can be used to fetch all casts
          under a channel. Requires feed_type and filter_type
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: embed_url
        in: query
        description: Used when filter_type=embed_url can be used to fetch all casts
          with an embed url that contains embed_url. Requires feed_type and filter_type
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: embed_types
        in: query
        description: Used when filter_type=embed_types can be used to fetch all casts
          with matching content types. Requires feed_type and filter_type
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/EmbedType'
      - name: with_recasts
        in: query
        description: "Include recasts in the response, true by default"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: limit
        in: query
        description: "Number of results to retrieve (default 25, max 100)"
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 25
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: viewer_fid
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/feed/following:
    get:
      tags:
      - Feed
      summary: Retrieve feed based on who a user is following
      description: Retrieve feed based on who a user is following
      externalDocs:
        url: https://docs.neynar.com/reference/feed-following
      operationId: feed-following
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        description: fid of user whose feed you want to create
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3
      - name: viewer_fid
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3
      - name: with_recasts
        in: query
        description: "Include recasts in the response, true by default"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: limit
        in: query
        description: "Number of results to retrieve (default 25, max 100)"
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 25
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/feed/for_you:
    get:
      tags:
      - Feed
      summary: Retrieve a personalized For You feed for a user
      description: Retrieve a personalized For You feed for a user
      externalDocs:
        url: https://docs.neynar.com/reference/feed-for-you
      operationId: feed-for-you
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        description: fid of user whose feed you want to create
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 194
      - name: viewer_fid
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3
      - name: provider
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ForYouProvider'
      - name: limit
        in: query
        description: "Number of results to retrieve (default 25, max 50)"
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 1
          type: integer
          default: 25
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/user/subscriptions_created:
    get:
      tags:
      - Subscribers
      summary: Fetch created subscriptions for a given fid
      description: Fetch created subscriptions for a given fid's.
      externalDocs:
        url: https://docs.neynar.com/reference/subscriptions-created
      operationId: subscriptions-created
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 528
      - name: subscription_provider
        in: query
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SubscriptionProvider'
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionsResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/user/subscribed_to:
    get:
      tags:
      - Subscribers
      summary: Fetch what a given fid is subscribed to
      description: Fetch what fids and contracts a fid is subscribed to.
      externalDocs:
        url: https://docs.neynar.com/reference/subscribed-to
      operationId: subscribed-to
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3206
      - name: viewer_fid
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3
      - name: subscription_provider
        in: query
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SubscriptionProvider'
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscribedToResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/user/subscribers:
    get:
      tags:
      - Subscribers
      summary: Fetch subscribers for a given fid
      description: Fetch subscribers for a given fid's contracts. Doesn't return addresses
        that don't have an fid.
      externalDocs:
        url: https://docs.neynar.com/reference/subscribers
      operationId: subscribers
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3206
      - name: viewer_fid
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3
      - name: subscription_provider
        in: query
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SubscriptionProviders'
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscribersResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/feed/channels:
    get:
      tags:
      - Feed
      summary: Retrieve feed based on channel ids
      description: Retrieve feed based on channel ids
      externalDocs:
        url: https://docs.neynar.com/reference/feed-channels
      operationId: feed-channels
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: channel_ids
        in: query
        description: "Comma separated list of channel ids e.g. neynar,farcaster"
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: "neynar,farcaster"
      - name: with_recasts
        in: query
        description: "Include recasts in the response, true by default"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: viewer_fid
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3
      - name: with_replies
        in: query
        description: "Include replies in the response, false by default"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: limit
        in: query
        description: "Number of results to retrieve (default 25, max 100)"
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 25
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: should_moderate
        in: query
        description: "If true, only casts that have been liked by the moderator (if\
          \ one exists) will be returned."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/feed/parent_urls:
    get:
      tags:
      - Feed
      summary: Retrieve feed based on parent urls
      description: Retrieve feed based on parent urls
      externalDocs:
        url: https://docs.neynar.com/reference/feed/parent_urls
      operationId: feed-parent-urls
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: parent_urls
        in: query
        description: Comma separated list of parent_urls
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: chain://eip155:1/erc721:0xd4498134211baad5846ce70ce04e7c4da78931cc
      - name: with_recasts
        in: query
        description: "Include recasts in the response, true by default"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: viewer_fid
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3
      - name: with_replies
        in: query
        description: "Include replies in the response, false by default"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: limit
        in: query
        description: "Number of results to retrieve (default 25, max 100)"
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 25
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/feed/frames:
    get:
      tags:
      - Feed
      summary: "Retrieve feed of casts with Frames, reverse chronological order"
      description: "Retrieve feed of casts with Frames, reverse chronological order"
      externalDocs:
        url: https://docs.neynar.com/reference/feed-frames
      operationId: feed-frames
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: limit
        in: query
        description: "Number of results to retrieve (default 25, max 100)"
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 25
      - name: viewer_fid
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/feed/trending:
    get:
      tags:
      - Feed
      summary: Retrieve trending casts
      description: Retrieve trending casts or on the global feed or channels feeds.
        7d time window available for channel feeds only.
      externalDocs:
        url: https://docs.neynar.com/reference/feed-trending
      operationId: feed-trending
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: limit
        in: query
        description: Number of results to retrieve (max 10)
        required: false
        style: form
        explode: true
        schema:
          maximum: 10
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: Pagination cursor
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: viewer_fid
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3
      - name: time_window
        in: query
        description: Time window for trending casts (7d window for channel feeds only)
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - 1h
          - 6h
          - 12h
          - 24h
          - 7d
          default: 24h
      - name: channel_id
        in: query
        description: Channel ID to filter trending casts. Less active channels might
          have no casts in the time window selected.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: neynar
      - name: provider
        in: query
        description: The provider of the trending casts feed.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/FeedTrendingProvider'
        example: neynar
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/feed/user/popular:
    get:
      tags:
      - Feed
      summary: Retrieve 10 most popular casts for a user
      description: "Retrieve 10 most popular casts for a given user FID; popularity\
        \ based on replies, likes and recasts; sorted by most popular first"
      externalDocs:
        url: https://docs.neynar.com/reference/feed-user-popular
      operationId: feed-user-popular
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        description: fid of user whose feed you want to create
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 194
      - name: viewer_fid
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkCastsResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/feed/user/replies_and_recasts:
    get:
      tags:
      - Feed
      summary: Retrieve recent replies and recasts for a user
      description: Retrieve recent replies and recasts for a given user FID; sorted
        by most recent first
      externalDocs:
        url: https://docs.neynar.com/reference/feed-user-replies-recasts
      operationId: feed-user-replies-recasts
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        description: fid of user whose replies and recasts you want to fetch
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 194
      - name: filter
        in: query
        description: filter to fetch only replies or recasts
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - replies
          - recasts
          - all
          default: all
        example: replies
      - name: limit
        in: query
        description: "Number of results to retrieve (default 25, max 100)"
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 1
          type: integer
          example: 25
          default: 25
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: viewer_fid
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/feed/user/casts:
    get:
      tags:
      - Feed
      summary: Retrieve casts for a user
      description: Retrieve casts for a given user FID in reverse chronological order.
        Also allows filtering by parent_url and channel
      externalDocs:
        url: https://docs.neynar.com/reference/feed-user-casts
      operationId: feed-user-casts
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        description: FID of user whose recent casts you want to fetch
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 194
      - name: viewer_fid
        in: query
        description: FID of the user viewing the feed
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3
      - name: limit
        in: query
        description: "Number of results to retrieve (default 25, max 50)"
        required: false
        style: form
        explode: true
        schema:
          maximum: 150
          minimum: 1
          type: integer
          default: 25
      - name: cursor
        in: query
        description: Pagination cursor
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: include_replies
        in: query
        description: "Include reply casts by the author in the response, true by default"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: parent_url
        in: query
        description: Parent URL to filter the feed; mutually exclusive with channel_id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: channel_id
        in: query
        description: Channel ID to filter the feed; mutually exclusive with parent_url
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/frame:
    get:
      tags:
      - Frame
      summary: Retrieve a frame by UUID or URL
      description: Retrieve a frame either by UUID or Neynar URL
      operationId: lookup-neynar-frame
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: type
        in: query
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/FrameType'
      - name: uuid
        in: query
        description: UUID of the frame to retrieve
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: uuid
      - name: url
        in: query
        description: URL of the Neynar frame to retrieve
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: A frame object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeynarFrame'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
    put:
      tags:
      - Frame
      summary: Update an existing frame
      description: "Update an existing frame with a list of pages, if it was made\
        \ by the developer (identified by API key)"
      operationId: update-neynar-frame
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NeynarFrameUpdateRequest'
        required: true
      responses:
        "200":
          description: Frame updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeynarFrame'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
    post:
      tags:
      - Frame
      summary: Create a new frame
      description: Create a new frame with a list of pages.
      operationId: publish-neynar-frame
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NeynarFrameCreationRequest'
        required: true
      responses:
        "200":
          description: Frame created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeynarFrame'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
    delete:
      tags:
      - Frame
      summary: Delete a frame
      description: "Delete an existing frame, if it was made by the developer (identified\
        \ by API key)"
      operationId: delete-neynar-frame
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/farcaster_frame_body'
        required: true
      responses:
        "200":
          description: Frame deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFrameResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/frame/list:
    get:
      tags:
      - Frame
      summary: Retrieve a list of frames
      description: Retrieve a list of frames made by the developer (identified by
        API key)
      operationId: fetch-neynar-frames
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      responses:
        "200":
          description: A list of frames
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NeynarFrame'
                x-content-type: application/json
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/frame/crawl:
    get:
      tags:
      - Frame
      summary: Fetches the frame meta tags from the URL
      description: Fetches the frame meta tags from the URL
      operationId: frame-from-url
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: url
        in: query
        description: The frame URL to crawl
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: uri
        example: https://frames.neynar.com/f/862277df/ff7be6a4
      responses:
        "200":
          description: The response object containing the frame object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/reaction:
    post:
      tags:
      - Reaction
      summary: Posts a reaction
      description: |
        Post a reaction (like or recast) to a given cast \
        (In order to post a reaction `signer_uuid` must be approved)
      externalDocs:
        url: https://docs.neynar.com/reference/post-reaction
      operationId: post-reaction
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReactionReqBody'
            example:
              signer_uuid: 19d0c5fd-9b33-4a48-a0e2-bc7b0555baec
              target: 0x1ea99cbed57e4020314ba3fadd7c692d2de34d5f
              reaction_type: like
        required: true
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
    delete:
      tags:
      - Reaction
      summary: Delete a reaction
      description: |
        Delete a reaction (like or recast) to a given cast \
        (In order to delete a reaction `signer_uuid` must be approved)
      externalDocs:
        url: https://docs.neynar.com/reference/delete-reaction
      operationId: delete-reaction
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReactionReqBody'
            example:
              signer_uuid: 19d0c5fd-9b33-4a48-a0e2-bc7b0555baec
              target: 0x1ea99cbed57e4020314ba3fadd7c692d2de34d5f
              reaction_type: like
        required: true
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/user/verification:
    post:
      tags:
      - User
      summary: Adds verification for an ethereum address or contract for the user
      description: |
        Adds verification for an eth address or contract for the user \
        (In order to add verification `signer_uuid` must be approved)
      externalDocs:
        url: https://docs.neynar.com/reference/add-verification
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddVerificationReqBody'
            example:
              signer_uuid: 19d0c5fd-9b33-4a48-a0e2-bc7b0555baec
              address: 0x1ea99cbed57e4020314ba3fadd7c692d2de34d5f
              block_hash: 0x191905a9201170abb55f4c90a4cc968b44c1b71cdf3db2764b775c93e7e22b29
              eth_signature: 0x2fc09da1f4dcb723fefb91f77932c249c418c0af00c66ed92ee1f35002c80d6a1145280c9f361d207d28447f8f7463366840d3a9309036cf6954afd1fd331beb1b
        required: true
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
    delete:
      tags:
      - User
      summary: Removes verification for an eth address for the user
      description: |
        Removes verification for an eth address for the user \
        (In order to delete verification `signer_uuid` must be approved)
      externalDocs:
        url: https://docs.neynar.com/reference/remove-verification
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveVerificationReqBody'
            example:
              signer_uuid: 19d0c5fd-9b33-4a48-a0e2-bc7b0555baec
              address: 0x1ea99cbed57e4020314ba3fadd7c692d2de34d5f
        required: true
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
  /farcaster/user/follow:
    post:
      tags:
      - User
      summary: Follow a user
      description: |
        Follow a user \
        (In order to follow a user `signer_uuid` must be approved)
      externalDocs:
        url: https://docs.neynar.com/reference/follow-user
      operationId: follow-user
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FollowReqBody'
            example:
              signer_uuid: 19d0c5fd-9b33-4a48-a0e2-bc7b0555baec
              target_fids:
              - 3
              - 194
        required: true
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkFollowResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
    delete:
      tags:
      - User
      summary: Unfollow a user
      description: |
        Unfollow a user \
        (In order to unfollow a user `signer_uuid` must be approved)
      externalDocs:
        url: https://docs.neynar.com/reference/unfollow-user
      operationId: unfollow-user
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FollowReqBody'
            example:
              signer_uuid: 19d0c5fd-9b33-4a48-a0e2-bc7b0555baec
              target_fids:
              - 3
              - 194
        required: true
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkFollowResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/user/custody-address:
    get:
      tags:
      - User
      summary: Lookup a user by custody-address
      description: Lookup a user by custody-address
      externalDocs:
        url: https://docs.neynar.com/reference/lookup-user-by-custody-address
      operationId: lookup-user-by-custody-address
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: custody_address
        in: query
        description: Custody Address associated with mnemonic
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: 0xd1b702203b1b3b641a699997746bd4a12d157909
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/login/authorize:
    get:
      tags:
      - Signer
      summary: Fetch authorization url
      description: Fetch authorization url (Fetched authorized url useful for SIWN
        login operation)
      externalDocs:
        url: https://docs.neynar.com/reference/fetch-authorization-url
      operationId: fetch-authorization-url
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: client_id
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: uuid
      - name: response_type
        in: query
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/AuthorizationUrlResponseType'
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationUrlResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/frame/developer_managed/action:
    post:
      tags:
      - Frame
      summary: Posts a frame signature packet
      description: |
        Post a frame action that has been signed with a developer managed signer

        The POST request to the post_url has a timeout of 5 seconds.
      externalDocs:
        url: https://docs.neynar.com/reference/post-frame-developer-managed-action
      operationId: post-frame-developer-managed-action
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FrameDeveloperManagedActionReqBody'
        required: true
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Frame'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/frame/action:
    post:
      tags:
      - Frame
      summary: "Posts a frame action, cast action or a cast composer action"
      description: |
        Post frame actions, cast actions or cast composer actions to the server  \
        (In order to post any of these actions, you need to have an approved `signer_uuid`)

        The POST request to the post_url has a timeout of 5 seconds for frames.
      externalDocs:
        url: https://docs.neynar.com/reference/post-frame-action
      operationId: post-frame-action
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FrameActionReqBody'
        required: true
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Frame'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/frame/validate:
    post:
      tags:
      - Frame
      summary: Validates a frame action against Farcaster Hub
      description: |
        Validates a frame against by an interacting user against a Farcaster Hub \
        (In order to validate a frame, message bytes from Frame Action must be provided in hex)
      externalDocs:
        url: https://docs.neynar.com/reference/validate-frame
      operationId: validate-frame
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/frame_validate_body'
        required: true
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateFrameActionResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/frame/validate/list:
    get:
      tags:
      - Frame
      summary: Retrieve a list of all the frames validated by a user
      description: Retrieve a list of all the frames validated by a user
      externalDocs:
        url: https://docs.neynar.com/reference/validate-frame-list
      operationId: validate-frame-list
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameValidateListResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/frame/validate/analytics:
    get:
      tags:
      - Frame
      summary: Retrieve analytics for the frame
      description: "Retrieve analytics for total-interactors, interactors, nteractions-per-cast\
        \ and input-text."
      externalDocs:
        url: https://docs.neynar.com/reference/validate-frame-analytics
      operationId: validate-frame-analytics
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: frame_url
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: uri
        example: https://shorturl.at/bDRY9
      - name: analytics_type
        in: query
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ValidateFrameAnalyticsType'
      - name: start
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          default: 2024-04-06T06:44:56.811Z
      - name: stop
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          default: 2024-04-08T06:44:56.811Z
      - name: aggregate_window
        in: query
        description: Required for `analytics_type=interactions-per-cast`
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - 10s
          - 1m
          - 2m
          - 5m
          - 10m
          - 20m
          - 30m
          - 2h
          - 12h
          - 1d
          - 7d
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameValidateAnalyticsResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/notifications:
    get:
      tags:
      - Notifications
      summary: Retrieve notifications for a given user
      description: Returns a list of notifications for a specific FID.
      externalDocs:
        url: https://docs.neynar.com/reference/notifications
      operationId: notifications
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        description: FID of the user you you want to fetch notifications for
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 194
      - name: type
        in: query
        description: Notification type to fetch.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/NotificationType'
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/notifications/channel:
    get:
      tags:
      - Notifications
      summary: Retrieve notifications for a user in given channels
      description: Returns a list of notifications for a user in specific channels
      externalDocs:
        url: https://docs.neynar.com/reference/notifications
      operationId: notifications-channel
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        description: FID of the user you you want to fetch notifications for
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 194
      - name: channel_ids
        in: query
        description: Comma separated channel_ids (find list of all channels here -
          https://docs.neynar.com/reference/list-all-channels)
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: "neynar,farcaster"
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/notifications/parent_url:
    get:
      tags:
      - Notifications
      summary: Retrieve notifications for a user in given parent_urls
      description: Returns a list of notifications for a user in specific parent_urls
      externalDocs:
        url: https://docs.neynar.com/reference/notifications
      operationId: notifications-parent-url
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        description: FID of the user you you want to fetch notifications for
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 194
      - name: parent_urls
        in: query
        description: Comma separated parent_urls
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: chain://eip155:1/erc721:0xd4498134211baad5846ce70ce04e7c4da78931cc
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/notifications/seen:
    post:
      tags:
      - Notifications
      summary: Mark notifications as seen
      description: Mark notifications as seen
      externalDocs:
        url: https://docs.neynar.com/reference/mark-notifications-as-seen
      operationId: mark-notifications-as-seen
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkNotificationsAsSeenReqBody'
            example:
              signer_uuid: 19d0c5fd-9b33-4a48-a0e2-bc7b0555baec
              type: likes
        required: true
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/channel/list:
    get:
      tags:
      - Channel
      summary: Retrieve all channels with their details
      description: Returns a list of all channels with their details
      externalDocs:
        url: https://docs.neynar.com/reference/list-all-channels
      operationId: list-all-channels
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: limit
        in: query
        description: Number of results to retrieve
        required: false
        style: form
        explode: true
        schema:
          maximum: 200
          minimum: 1
          type: integer
          default: 20
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelListResponse'
  /farcaster/channel/search:
    get:
      tags:
      - Channel
      summary: Search for channels based on id or name
      description: Returns a list of channels based on id or name
      externalDocs:
        url: https://docs.neynar.com/reference/search-channels
      operationId: search-channels
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: q
        in: query
        description: Channel ID or name for the channel being queried
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: neynar
      - name: limit
        in: query
        description: Number of results to retrieve
        required: false
        style: form
        explode: true
        schema:
          maximum: 200
          minimum: 1
          type: integer
          default: 20
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelSearchResponse'
  /farcaster/channel/bulk:
    get:
      tags:
      - Channel
      summary: (Bulk) Retrieve channels by id or parent_url
      description: Returns details of multiple channels
      externalDocs:
        url: https://docs.neynar.com/reference/channel-details-bulk
      operationId: channel-details-bulk
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: ids
        in: query
        description: "Comma separated list of channel IDs or parent_urls, up to 100\
          \ at a time"
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: "neynar,warpcast"
      - name: type
        in: query
        description: Type of identifier being used to query the channels. Defaults
          to id.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ChannelType'
        example: id
      - name: viewer_fid
        in: query
        description: FID of the user viewing the channels.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 194
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelResponseBulk'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/channel:
    get:
      tags:
      - Channel
      summary: Retrieve channel details by id or parent_url
      description: Returns details of a channel
      externalDocs:
        url: https://docs.neynar.com/reference/channel-details
      operationId: channel-details
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: id
        in: query
        description: Channel ID for the channel being queried
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: neynar
      - name: type
        in: query
        description: Type of identifier being used to query the channel. Defaults
          to id.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ChannelType'
        example: parent_url
      - name: viewer_fid
        in: query
        description: FID of the user viewing the channel.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 194
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/channel/followers:
    get:
      tags:
      - Channel
      summary: Retrieve followers for a given channel
      description: Returns a list of followers for a specific channel. Max limit is
        1000. Use cursor for pagination.
      externalDocs:
        url: https://docs.neynar.com/reference/channel-followers
      operationId: channel-followers
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: id
        in: query
        description: Channel ID for the channel being queried
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: founders
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Number of followers to retrieve (default 25, max 1000)"
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 15
          type: integer
          default: 25
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/channel/user:
    get:
      tags:
      - Channel
      summary: Get channels that a user is active in
      description: "Fetches all channels that a user has casted in, in reverse chronological\
        \ order."
      operationId: active-channels
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        description: The user's fid (identifier)
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 194
      - name: limit
        in: query
        description: "Number of results to retrieve (default 20, max 100)."
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
        example: 20
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersActiveChannelsResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "404":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/channel/users:
    get:
      tags:
      - Channel
      summary: Retrieve users who are active in a channel
      description: "Returns a list of users who are active in a given channel, ordered\
        \ by ascending FIDs"
      externalDocs:
        url: https://docs.neynar.com/reference/channel-users
      operationId: channel-users
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: id
        in: query
        description: Channel ID for the channel being queried
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: neynar
      - name: has_root_cast_authors
        in: query
        description: Include users who posted the root cast in the channel
        required: true
        style: form
        explode: true
        schema:
          type: boolean
        example: false
      - name: has_cast_likers
        in: query
        description: Include users who liked a cast in the channel
        required: false
        style: form
        explode: true
        schema:
          type: boolean
        example: false
      - name: has_cast_recasters
        in: query
        description: Include users who recasted a cast in the channel
        required: false
        style: form
        explode: true
        schema:
          type: boolean
        example: false
      - name: has_reply_authors
        in: query
        description: Include users who replied to a cast in the channel
        required: false
        style: form
        explode: true
        schema:
          type: boolean
        example: false
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "Number of results to retrieve (default 25, max 100)"
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 25
        example: 25
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/channel/trending:
    get:
      tags:
      - Channel
      summary: Retrieve trending channels based on activity
      description: Returns a list of trending channels based on activity
      externalDocs:
        url: https://docs.neynar.com/reference/trending-channels
      operationId: trending-channels
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: time_window
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - 1d
          - 7d
          - 30d
      - name: limit
        in: query
        description: "Number of results to retrieve (default 10, max 25)"
        required: false
        style: form
        explode: true
        schema:
          maximum: 25
          minimum: 1
          type: integer
          default: 10
        example: 10
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrendingChannelResponse'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/followers:
    get:
      tags:
      - Follows
      summary: Retrieve followers for a given user
      description: Returns a list of followers for a specific FID.
      externalDocs:
        url: https://docs.neynar.com/reference/followers-v2
      operationId: followers-v2
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        description: User who's profile you are looking at
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
      - name: viewer_fid
        in: query
        description: Viewer who's looking at the profile.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
      - name: sort_type
        in: query
        description: Sort type for retrieve followers. Default is `desc_chron`
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/FollowSortType'
      - name: limit
        in: query
        description: "Number of results to retrieve (default 20, max 100)"
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/followers/relevant:
    get:
      tags:
      - Follows
      summary: Retrieve relevant followers for a given user
      description: Returns a list of relevant followers for a specific FID.
      externalDocs:
        url: https://docs.neynar.com/reference/relevant-followers
      operationId: relevant-followers
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: target_fid
        in: query
        description: User who's profile you are looking at
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
      - name: viewer_fid
        in: query
        description: Viewer who's looking at the profile
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelevantFollowersResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/following:
    get:
      tags:
      - Follows
      summary: Retrieve a list of users followed by a user
      description: Retrieve a list of users followed by a user. Can optionally include
        a viewer_fid and sort_type.
      externalDocs:
        url: https://docs.neynar.com/reference/following-v2
      operationId: following-v2
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        description: FID of the user whose following you want to fetch.
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 2
      - name: viewer_fid
        in: query
        description: FID of the user viewing the user.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3
      - name: sort_type
        in: query
        description: Optional parameter to sort the users based on different criteria.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/FollowSortType'
      - name: limit
        in: query
        description: "Number of results to retrieve (default 25, max 100)"
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          example: 25
          default: 25
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/reactions/user:
    get:
      tags:
      - Reaction
      summary: Fetches reactions for a given user
      description: Fetches reactions for a given user
      externalDocs:
        url: https://docs.neynar.com/reference/reactions
      operationId: reactions-user
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3
      - name: viewer_fid
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3
      - name: type
        in: query
        description: Type of reaction to fetch (likes or recasts or all)
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ReactionsType'
        example: all
      - name: limit
        in: query
        description: "Number of results to retrieve (default 25, max 100)"
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 25
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReactionsResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/reactions/cast:
    get:
      tags:
      - Reaction
      summary: Fetches reactions for a given cast
      description: Fetches reactions for a given cast
      externalDocs:
        url: https://docs.neynar.com/reference/reactions-cast
      operationId: reactions-cast
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: hash
        in: query
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/CastHash'
      - name: types
        in: query
        description: |
          Customize which reaction types the request should search for. This is a comma-separated string that can include the following values: 'likes' and 'recasts'. By default api returns both. To select multiple types, use a comma-separated list of these values.
        required: true
        style: form
        explode: true
        schema:
          pattern: "^(likes,?|recasts,?|all,?)+$"
          type: string
        example: "likes,recasts"
      - name: viewer_fid
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
      - name: limit
        in: query
        description: "Number of results to retrieve (default 25, max 100)"
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 25
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReactionsCastResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/fname/availability:
    get:
      tags:
      - fname
      summary: Check if a given fname is available
      description: Check if a given fname is available
      externalDocs:
        url: https://docs.neynar.com/reference/fname-availability
      operationId: fname-availability
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fname
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: farcaster
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FnameAvailabilityResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/storage/allocations:
    get:
      tags:
      - Storage
      summary: Fetches storage allocations for a given user
      description: Fetches storage allocations for a given user
      externalDocs:
        url: https://docs.neynar.com/reference/storage-allocations
      operationId: storage-allocations
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3
      responses:
        "200":
          description: A list of storage allocations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAllocationsResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/storage/usage:
    get:
      tags:
      - Storage
      summary: Fetches storage usage for a given user
      description: Fetches storage usage for a given user
      externalDocs:
        url: https://docs.neynar.com/reference/storage-usage
      operationId: storage-usage
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 3
      responses:
        "200":
          description: Details of storage usage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageUsageResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/storage/buy:
    post:
      tags:
      - Storage
      summary: Buy storage for an fid
      description: |
        This api will help you rent units of storage for an year for a specific fid.
        A storage unit lets you store 5000 casts, 2500 reactions and 2500 links.
      externalDocs:
        url: https://docs.neynar.com/reference/buy-storage
      operationId: buy-storage
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuyStorageReqBody'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAllocationsResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZodError'
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/webhook:
    get:
      tags:
      - Webhook
      summary: Fetch a webhook
      description: Fetch a webhook
      externalDocs:
        url: https://docs.neynar.com/reference/lookup-webhook
      operationId: lookup-webhook
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: webhook_id
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Details of a webhook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
    put:
      tags:
      - Webhook
      summary: Update a webhook
      description: Update a webhook
      externalDocs:
        url: https://docs.neynar.com/reference/update-webhook
      operationId: update-webhook
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookPutReqBody'
        required: true
      responses:
        "200":
          description: Updated webhook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
    post:
      tags:
      - Webhook
      summary: Create a webhook
      description: Create a webhook
      externalDocs:
        url: https://docs.neynar.com/reference/publish-webhook
      operationId: publish-webhook
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookPostReqBody'
        required: true
      responses:
        "200":
          description: Created webhook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
    delete:
      tags:
      - Webhook
      summary: Delete a webhook
      description: Delete a webhook
      externalDocs:
        url: https://docs.neynar.com/reference/delete-webhook
      operationId: delete-webhook
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookDeleteReqBody'
        required: true
      responses:
        "200":
          description: Deleted webhook status message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
    patch:
      tags:
      - Webhook
      summary: Update webhook active status
      description: Update webhook active status
      externalDocs:
        url: https://docs.neynar.com/reference/update-webhook-active-status
      operationId: update-webhook-active-status
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookPatchReqBody'
        required: true
      responses:
        "200":
          description: Updated webhook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/webhook/list:
    get:
      tags:
      - Webhook
      summary: Fetch a list of webhooks associated to a user
      description: Fetch a list of webhooks associated to a user
      externalDocs:
        url: https://docs.neynar.com/reference/fetch-webhooks
      operationId: fetch-webhooks
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      responses:
        "200":
          description: List of webhooks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookListResponse'
  /farcaster/mute/list:
    get:
      tags:
      - Mute
      summary: Get fids that a user has muted
      description: Fetches all fids that a user has muted.
      operationId: mute-list
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: fid
        in: query
        description: The user's fid (identifier)
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Fid'
        example: 194
      - name: limit
        in: query
        description: "Number of results to retrieve (default 20, max 100)."
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
        example: 20
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MuteListResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/mute:
    post:
      tags:
      - Mute
      summary: Adds a mute for a fid
      description: "Adds a mute for a given fid. This is a whitelisted API, reach\
        \ out if you want access."
      operationId: add-mute
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MuteReqBody'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MuteResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
    delete:
      tags:
      - Mute
      summary: Deletes a mute for a fid
      description: "Deletes a mute for a given fid. This is a whitelisted API, reach\
        \ out if you want access."
      operationId: delete-mute
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MuteReqBody'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MuteResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
  /farcaster/cast/composer_actions/list:
    get:
      tags:
      - Cast
      summary: Fetches all composer actions on Warpcast
      description: Fetches all composer actions on Warpcast. You can filter by top
        or featured.
      externalDocs:
        url: https://docs.neynar.com/reference/composer-list
      operationId: composer-list
      parameters:
      - name: api_key
        in: header
        description: API key required for authentication.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: NEYNAR_API_DOCS
      - name: list
        in: query
        description: Type of list to fetch.
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/CastComposerType'
        example: top
      - name: limit
        in: query
        description: "Number of results to retrieve (default 25, max 25)."
        required: false
        style: form
        explode: true
        schema:
          maximum: 25
          minimum: 1
          type: integer
          default: 25
        example: 25
      - name: cursor
        in: query
        description: Pagination cursor.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: List of composer actions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CastComposerActionsListResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRes'
components:
  schemas:
    Address:
      pattern: "^0x[a-fA-F0-9]{40}$"
      type: string
      description: Ethereum address
    SolAddress:
      pattern: "^[1-9A-HJ-NP-Za-km-z]{32,44}$"
      type: string
      description: Solana address
    Fid:
      type: integer
      description: User identifier (unsigned integer)
      format: int32
    SignerUUID:
      type: string
      description: UUID of the signer
      example: 19d0c5fd-9b33-4a48-a0e2-bc7b0555baec
    ActiveStatus:
      type: string
      description: |
        The status of a user.
          - active: The user is currently active.
          - inactive: The user is not currently active.
      enum:
      - active
      - inactive
    SubscriptionProviders:
      type: string
      description: |
        The provider of the subscription.
      enum:
      - fabric_stp
      - paragraph
    SubscriptionProvider:
      type: string
      description: |
        The provider of the subscription.
      enum:
      - fabric_stp
    FollowSortType:
      type: string
      example: desc_chron
      enum:
      - desc_chron
      - algorithmic
    ForYouProvider:
      type: string
      description: |
        The provider of the For You feed.
      enum:
      - openrank
      - karma3
    FeedTrendingProvider:
      type: string
      description: |
        The provider of the trending casts feed.
      enum:
      - neynar
      - openrank
      default: neynar
    ReactionType:
      type: string
      enum:
      - like
      - recast
    ReactionsType:
      type: string
      enum:
      - all
      - likes
      - recasts
    NextCursor:
      required:
      - cursor
      type: object
      properties:
        cursor:
          type: string
          nullable: true
      description: Returns next cursor
      example:
        cursor: cursor
    CastHash:
      type: string
      description: Cast Hash
      default: 0xfe90f9de682273e05b201629ad2338bdcd89b6be
    CastNotificationType:
      type: string
      description: |
        The notification type of a cast.
      enum:
      - cast-mention
      - cast-reply
    CastParamType:
      type: string
      description: |
        The query param accepted by the API. Sent along with identifier param.
        url - Cast identifier is a url
        hash - Cast identifier is a hash
      enum:
      - url
      - hash
    ReplyDepth:
      maximum: 5
      minimum: 0
      type: integer
      description: |
        Depth of replies to fetch in the conversation.
      default: 2
    ErrorRes:
      required:
      - message
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        property:
          type: string
        status:
          type: integer
          format: int32
      description: Details for the error response
    ConflictErrorRes:
      required:
      - message
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        property:
          type: string
        key:
          type: string
      description: Details for the conflict error response
    Ed25519PublicKey:
      pattern: "^0x[a-fA-F0-9]{64}$"
      type: string
      description: Ed25519 public key
      example: 0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef
    Timestamp:
      type: string
      format: date-time
    IndividualHashObj:
      required:
      - hash
      type: object
      properties:
        hash:
          type: string
    EmbedUrl:
      required:
      - url
      type: object
      properties:
        url:
          type: string
        metadata:
          $ref: '#/components/schemas/EmbedUrlMetadata'
    TwitterImageObject:
      required:
      - url
      type: object
      properties:
        alt:
          type: string
        height:
          type: integer
        url:
          type: string
        width:
          type: integer
    TwitterPlayerObject:
      required:
      - url
      type: object
      properties:
        height:
          type: integer
        stream:
          type: string
        url:
          type: string
        width:
          type: integer
    ImageObject:
      required:
      - url
      type: object
      properties:
        height:
          type: integer
        type:
          type: string
        url:
          type: string
        width:
          type: integer
        alt:
          type: string
    VideoObject:
      required:
      - url
      type: object
      properties:
        height:
          type: integer
        type:
          type: string
        url:
          type: string
        width:
          type: integer
    MusicSongObject:
      required:
      - url
      type: object
      properties:
        disc:
          type: string
        track:
          type: integer
        url:
          type: string
    OgObject:
      type: object
      properties:
        alAndroidAppName:
          type: string
        alAndroidClass:
          type: string
        alAndroidPackage:
          type: string
        alAndroidUrl:
          type: string
        alIosAppName:
          type: string
        alIosAppStoreId:
          type: string
        alIosUrl:
          type: string
        alIpadAppName:
          type: string
        alIpadAppStoreId:
          type: string
        alIpadUrl:
          type: string
        alIphoneAppName:
          type: string
        alIphoneAppStoreId:
          type: string
        alIphoneUrl:
          type: string
        alWebShouldFallback:
          type: string
        alWebUrl:
          type: string
        alWindowsAppId:
          type: string
        alWindowsAppName:
          type: string
        alWindowsPhoneAppId:
          type: string
        alWindowsPhoneAppName:
          type: string
        alWindowsPhoneUrl:
          type: string
        alWindowsUniversalAppId:
          type: string
        alWindowsUniversalAppName:
          type: string
        alWindowsUniversalUrl:
          type: string
        alWindowsUrl:
          type: string
        articleAuthor:
          type: string
        articleExpirationTime:
          type: string
        articleModifiedTime:
          type: string
        articlePublishedDate:
          type: string
        articlePublishedTime:
          type: string
        articleModifiedDate:
          type: string
        articlePublisher:
          type: string
        articleSection:
          type: string
        articleTag:
          type: string
        author:
          type: string
        bookAuthor:
          type: string
        bookCanonicalName:
          type: string
        bookIsbn:
          type: string
        bookReleaseDate:
          type: string
        booksBook:
          type: string
        booksRatingScale:
          type: string
        booksRatingValue:
          type: string
        bookTag:
          type: string
        businessContactDataCountryName:
          type: string
        businessContactDataLocality:
          type: string
        businessContactDataPostalCode:
          type: string
        businessContactDataRegion:
          type: string
        businessContactDataStreetAddress:
          type: string
        charset:
          type: string
        dcContributor:
          type: string
        dcCoverage:
          type: string
        dcCreator:
          type: string
        dcDate:
          type: string
        dcDateCreated:
          type: string
        dcDateIssued:
          type: string
        dcDescription:
          type: string
        dcFormatMedia:
          type: string
        dcFormatSize:
          type: string
        dcIdentifier:
          type: string
        dcLanguage:
          type: string
        dcPublisher:
          type: string
        dcRelation:
          type: string
        dcRights:
          type: string
        dcSource:
          type: string
        dcSubject:
          type: string
        dcTitle:
          type: string
        dcType:
          type: string
        favicon:
          type: string
        fbAppId:
          type: string
        jsonLD:
          type: array
          items:
            type: object
        modifiedTime:
          type: string
        musicAlbum:
          type: string
        musicAlbumDisc:
          type: string
        musicAlbumTrack:
          type: string
        musicAlbumUrl:
          type: string
        musicCreator:
          type: string
        musicDuration:
          type: string
        musicMusician:
          type: string
        musicPlaylist:
          type: string
        musicRadioStation:
          type: string
        musicReleaseDate:
          type: string
        musicSong:
          type: array
          items:
            $ref: '#/components/schemas/MusicSongObject'
        ogArticleAuthor:
          type: string
        ogArticleExpirationTime:
          type: string
        ogArticleModifiedTime:
          type: string
        ogArticlePublishedTime:
          type: string
        ogArticlePublisher:
          type: string
        ogArticleSection:
          type: string
        ogArticleTag:
          type: string
        ogAudio:
          type: string
        ogAudioSecureURL:
          type: string
        ogAudioType:
          type: string
        ogAudioURL:
          type: string
        ogAvailability:
          type: string
        ogDate:
          type: string
        ogDescription:
          type: string
        ogDeterminer:
          type: string
        ogEpisode:
          type: string
        ogImage:
          type: array
          items:
            $ref: '#/components/schemas/ImageObject'
        ogLocale:
          type: string
        ogLocaleAlternate:
          type: string
        ogLogo:
          type: string
        ogMovie:
          type: string
        ogPriceAmount:
          type: string
        ogPriceCurrency:
          type: string
        ogProductAvailability:
          type: string
        ogProductCondition:
          type: string
        ogProductPriceAmount:
          type: string
        ogProductPriceCurrency:
          type: string
        ogProductRetailerItemId:
          type: string
        ogSiteName:
          type: string
        ogTitle:
          type: string
        ogType:
          type: string
        ogUrl:
          type: string
        ogVideo:
          type: array
          items:
            $ref: '#/components/schemas/VideoObject'
        ogVideoActor:
          type: string
        ogVideoActorId:
          type: string
        ogVideoActorRole:
          type: string
        ogVideoDirector:
          type: string
        ogVideoDuration:
          type: string
        ogVideoOther:
          type: string
        ogVideoReleaseDate:
          type: string
        ogVideoSecureURL:
          type: string
        ogVideoSeries:
          type: string
        ogVideoTag:
          type: string
        ogVideoTvShow:
          type: string
        ogVideoWriter:
          type: string
        ogWebsite:
          type: string
        placeLocationLatitude:
          type: string
        placeLocationLongitude:
          type: string
        profileFirstName:
          type: string
        profileGender:
          type: string
        profileLastName:
          type: string
        profileUsername:
          type: string
        publishedTime:
          type: string
        releaseDate:
          type: string
        requestUrl:
          type: string
        restaurantContactInfoCountryName:
          type: string
        restaurantContactInfoEmail:
          type: string
        restaurantContactInfoLocality:
          type: string
        restaurantContactInfoPhoneNumber:
          type: string
        restaurantContactInfoPostalCode:
          type: string
        restaurantContactInfoRegion:
          type: string
        restaurantContactInfoStreetAddress:
          type: string
        restaurantContactInfoWebsite:
          type: string
        restaurantMenu:
          type: string
        restaurantRestaurant:
          type: string
        restaurantSection:
          type: string
        restaurantVariationPriceAmount:
          type: string
        restaurantVariationPriceCurrency:
          type: string
        twitterAccount:
          type: string
        twitterAppIdGooglePlay:
          type: string
        twitterAppIdiPad:
          type: string
        twitterAppIdiPhone:
          type: string
        twitterAppNameGooglePlay:
          type: string
        twitterAppNameiPad:
          type: string
        twitterAppNameiPhone:
          type: string
        twitterAppUrlGooglePlay:
          type: string
        twitterAppUrliPad:
          type: string
        twitterAppUrliPhone:
          type: string
        twitterCard:
          type: string
        twitterCreator:
          type: string
        twitterCreatorId:
          type: string
        twitterDescription:
          type: string
        twitterImage:
          type: array
          items:
            $ref: '#/components/schemas/TwitterImageObject'
        twitterPlayer:
          type: array
          items:
            $ref: '#/components/schemas/TwitterPlayerObject'
        twitterPlayerStreamContentType:
          type: string
        twitterSite:
          type: string
        twitterSiteId:
          type: string
        twitterTitle:
          type: string
        twitterUrl:
          type: string
        updatedTime:
          type: string
    EmbedUrlMetadata:
      required:
      - _status
      type: object
      properties:
        _status:
          type: string
        content_type:
          type: string
          nullable: true
        content_length:
          type: integer
          nullable: true
        image:
          $ref: '#/components/schemas/EmbedUrlMetadata_image'
        video:
          $ref: '#/components/schemas/EmbedUrlMetadata_video'
        html:
          $ref: '#/components/schemas/OgObject'
    CastId:
      required:
      - fid
      - hash
      type: object
      properties:
        fid:
          $ref: '#/components/schemas/Fid'
        hash:
          type: string
    EmbedCastId:
      required:
      - cast_id
      type: object
      properties:
        cast_id:
          $ref: '#/components/schemas/CastId'
    Frame:
      required:
      - frames_url
      - image
      - version
      type: object
      properties:
        version:
          type: string
          description: Version of the frame
        image:
          type: string
          description: URL of the image
        buttons:
          type: array
          items:
            $ref: '#/components/schemas/FrameActionButton'
        post_url:
          type: string
          description: Post URL to take an action on this frame
        frames_url:
          type: string
          description: URL of the frames
        title:
          type: string
        image_aspect_ratio:
          type: string
        input:
          $ref: '#/components/schemas/Frame_input'
        state:
          $ref: '#/components/schemas/Frame_state'
      example:
        image: image
        input:
          text: text
        buttons:
        - post_url: post_url
          action_type: post
          index: 0
          title: title
          target: target
        - post_url: post_url
          action_type: post
          index: 0
          title: title
          target: target
        image_aspect_ratio: image_aspect_ratio
        post_url: post_url
        frames_url: frames_url
        state:
          serialized: serialized
        title: title
        version: version
    SubscriptionTier:
      type: object
      properties:
        id:
          type: integer
          example: 1
        price:
          $ref: '#/components/schemas/SubscriptionTier_price'
      example:
        price:
          initial_mint_price: "0"
          tokens_per_period: "3000000000000000"
          period_duration_seconds: 2592000
        id: 1
    SubscribedTo:
      required:
      - creator
      - expires_at
      - object
      - subscribed_at
      - tier
      - user
      type: object
      allOf:
      - $ref: '#/components/schemas/Subscription'
      - type: object
        properties:
          expires_at:
            type: string
            format: date-time
            example: 2023-09-13T22:10:22Z
          subscribed_at:
            type: string
            format: date-time
            example: 2023-09-13T22:10:22Z
          tier:
            $ref: '#/components/schemas/SubscriptionTier'
          creator:
            $ref: '#/components/schemas/User'
    Subscriber:
      required:
      - object
      - subscribed_to
      - user
      type: object
      properties:
        object:
          type: string
          example: subscriber
        user:
          $ref: '#/components/schemas/User'
        subscribed_to:
          $ref: '#/components/schemas/SubscribedToObject'
      example:
        subscribed_to:
          protocol_version: 1
          chain: 8453
          expires_at: 2023-09-13T22:10:22Z
          subscribed_at: 2023-09-13T22:10:22Z
          provider_name: fabric_stp
          contract_address: 0x325b3e2c19f4900f8f4eb5f6872dc2715e77cbac
          tier_id: "0"
          object: subscription_dehydrated
        user:
          fid: 0
          profile:
            bio:
              mentioned_profiles:
              - mentioned_profiles
              - mentioned_profiles
              text: text
          power_badge: true
          display_name: display_name
          verifications:
          - null
          - null
          custody_address: custody_address
          follower_count: 6
          active_status: active
          verified_addresses:
            eth_addresses:
            - null
            - null
            sol_addresses:
            - sol_addresses
            - sol_addresses
          pfp_url: pfp_url
          following_count: 1
          viewer_context:
            followed_by: true
            following: true
          object: user
          username: username
        object: subscriber
    Subscriptions:
      required:
      - object
      - subscriptions_created
      type: object
      properties:
        object:
          type: string
        subscriptions_created:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
      example:
        subscriptions_created:
        - chain: 8453
          metadata:
            symbol: MMS
            art_url: https://storage.withfabric.xyz/loom/403fdc10-95f3-4b25-9d77-5aac7ccb9fd1.jpg
            title: /memes channel sub
          tiers:
          - price:
              initial_mint_price: "0"
              tokens_per_period: "3000000000000000"
              period_duration_seconds: 2592000
            id: 1
          - price:
              initial_mint_price: "0"
              tokens_per_period: "3000000000000000"
              period_duration_seconds: 2592000
            id: 1
          protocol_version: 1
          price:
            initial_mint_price: "0"
            tokens_per_period: "350574998400000"
            period_duration_seconds: 2592000
          owner_address: 0xb6f6dce6000ca88cc936b450cedb16a5c15f157f
          provider_name: fabric_stp
          contract_address: 0xff63fc310d47ef80961056ac8df0b3f1a9e3ef58
          object: subscription
          token:
            erc20: false
            symbol: ETH
            address: address
            decimals: 18
        - chain: 8453
          metadata:
            symbol: MMS
            art_url: https://storage.withfabric.xyz/loom/403fdc10-95f3-4b25-9d77-5aac7ccb9fd1.jpg
            title: /memes channel sub
          tiers:
          - price:
              initial_mint_price: "0"
              tokens_per_period: "3000000000000000"
              period_duration_seconds: 2592000
            id: 1
          - price:
              initial_mint_price: "0"
              tokens_per_period: "3000000000000000"
              period_duration_seconds: 2592000
            id: 1
          protocol_version: 1
          price:
            initial_mint_price: "0"
            tokens_per_period: "350574998400000"
            period_duration_seconds: 2592000
          owner_address: 0xb6f6dce6000ca88cc936b450cedb16a5c15f157f
          provider_name: fabric_stp
          contract_address: 0xff63fc310d47ef80961056ac8df0b3f1a9e3ef58
          object: subscription
          token:
            erc20: false
            symbol: ETH
            address: address
            decimals: 18
        object: object
    Subscription:
      required:
      - chain
      - contract_address
      - metadata
      - object
      - owner_address
      - price
      - protocol_version
      - token
      type: object
      properties:
        object:
          type: string
          example: subscription
        provider_name:
          type: string
          example: fabric_stp
        contract_address:
          type: string
          example: 0xff63fc310d47ef80961056ac8df0b3f1a9e3ef58
        chain:
          type: integer
          example: 8453
        metadata:
          $ref: '#/components/schemas/Subscription_metadata'
        owner_address:
          type: string
          example: 0xb6f6dce6000ca88cc936b450cedb16a5c15f157f
        price:
          $ref: '#/components/schemas/Subscription_price'
        tiers:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionTier'
        protocol_version:
          type: integer
          example: 1
        token:
          $ref: '#/components/schemas/Subscription_token'
      example:
        chain: 8453
        metadata:
          symbol: MMS
          art_url: https://storage.withfabric.xyz/loom/403fdc10-95f3-4b25-9d77-5aac7ccb9fd1.jpg
          title: /memes channel sub
        tiers:
        - price:
            initial_mint_price: "0"
            tokens_per_period: "3000000000000000"
            period_duration_seconds: 2592000
          id: 1
        - price:
            initial_mint_price: "0"
            tokens_per_period: "3000000000000000"
            period_duration_seconds: 2592000
          id: 1
        protocol_version: 1
        price:
          initial_mint_price: "0"
          tokens_per_period: "350574998400000"
          period_duration_seconds: 2592000
        owner_address: 0xb6f6dce6000ca88cc936b450cedb16a5c15f157f
        provider_name: fabric_stp
        contract_address: 0xff63fc310d47ef80961056ac8df0b3f1a9e3ef58
        object: subscription
        token:
          erc20: false
          symbol: ETH
          address: address
          decimals: 18
    SubscribedToObject:
      required:
      - object
      - provider_name
      type: object
      properties:
        object:
          type: string
          example: subscription_dehydrated
        provider_name:
          type: string
          example: fabric_stp
        contract_address:
          type: string
          example: 0x325b3e2c19f4900f8f4eb5f6872dc2715e77cbac
        protocol_version:
          type: integer
          example: 1
        chain:
          type: integer
          example: 8453
        expires_at:
          type: string
          format: date-time
          example: 2023-09-13T22:10:22Z
        subscribed_at:
          type: string
          format: date-time
          example: 2023-09-13T22:10:22Z
        tier_id:
          type: string
          example: "0"
      example:
        protocol_version: 1
        chain: 8453
        expires_at: 2023-09-13T22:10:22Z
        subscribed_at: 2023-09-13T22:10:22Z
        provider_name: fabric_stp
        contract_address: 0x325b3e2c19f4900f8f4eb5f6872dc2715e77cbac
        tier_id: "0"
        object: subscription_dehydrated
    SubscribersResponse:
      type: object
      properties:
        subscribers:
          type: array
          items:
            $ref: '#/components/schemas/Subscriber'
      example:
        subscribers:
        - subscribed_to:
            protocol_version: 1
            chain: 8453
            expires_at: 2023-09-13T22:10:22Z
            subscribed_at: 2023-09-13T22:10:22Z
            provider_name: fabric_stp
            contract_address: 0x325b3e2c19f4900f8f4eb5f6872dc2715e77cbac
            tier_id: "0"
            object: subscription_dehydrated
          user:
            fid: 0
            profile:
              bio:
                mentioned_profiles:
                - mentioned_profiles
                - mentioned_profiles
                text: text
            power_badge: true
            display_name: display_name
            verifications:
            - null
            - null
            custody_address: custody_address
            follower_count: 6
            active_status: active
            verified_addresses:
              eth_addresses:
              - null
              - null
              sol_addresses:
              - sol_addresses
              - sol_addresses
            pfp_url: pfp_url
            following_count: 1
            viewer_context:
              followed_by: true
              following: true
            object: user
            username: username
          object: subscriber
        - subscribed_to:
            protocol_version: 1
            chain: 8453
            expires_at: 2023-09-13T22:10:22Z
            subscribed_at: 2023-09-13T22:10:22Z
            provider_name: fabric_stp
            contract_address: 0x325b3e2c19f4900f8f4eb5f6872dc2715e77cbac
            tier_id: "0"
            object: subscription_dehydrated
          user:
            fid: 0
            profile:
              bio:
                mentioned_profiles:
                - mentioned_profiles
                - mentioned_profiles
                text: text
            power_badge: true
            display_name: display_name
            verifications:
            - null
            - null
            custody_address: custody_address
            follower_count: 6
            active_status: active
            verified_addresses:
              eth_addresses:
              - null
              - null
              sol_addresses:
              - sol_addresses
              - sol_addresses
            pfp_url: pfp_url
            following_count: 1
            viewer_context:
              followed_by: true
              following: true
            object: user
            username: username
          object: subscriber
    SubscribedToResponse:
      type: object
      properties:
        subscribed_to:
          type: array
          items:
            $ref: '#/components/schemas/SubscribedTo'
      example:
        subscribed_to:
        - ""
        - ""
    SubscriptionsResponse:
      type: object
      properties:
        subscriptions_created:
          type: array
          items:
            $ref: '#/components/schemas/Subscriptions'
      example:
        subscriptions_created:
        - subscriptions_created:
          - chain: 8453
            metadata:
              symbol: MMS
              art_url: https://storage.withfabric.xyz/loom/403fdc10-95f3-4b25-9d77-5aac7ccb9fd1.jpg
              title: /memes channel sub
            tiers:
            - price:
                initial_mint_price: "0"
                tokens_per_period: "3000000000000000"
                period_duration_seconds: 2592000
              id: 1
            - price:
                initial_mint_price: "0"
                tokens_per_period: "3000000000000000"
                period_duration_seconds: 2592000
              id: 1
            protocol_version: 1
            price:
              initial_mint_price: "0"
              tokens_per_period: "350574998400000"
              period_duration_seconds: 2592000
            owner_address: 0xb6f6dce6000ca88cc936b450cedb16a5c15f157f
            provider_name: fabric_stp
            contract_address: 0xff63fc310d47ef80961056ac8df0b3f1a9e3ef58
            object: subscription
            token:
              erc20: false
              symbol: ETH
              address: address
              decimals: 18
          - chain: 8453
            metadata:
              symbol: MMS
              art_url: https://storage.withfabric.xyz/loom/403fdc10-95f3-4b25-9d77-5aac7ccb9fd1.jpg
              title: /memes channel sub
            tiers:
            - price:
                initial_mint_price: "0"
                tokens_per_period: "3000000000000000"
                period_duration_seconds: 2592000
              id: 1
            - price:
                initial_mint_price: "0"
                tokens_per_period: "3000000000000000"
                period_duration_seconds: 2592000
              id: 1
            protocol_version: 1
            price:
              initial_mint_price: "0"
              tokens_per_period: "350574998400000"
              period_duration_seconds: 2592000
            owner_address: 0xb6f6dce6000ca88cc936b450cedb16a5c15f157f
            provider_name: fabric_stp
            contract_address: 0xff63fc310d47ef80961056ac8df0b3f1a9e3ef58
            object: subscription
            token:
              erc20: false
              symbol: ETH
              address: address
              decimals: 18
          object: object
        - subscriptions_created:
          - chain: 8453
            metadata:
              symbol: MMS
              art_url: https://storage.withfabric.xyz/loom/403fdc10-95f3-4b25-9d77-5aac7ccb9fd1.jpg
              title: /memes channel sub
            tiers:
            - price:
                initial_mint_price: "0"
                tokens_per_period: "3000000000000000"
                period_duration_seconds: 2592000
              id: 1
            - price:
                initial_mint_price: "0"
                tokens_per_period: "3000000000000000"
                period_duration_seconds: 2592000
              id: 1
            protocol_version: 1
            price:
              initial_mint_price: "0"
              tokens_per_period: "350574998400000"
              period_duration_seconds: 2592000
            owner_address: 0xb6f6dce6000ca88cc936b450cedb16a5c15f157f
            provider_name: fabric_stp
            contract_address: 0xff63fc310d47ef80961056ac8df0b3f1a9e3ef58
            object: subscription
            token:
              erc20: false
              symbol: ETH
              address: address
              decimals: 18
          - chain: 8453
            metadata:
              symbol: MMS
              art_url: https://storage.withfabric.xyz/loom/403fdc10-95f3-4b25-9d77-5aac7ccb9fd1.jpg
              title: /memes channel sub
            tiers:
            - price:
                initial_mint_price: "0"
                tokens_per_period: "3000000000000000"
                period_duration_seconds: 2592000
              id: 1
            - price:
                initial_mint_price: "0"
                tokens_per_period: "3000000000000000"
                period_duration_seconds: 2592000
              id: 1
            protocol_version: 1
            price:
              initial_mint_price: "0"
              tokens_per_period: "350574998400000"
              period_duration_seconds: 2592000
            owner_address: 0xb6f6dce6000ca88cc936b450cedb16a5c15f157f
            provider_name: fabric_stp
            contract_address: 0xff63fc310d47ef80961056ac8df0b3f1a9e3ef58
            object: subscription
            token:
              erc20: false
              symbol: ETH
              address: address
              decimals: 18
          object: object
    FrameSignaturePacket:
      required:
      - trustedData
      - untrustedData
      type: object
      properties:
        untrustedData:
          $ref: '#/components/schemas/FrameSignaturePacket_untrustedData'
        trustedData:
          $ref: '#/components/schemas/FrameSignaturePacket_trustedData'
      description: The Frame Signature Packet (https://docs.farcaster.xyz/developers/frames/spec#frame-signature-packet)
    FrameAction:
      required:
      - button
      - frames_url
      - post_url
      type: object
      properties:
        version:
          type: string
        title:
          type: string
        image:
          type: string
        button:
          $ref: '#/components/schemas/FrameActionButton'
        input:
          $ref: '#/components/schemas/FrameInput'
        state:
          $ref: '#/components/schemas/FrameState'
        transaction:
          $ref: '#/components/schemas/FrameTransaction'
        address:
          $ref: '#/components/schemas/FrameAddress'
        frames_url:
          type: string
          description: URL of the frames
        post_url:
          type: string
          description: URL of the post to get the next frame
    FrameButtonActionType:
      type: string
      enum:
      - post
      - post_redirect
      - tx
    FrameInput:
      type: object
      properties:
        text:
          type: string
          description: Input text for the frame
          example: Draw a purple ringed planet
      example:
        text: Draw a purple ringed planet
    FrameState:
      required:
      - serialized
      type: object
      properties:
        serialized:
          type: string
          description: State for the frame in a serialized format
          example: '%7B%22counter%22%3A1%7D'
      example:
        serialized: '%7B%22counter%22%3A1%7D'
    FrameAddress:
      type: string
      description: The connected wallet address of the interacting user.
    FrameTransaction:
      required:
      - hash
      type: object
      properties:
        hash:
          type: string
          description: Transaction hash
          example: 0xa80de157a3ab4648db1ecfab7e6355b342215bc549f6e37be9e6da527cc024f7
      example:
        hash: 0xa80de157a3ab4648db1ecfab7e6355b342215bc549f6e37be9e6da527cc024f7
    FrameActionButton:
      required:
      - action_type
      - index
      type: object
      properties:
        title:
          type: string
          description: Title of the button
        index:
          type: integer
          description: Index of the button
        action_type:
          $ref: '#/components/schemas/FrameButtonActionType'
        target:
          type: string
          description: Target of the button
        post_url:
          type: string
          description: Used specifically for the tx action type to post a successful
            transaction hash
      example:
        post_url: post_url
        action_type: post
        index: 0
        title: title
        target: target
    ReactionLike:
      required:
      - fid
      type: object
      properties:
        fid:
          $ref: '#/components/schemas/Fid'
    ReactionRecast:
      required:
      - fid
      - fname
      type: object
      properties:
        fid:
          $ref: '#/components/schemas/Fid'
        fname:
          type: string
    User:
      required:
      - active_status
      - custody_address
      - fid
      - follower_count
      - following_count
      - object
      - power_badge
      - profile
      - username
      - verifications
      - verified_addresses
      type: object
      properties:
        object:
          type: string
          enum:
          - user
        fid:
          $ref: '#/components/schemas/Fid'
        username:
          type: string
        display_name:
          type: string
        custody_address:
          $ref: '#/components/schemas/Address'
        pfp_url:
          type: string
          description: The URL of the user's profile picture
        profile:
          $ref: '#/components/schemas/User_profile'
        follower_count:
          type: integer
          description: The number of followers the user has.
          format: int32
        following_count:
          type: integer
          description: The number of users the user is following.
          format: int32
        verifications:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        verified_addresses:
          $ref: '#/components/schemas/User_verified_addresses'
        active_status:
          $ref: '#/components/schemas/ActiveStatus'
        power_badge:
          type: boolean
        viewer_context:
          $ref: '#/components/schemas/UserViewerContext'
      example:
        fid: 0
        profile:
          bio:
            mentioned_profiles:
            - mentioned_profiles
            - mentioned_profiles
            text: text
        power_badge: true
        display_name: display_name
        verifications:
        - null
        - null
        custody_address: custody_address
        follower_count: 6
        active_status: active
        verified_addresses:
          eth_addresses:
          - null
          - null
          sol_addresses:
          - sol_addresses
          - sol_addresses
        pfp_url: pfp_url
        following_count: 1
        viewer_context:
          followed_by: true
          following: true
        object: user
        username: username
    EmbeddedCast:
      oneOf:
      - $ref: '#/components/schemas/EmbedUrl'
      - $ref: '#/components/schemas/EmbedCastId'
    Cast:
      required:
      - author
      - embeds
      - hash
      - parent_author
      - parent_hash
      - parent_url
      - root_parent_url
      - text
      - timestamp
      type: object
      properties:
        hash:
          type: string
        parent_hash:
          type: string
          nullable: true
        parent_url:
          type: string
          nullable: true
        root_parent_url:
          type: string
          nullable: true
        parent_author:
          type: object
          allOf:
          - $ref: '#/components/schemas/Fid'
          - required:
            - fid
            properties:
              fid:
                type: integer
                nullable: true
        author:
          $ref: '#/components/schemas/User'
        text:
          type: string
        timestamp:
          $ref: '#/components/schemas/Timestamp'
        embeds:
          type: array
          items:
            $ref: '#/components/schemas/EmbeddedCast'
        type:
          $ref: '#/components/schemas/CastNotificationType'
    ProfileUrl:
      required:
      - pfp
      type: object
      properties:
        pfp:
          $ref: '#/components/schemas/ProfileUrl_pfp'
    SearchedUser:
      allOf:
      - $ref: '#/components/schemas/User'
      - $ref: '#/components/schemas/ProfileUrl'
    RegisterSignerKeyReqBody:
      required:
      - app_fid
      - deadline
      - signature
      - signer_uuid
      type: object
      properties:
        signer_uuid:
          $ref: '#/components/schemas/SignerUUID'
        signature:
          type: string
          description: "Signature generated by the custody address of the app. Signed\
            \ data includes app_fid, deadline, signer’s public key"
        app_fid:
          $ref: '#/components/schemas/Fid'
        deadline:
          type: integer
          description: unix timestamp in seconds that controls how long the signed
            key request is valid for. (24 hours from now is recommended)
        sponsor:
          $ref: '#/components/schemas/RegisterSignerKeyReqBody_sponsor'
    RegisterDeveloperManagedSignedKeyReqBody:
      required:
      - app_fid
      - deadline
      - public_key
      - signature
      type: object
      properties:
        public_key:
          $ref: '#/components/schemas/Ed25519PublicKey'
        signature:
          type: string
          description: "Signature generated by the custody address of the app. Signed\
            \ data includes app_fid, deadline, signer’s public key"
        app_fid:
          $ref: '#/components/schemas/Fid'
        deadline:
          type: integer
          description: unix timestamp in seconds that controls how long the signed
            key request is valid for. (24 hours from now is recommended)
        sponsor:
          $ref: '#/components/schemas/RegisterSignerKeyReqBody_sponsor'
    CastParent:
      type: string
      description: "parent_url of the channel the cast is in, or hash of the cast"
    PostCastReqBody:
      required:
      - signer_uuid
      type: object
      properties:
        signer_uuid:
          $ref: '#/components/schemas/SignerUUID'
        text:
          type: string
        embeds:
          type: array
          items:
            $ref: '#/components/schemas/EmbeddedCast'
        parent:
          $ref: '#/components/schemas/CastParent'
        channel_id:
          type: string
          description: "Channel ID of the channel where the cast is to be posted.\
            \ e.g. neynar, farcaster, warpcast"
          example: neynar
        idem:
          $ref: '#/components/schemas/Idem'
        parent_author_fid:
          $ref: '#/components/schemas/Fid'
    MuteReqBody:
      required:
      - fid
      - muted_fid
      type: object
      properties:
        fid:
          $ref: '#/components/schemas/Fid'
        muted_fid:
          $ref: '#/components/schemas/Fid'
    ReactionReqBody:
      required:
      - reaction_type
      - signer_uuid
      - target
      type: object
      properties:
        signer_uuid:
          $ref: '#/components/schemas/SignerUUID'
        reaction_type:
          $ref: '#/components/schemas/ReactionType'
        target:
          type: string
        target_author_fid:
          $ref: '#/components/schemas/Fid'
        idem:
          $ref: '#/components/schemas/Idem'
    ChannelType:
      type: string
      enum:
      - id
      - parent_url
    GetCastsReqBody:
      type: object
      properties:
        casts:
          type: array
          items:
            $ref: '#/components/schemas/IndividualHashObj'
    PublishMessageReqBody:
      type: object
    PublishMessageResponse:
      type: object
    DeleteCastReqBody:
      required:
      - signer_uuid
      - target_hash
      type: object
      properties:
        signer_uuid:
          $ref: '#/components/schemas/SignerUUID'
        target_hash:
          $ref: '#/components/schemas/Address'
    FollowReqBody:
      required:
      - signer_uuid
      - target_fids
      type: object
      properties:
        signer_uuid:
          $ref: '#/components/schemas/SignerUUID'
        target_fids:
          type: array
          items:
            $ref: '#/components/schemas/Fid'
    FrameDeveloperManagedActionReqBody:
      required:
      - action
      - signature_packet
      type: object
      properties:
        cast_hash:
          $ref: '#/components/schemas/CastHash'
        action:
          $ref: '#/components/schemas/FrameAction'
        signature_packet:
          $ref: '#/components/schemas/FrameSignaturePacket'
    FrameActionReqBody:
      required:
      - action
      - signer_uuid
      type: object
      properties:
        signer_uuid:
          $ref: '#/components/schemas/SignerUUID'
        cast_hash:
          $ref: '#/components/schemas/CastHash'
        action:
          $ref: '#/components/schemas/FrameAction'
    AddVerificationReqBody:
      required:
      - address
      - block_hash
      - eth_signature
      - signer_uuid
      type: object
      properties:
        signer_uuid:
          $ref: '#/components/schemas/SignerUUID'
        address:
          $ref: '#/components/schemas/Address'
        block_hash:
          type: string
        eth_signature:
          type: string
        verification_type:
          $ref: '#/components/schemas/VerificationType'
        chain_id:
          $ref: '#/components/schemas/VerificationChainId'
    RemoveVerificationReqBody:
      required:
      - address
      - block_hash
      - eth_signature
      - signer_uuid
      type: object
      properties:
        signer_uuid:
          $ref: '#/components/schemas/SignerUUID'
        address:
          $ref: '#/components/schemas/Address'
    UpdateUserReqBody:
      required:
      - signer_uuid
      type: object
      properties:
        signer_uuid:
          $ref: '#/components/schemas/SignerUUID'
        bio:
          type: string
        pfp_url:
          type: string
        url:
          type: string
        username:
          type: string
        display_name:
          type: string
    CastViewerContext:
      required:
      - liked
      - recasted
      type: object
      properties:
        liked:
          type: boolean
          description: Indicates if the viewer liked the cast.
        recasted:
          type: boolean
          description: Indicates if the viewer recasted the cast.
      description: Adds context on interactions the viewer has made with the cast.
    UserViewerContext:
      required:
      - followed_by
      - following
      type: object
      properties:
        following:
          type: boolean
          description: Indicates if the viewer is following the user.
        followed_by:
          type: boolean
          description: Indicates if the viewer is followed by the user.
      description: Adds context on the viewer's follow relationship with the user.
      example:
        followed_by: true
        following: true
    CastWithInteractionsReactions:
      required:
      - likes
      - likes_count
      - recasts
      - recasts_count
      type: object
      properties:
        likes:
          type: array
          items:
            $ref: '#/components/schemas/ReactionLike'
        recasts:
          type: array
          items:
            $ref: '#/components/schemas/ReactionRecast'
        likes_count:
          type: integer
          format: int32
        recasts_count:
          type: integer
          format: int32
    CastWithInteractionsReplies:
      required:
      - count
      type: object
      properties:
        count:
          type: integer
          format: int32
    ChannelOrDehydratedChannel:
      discriminator:
        propertyName: type
        mapping:
          channel: '#/components/schemas/Channel'
          dehydratedChannel: '#/components/schemas/DehydratedChannel'
      oneOf:
      - $ref: '#/components/schemas/Channel'
      - $ref: '#/components/schemas/DehydratedChannel'
    CastWithInteractions:
      allOf:
      - $ref: '#/components/schemas/Cast'
      - type: object
      - required:
        - channel
        - mentioned_profiles
        - reactions
        - replies
        - thread_hash
        properties:
          frames:
            type: array
            items:
              $ref: '#/components/schemas/Frame'
          reactions:
            $ref: '#/components/schemas/CastWithInteractionsReactions'
          replies:
            $ref: '#/components/schemas/CastWithInteractionsReplies'
          thread_hash:
            type: string
            nullable: true
          mentioned_profiles:
            type: array
            items:
              $ref: '#/components/schemas/User'
          channel:
            $ref: '#/components/schemas/ChannelOrDehydratedChannel'
          viewer_context:
            $ref: '#/components/schemas/CastViewerContext'
    CastWithInteractionsAndConversations:
      required:
      - direct_replies
      type: object
      allOf:
      - $ref: '#/components/schemas/CastWithInteractions'
      - type: object
        properties:
          direct_replies:
            type: array
            description: "note: This is recursive. It contains the direct replies\
              \ to the cast and their direct replies up to n reply_depth."
            items:
              $ref: '#/components/schemas/CastWithInteractionsAndConversations'
    Conversation:
      required:
      - conversation
      type: object
      properties:
        conversation:
          $ref: '#/components/schemas/Conversation_conversation'
        next:
          $ref: '#/components/schemas/NextCursor'
      example:
        conversation:
          cast:
            object: cast
            hash: 0x9288c1e862aa72bd69d0e383a28b9a76b63cbdb4
            thread_hash: 0x9288c1e862aa72bd69d0e383a28b9a76b63cbdb4
            parent_hash: null
            parent_url: chain://eip155:7777777/erc721:0x4f86113fc3e9783cf3ec9a552cbb566716a57628
            root_parent_url: chain://eip155:7777777/erc721:0x4f86113fc3e9783cf3ec9a552cbb566716a57628
            parent_author:
              fid: null
            author:
              fid: 194
              username: rish
              display_name: rish
              pfp_url: https://i.imgur.com/naZWL9n.gif
              profile:
                bio:
                  text: 'building /neynar 🪐 | neynar.com | /rish '
                  mentioned_profiles: []
              follower_count: 95149
              following_count: 642
              verifications:
              - 0x5a927ac639636e534b678e81768ca19e2c6280b7
              - 0xe9e261852ea62150eee685807df8fe3f211310a0
              verified_addresses:
                eth_addresses:
                - 0x5a927ac639636e534b678e81768ca19e2c6280b7
                - 0xe9e261852ea62150eee685807df8fe3f211310a0
                sol_addresses: []
              active_status: active
              power_badge: true
            text: .@fun built out hatecast.xyz based on a random conversation we had
              about app ideas for Farcaster.
            timestamp: 2023-09-13T22:10:22.000Z
            embeds:
            - url: https://paragraph.xyz/@neynar/farcaster-ideas
            frames:
            - version: vNext
              title: 14 ideas for what to build on Farcaster
              image: https://paragraph-nextjs-320oh1k0y.paragraph.xyz/api/highlight?text=14%20ideas%20for%20what%20to%20build%20on%20Farcaster&author=Neynar&url=%40neynar&avatarUrl=https%3A%2F%2Fstorage.googleapis.com%2Fpapyrus_images%2Fc4178c7c4e54679b2540db27e2607861&featuredImageUrl=&size=2048
              image_aspect_ratio: 1:1
              buttons:
              - index: 1
                title: Read Online
                action_type: post_redirect
              - index: 2
                title: Read Inline
                action_type: post
              - index: 3
                title: Subscribe
                action_type: post
              input: {}
              state: {}
              post_url: https://paragraph-nextjs-320oh1k0y.paragraph.xyz/api/farcaster/blog/AMDo84D7jm7E8VFcPaYx/post/g4lFJjGRgLoFmdays9SA
              frames_url: https://paragraph.xyz/@neynar/farcaster-ideas
            reactions:
              likes:
              - fid: 3
                fname: danromero.eth
              recasts:
              - fid: 2
                fname: varunsrin.eth
            replies:
              count: 10
          chronological_parent_casts: []
      default:
        conversation:
          cast:
            object: cast
            hash: 0x9288c1e862aa72bd69d0e383a28b9a76b63cbdb4
            thread_hash: 0x9288c1e862aa72bd69d0e383a28b9a76b63cbdb4
            parent_hash: null
            parent_url: chain://eip155:7777777/erc721:0x4f86113fc3e9783cf3ec9a552cbb566716a57628
            root_parent_url: chain://eip155:7777777/erc721:0x4f86113fc3e9783cf3ec9a552cbb566716a57628
            parent_author:
              fid: null
            author:
              fid: 194
              username: rish
              display_name: rish
              pfp_url: https://i.imgur.com/naZWL9n.gif
              profile:
                bio:
                  text: 'building /neynar 🪐 | neynar.com | /rish '
                  mentioned_profiles: []
              follower_count: 95149
              following_count: 642
              verifications:
              - 0x5a927ac639636e534b678e81768ca19e2c6280b7
              - 0xe9e261852ea62150eee685807df8fe3f211310a0
              verified_addresses:
                eth_addresses:
                - 0x5a927ac639636e534b678e81768ca19e2c6280b7
                - 0xe9e261852ea62150eee685807df8fe3f211310a0
                sol_addresses: []
              active_status: active
              power_badge: true
            text: .@fun built out hatecast.xyz based on a random conversation we had
              about app ideas for Farcaster.
            timestamp: 2023-09-13T22:10:22.000Z
            embeds:
            - url: https://paragraph.xyz/@neynar/farcaster-ideas
            frames:
            - version: vNext
              title: 14 ideas for what to build on Farcaster
              image: https://paragraph-nextjs-320oh1k0y.paragraph.xyz/api/highlight?text=14%20ideas%20for%20what%20to%20build%20on%20Farcaster&author=Neynar&url=%40neynar&avatarUrl=https%3A%2F%2Fstorage.googleapis.com%2Fpapyrus_images%2Fc4178c7c4e54679b2540db27e2607861&featuredImageUrl=&size=2048
              image_aspect_ratio: 1:1
              buttons:
              - index: 1
                title: Read Online
                action_type: post_redirect
              - index: 2
                title: Read Inline
                action_type: post
              - index: 3
                title: Subscribe
                action_type: post
              input: {}
              state: {}
              post_url: https://paragraph-nextjs-320oh1k0y.paragraph.xyz/api/farcaster/blog/AMDo84D7jm7E8VFcPaYx/post/g4lFJjGRgLoFmdays9SA
              frames_url: https://paragraph.xyz/@neynar/farcaster-ideas
            reactions:
              likes:
              - fid: 3
                fname: danromero.eth
              recasts:
              - fid: 2
                fname: varunsrin.eth
            replies:
              count: 10
          chronological_parent_casts: []
    Signer:
      required:
      - public_key
      - signer_uuid
      - status
      type: object
      properties:
        signer_uuid:
          $ref: '#/components/schemas/SignerUUID'
        public_key:
          $ref: '#/components/schemas/Ed25519PublicKey'
        status:
          type: string
          enum:
          - generated
          - pending_approval
          - approved
          - revoked
        signer_approval_url:
          type: string
        fid:
          $ref: '#/components/schemas/Fid'
      example:
        public_key: 0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef
        signer_approval_url: signer_approval_url
        fid: 0
        signer_uuid: 19d0c5fd-9b33-4a48-a0e2-bc7b0555baec
        status: generated
    DeveloperManagedSigner:
      required:
      - public_key
      - status
      type: object
      properties:
        public_key:
          $ref: '#/components/schemas/Ed25519PublicKey'
        status:
          type: string
          enum:
          - pending_approval
          - approved
          - revoked
        signer_approval_url:
          type: string
        fid:
          $ref: '#/components/schemas/Fid'
      example:
        public_key: 0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef
        signer_approval_url: signer_approval_url
        fid: 0
        status: pending_approval
    CastResponse:
      required:
      - cast
      type: object
      properties:
        cast:
          $ref: '#/components/schemas/CastWithInteractions'
      example:
        cast: ""
    DehydratedChannel:
      required:
      - id
      - name
      - object
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        object:
          type: string
          enum:
          - channel_dehydrated
        image_url:
          type: string
    Channel:
      required:
      - id
      - object
      - url
      type: object
      properties:
        id:
          type: string
        url:
          type: string
        name:
          type: string
        description:
          type: string
        object:
          type: string
          enum:
          - channel
        created_at:
          type: number
          description: Epoch timestamp in seconds.
        follower_count:
          type: number
          description: Number of followers the channel has.
        image_url:
          type: string
        parent_url:
          type: string
          format: uri
        lead:
          $ref: '#/components/schemas/User'
        moderator:
          $ref: '#/components/schemas/User'
        hosts:
          type: array
          items:
            $ref: '#/components/schemas/User'
        viewer_context:
          $ref: '#/components/schemas/ChannelViewerContext'
      example:
        image_url: image_url
        hosts:
        - null
        - null
        moderator: null
        description: description
        created_at: 0.8008281904610115
        follower_count: 6.027456183070403
        url: url
        lead:
          fid: 0
          profile:
            bio:
              mentioned_profiles:
              - mentioned_profiles
              - mentioned_profiles
              text: text
          power_badge: true
          display_name: display_name
          verifications:
          - null
          - null
          custody_address: custody_address
          follower_count: 6
          active_status: active
          verified_addresses:
            eth_addresses:
            - null
            - null
            sol_addresses:
            - sol_addresses
            - sol_addresses
          pfp_url: pfp_url
          following_count: 1
          viewer_context:
            followed_by: true
            following: true
          object: user
          username: username
        parent_url: http://example.com/aeiou
        viewer_context:
          following: true
        name: name
        id: id
        object: channel
    ChannelViewerContext:
      required:
      - following
      type: object
      properties:
        following:
          type: boolean
          description: Indicates if the viewer is following the channel.
      example:
        following: true
    ChannelListResponse:
      required:
      - channels
      type: object
      properties:
        channels:
          type: array
          items:
            $ref: '#/components/schemas/Channel'
        next:
          $ref: '#/components/schemas/NextCursor'
      example:
        next:
          cursor: cursor
        channels:
        - image_url: image_url
          hosts:
          - null
          - null
          moderator: null
          description: description
          created_at: 0.8008281904610115
          follower_count: 6.027456183070403
          url: url
          lead:
            fid: 0
            profile:
              bio:
                mentioned_profiles:
                - mentioned_profiles
                - mentioned_profiles
                text: text
            power_badge: true
            display_name: display_name
            verifications:
            - null
            - null
            custody_address: custody_address
            follower_count: 6
            active_status: active
            verified_addresses:
              eth_addresses:
              - null
              - null
              sol_addresses:
              - sol_addresses
              - sol_addresses
            pfp_url: pfp_url
            following_count: 1
            viewer_context:
              followed_by: true
              following: true
            object: user
            username: username
          parent_url: http://example.com/aeiou
          viewer_context:
            following: true
          name: name
          id: id
          object: channel
        - image_url: image_url
          hosts:
          - null
          - null
          moderator: null
          description: description
          created_at: 0.8008281904610115
          follower_count: 6.027456183070403
          url: url
          lead:
            fid: 0
            profile:
              bio:
                mentioned_profiles:
                - mentioned_profiles
                - mentioned_profiles
                text: text
            power_badge: true
            display_name: display_name
            verifications:
            - null
            - null
            custody_address: custody_address
            follower_count: 6
            active_status: active
            verified_addresses:
              eth_addresses:
              - null
              - null
              sol_addresses:
              - sol_addresses
              - sol_addresses
            pfp_url: pfp_url
            following_count: 1
            viewer_context:
              followed_by: true
              following: true
            object: user
            username: username
          parent_url: http://example.com/aeiou
          viewer_context:
            following: true
          name: name
          id: id
          object: channel
    ChannelSearchResponse:
      required:
      - channels
      - next
      type: object
      properties:
        channels:
          type: array
          items:
            $ref: '#/components/schemas/Channel'
        next:
          $ref: '#/components/schemas/NextCursor'
      example:
        next:
          cursor: cursor
        channels:
        - image_url: image_url
          hosts:
          - null
          - null
          moderator: null
          description: description
          created_at: 0.8008281904610115
          follower_count: 6.027456183070403
          url: url
          lead:
            fid: 0
            profile:
              bio:
                mentioned_profiles:
                - mentioned_profiles
                - mentioned_profiles
                text: text
            power_badge: true
            display_name: display_name
            verifications:
            - null
            - null
            custody_address: custody_address
            follower_count: 6
            active_status: active
            verified_addresses:
              eth_addresses:
              - null
              - null
              sol_addresses:
              - sol_addresses
              - sol_addresses
            pfp_url: pfp_url
            following_count: 1
            viewer_context:
              followed_by: true
              following: true
            object: user
            username: username
          parent_url: http://example.com/aeiou
          viewer_context:
            following: true
          name: name
          id: id
          object: channel
        - image_url: image_url
          hosts:
          - null
          - null
          moderator: null
          description: description
          created_at: 0.8008281904610115
          follower_count: 6.027456183070403
          url: url
          lead:
            fid: 0
            profile:
              bio:
                mentioned_profiles:
                - mentioned_profiles
                - mentioned_profiles
                text: text
            power_badge: true
            display_name: display_name
            verifications:
            - null
            - null
            custody_address: custody_address
            follower_count: 6
            active_status: active
            verified_addresses:
              eth_addresses:
              - null
              - null
              sol_addresses:
              - sol_addresses
              - sol_addresses
            pfp_url: pfp_url
            following_count: 1
            viewer_context:
              followed_by: true
              following: true
            object: user
            username: username
          parent_url: http://example.com/aeiou
          viewer_context:
            following: true
          name: name
          id: id
          object: channel
    ChannelResponse:
      required:
      - channel
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/Channel'
      example:
        channel:
          image_url: image_url
          hosts:
          - null
          - null
          moderator: null
          description: description
          created_at: 0.8008281904610115
          follower_count: 6.027456183070403
          url: url
          lead:
            fid: 0
            profile:
              bio:
                mentioned_profiles:
                - mentioned_profiles
                - mentioned_profiles
                text: text
            power_badge: true
            display_name: display_name
            verifications:
            - null
            - null
            custody_address: custody_address
            follower_count: 6
            active_status: active
            verified_addresses:
              eth_addresses:
              - null
              - null
              sol_addresses:
              - sol_addresses
              - sol_addresses
            pfp_url: pfp_url
            following_count: 1
            viewer_context:
              followed_by: true
              following: true
            object: user
            username: username
          parent_url: http://example.com/aeiou
          viewer_context:
            following: true
          name: name
          id: id
          object: channel
    ChannelResponseBulk:
      required:
      - channels
      type: object
      properties:
        channels:
          type: array
          items:
            $ref: '#/components/schemas/Channel'
      example:
        channels:
        - image_url: image_url
          hosts:
          - null
          - null
          moderator: null
          description: description
          created_at: 0.8008281904610115
          follower_count: 6.027456183070403
          url: url
          lead:
            fid: 0
            profile:
              bio:
                mentioned_profiles:
                - mentioned_profiles
                - mentioned_profiles
                text: text
            power_badge: true
            display_name: display_name
            verifications:
            - null
            - null
            custody_address: custody_address
            follower_count: 6
            active_status: active
            verified_addresses:
              eth_addresses:
              - null
              - null
              sol_addresses:
              - sol_addresses
              - sol_addresses
            pfp_url: pfp_url
            following_count: 1
            viewer_context:
              followed_by: true
              following: true
            object: user
            username: username
          parent_url: http://example.com/aeiou
          viewer_context:
            following: true
          name: name
          id: id
          object: channel
        - image_url: image_url
          hosts:
          - null
          - null
          moderator: null
          description: description
          created_at: 0.8008281904610115
          follower_count: 6.027456183070403
          url: url
          lead:
            fid: 0
            profile:
              bio:
                mentioned_profiles:
                - mentioned_profiles
                - mentioned_profiles
                text: text
            power_badge: true
            display_name: display_name
            verifications:
            - null
            - null
            custody_address: custody_address
            follower_count: 6
            active_status: active
            verified_addresses:
              eth_addresses:
              - null
              - null
              sol_addresses:
              - sol_addresses
              - sol_addresses
            pfp_url: pfp_url
            following_count: 1
            viewer_context:
              followed_by: true
              following: true
            object: user
            username: username
          parent_url: http://example.com/aeiou
          viewer_context:
            following: true
          name: name
          id: id
          object: channel
    UserSearchResponse:
      required:
      - result
      type: object
      properties:
        result:
          $ref: '#/components/schemas/UserSearchResponse_result'
      example:
        result:
          next:
            cursor: cursor
          users:
          - ""
          - ""
    ChannelActivity:
      required:
      - cast_count_1d
      - cast_count_30d
      - cast_count_7d
      - channel
      - object
      type: object
      properties:
        object:
          type: string
          enum:
          - channel_activity
        cast_count_1d:
          type: string
        cast_count_7d:
          type: string
        cast_count_30d:
          type: string
        channel:
          $ref: '#/components/schemas/Channel'
      example:
        cast_count_1d: cast_count_1d
        cast_count_30d: cast_count_30d
        channel:
          image_url: image_url
          hosts:
          - null
          - null
          moderator: null
          description: description
          created_at: 0.8008281904610115
          follower_count: 6.027456183070403
          url: url
          lead:
            fid: 0
            profile:
              bio:
                mentioned_profiles:
                - mentioned_profiles
                - mentioned_profiles
                text: text
            power_badge: true
            display_name: display_name
            verifications:
            - null
            - null
            custody_address: custody_address
            follower_count: 6
            active_status: active
            verified_addresses:
              eth_addresses:
              - null
              - null
              sol_addresses:
              - sol_addresses
              - sol_addresses
            pfp_url: pfp_url
            following_count: 1
            viewer_context:
              followed_by: true
              following: true
            object: user
            username: username
          parent_url: http://example.com/aeiou
          viewer_context:
            following: true
          name: name
          id: id
          object: channel
        cast_count_7d: cast_count_7d
        object: channel_activity
    TrendingChannelResponse:
      required:
      - channels
      - next
      type: object
      properties:
        channels:
          type: array
          items:
            $ref: '#/components/schemas/ChannelActivity'
        next:
          $ref: '#/components/schemas/NextCursor'
      example:
        next:
          cursor: cursor
        channels:
        - cast_count_1d: cast_count_1d
          cast_count_30d: cast_count_30d
          channel:
            image_url: image_url
            hosts:
            - null
            - null
            moderator: null
            description: description
            created_at: 0.8008281904610115
            follower_count: 6.027456183070403
            url: url
            lead:
              fid: 0
              profile:
                bio:
                  mentioned_profiles:
                  - mentioned_profiles
                  - mentioned_profiles
                  text: text
              power_badge: true
              display_name: display_name
              verifications:
              - null
              - null
              custody_address: custody_address
              follower_count: 6
              active_status: active
              verified_addresses:
                eth_addresses:
                - null
                - null
                sol_addresses:
                - sol_addresses
                - sol_addresses
              pfp_url: pfp_url
              following_count: 1
              viewer_context:
                followed_by: true
                following: true
              object: user
              username: username
            parent_url: http://example.com/aeiou
            viewer_context:
              following: true
            name: name
            id: id
            object: channel
          cast_count_7d: cast_count_7d
          object: channel_activity
        - cast_count_1d: cast_count_1d
          cast_count_30d: cast_count_30d
          channel:
            image_url: image_url
            hosts:
            - null
            - null
            moderator: null
            description: description
            created_at: 0.8008281904610115
            follower_count: 6.027456183070403
            url: url
            lead:
              fid: 0
              profile:
                bio:
                  mentioned_profiles:
                  - mentioned_profiles
                  - mentioned_profiles
                  text: text
              power_badge: true
              display_name: display_name
              verifications:
              - null
              - null
              custody_address: custody_address
              follower_count: 6
              active_status: active
              verified_addresses:
                eth_addresses:
                - null
                - null
                sol_addresses:
                - sol_addresses
                - sol_addresses
              pfp_url: pfp_url
              following_count: 1
              viewer_context:
                followed_by: true
                following: true
              object: user
              username: username
            parent_url: http://example.com/aeiou
            viewer_context:
              following: true
            name: name
            id: id
            object: channel
          cast_count_7d: cast_count_7d
          object: channel_activity
    BulkCastsResponse:
      required:
      - casts
      type: object
      properties:
        casts:
          type: array
          items:
            $ref: '#/components/schemas/CastWithInteractions'
      example:
        casts:
        - ""
        - ""
    CastsResponse:
      required:
      - result
      type: object
      properties:
        result:
          $ref: '#/components/schemas/CastsResponse_result'
      example:
        result:
          casts:
          - ""
          - ""
    CastsSearchResponse:
      required:
      - result
      type: object
      properties:
        result:
          $ref: '#/components/schemas/CastsSearchResponse_result'
      example:
        result:
          next:
            cursor: cursor
          casts:
          - ""
          - ""
    FeedResponse:
      required:
      - casts
      - next
      type: object
      properties:
        casts:
          type: array
          items:
            $ref: '#/components/schemas/CastWithInteractions'
        next:
          $ref: '#/components/schemas/NextCursor'
      example:
        next:
          cursor: cursor
        casts:
        - ""
        - ""
    PostCastResponse:
      required:
      - cast
      - success
      type: object
      properties:
        success:
          type: boolean
        cast:
          $ref: '#/components/schemas/PostCastResponse_cast'
      example:
        cast:
          author:
            fid: 0
          text: text
          hash: hash
        success: true
    OperationResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
      example:
        success: true
        message: message
    FollowResponse:
      required:
      - hash
      - success
      - target_fid
      type: object
      properties:
        success:
          type: boolean
        target_fid:
          $ref: '#/components/schemas/Fid'
        hash:
          type: string
      example:
        success: true
        target_fid: 0
        hash: hash
    BulkFollowResponse:
      required:
      - details
      - success
      type: object
      properties:
        success:
          type: boolean
        details:
          type: array
          items:
            $ref: '#/components/schemas/FollowResponse'
      example:
        success: true
        details:
        - success: true
          target_fid: 0
          hash: hash
        - success: true
          target_fid: 0
          hash: hash
    NotificationsResponse:
      required:
      - next
      - notifications
      - unseen_notifications_count
      type: object
      properties:
        unseen_notifications_count:
          type: integer
          format: int32
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
        next:
          $ref: '#/components/schemas/NextCursor'
      example:
        next:
          cursor: cursor
        unseen_notifications_count: 0
        notifications:
        - cast: ""
          most_recent_timestamp: 2000-01-23T04:56:07.000+00:00
          follows:
          - user:
              fid: 0
              profile:
                bio:
                  mentioned_profiles:
                  - mentioned_profiles
                  - mentioned_profiles
                  text: text
              power_badge: true
              display_name: display_name
              verifications:
              - null
              - null
              custody_address: custody_address
              follower_count: 6
              active_status: active
              verified_addresses:
                eth_addresses:
                - null
                - null
                sol_addresses:
                - sol_addresses
                - sol_addresses
              pfp_url: pfp_url
              following_count: 1
              viewer_context:
                followed_by: true
                following: true
              object: user
              username: username
            object: follow
          - user:
              fid: 0
              profile:
                bio:
                  mentioned_profiles:
                  - mentioned_profiles
                  - mentioned_profiles
                  text: text
              power_badge: true
              display_name: display_name
              verifications:
              - null
              - null
              custody_address: custody_address
              follower_count: 6
              active_status: active
              verified_addresses:
                eth_addresses:
                - null
                - null
                sol_addresses:
                - sol_addresses
                - sol_addresses
              pfp_url: pfp_url
              following_count: 1
              viewer_context:
                followed_by: true
                following: true
              object: user
              username: username
            object: follow
          reactions:
          - cast:
              hash: hash
              object: cast_dehydrated
            user: null
            object: likes
          - cast:
              hash: hash
              object: cast_dehydrated
            user: null
            object: likes
          type: follows
          seen: true
          object: object
        - cast: ""
          most_recent_timestamp: 2000-01-23T04:56:07.000+00:00
          follows:
          - user:
              fid: 0
              profile:
                bio:
                  mentioned_profiles:
                  - mentioned_profiles
                  - mentioned_profiles
                  text: text
              power_badge: true
              display_name: display_name
              verifications:
              - null
              - null
              custody_address: custody_address
              follower_count: 6
              active_status: active
              verified_addresses:
                eth_addresses:
                - null
                - null
                sol_addresses:
                - sol_addresses
                - sol_addresses
              pfp_url: pfp_url
              following_count: 1
              viewer_context:
                followed_by: true
                following: true
              object: user
              username: username
            object: follow
          - user:
              fid: 0
              profile:
                bio:
                  mentioned_profiles:
                  - mentioned_profiles
                  - mentioned_profiles
                  text: text
              power_badge: true
              display_name: display_name
              verifications:
              - null
              - null
              custody_address: custody_address
              follower_count: 6
              active_status: active
              verified_addresses:
                eth_addresses:
                - null
                - null
                sol_addresses:
                - sol_addresses
                - sol_addresses
              pfp_url: pfp_url
              following_count: 1
              viewer_context:
                followed_by: true
                following: true
              object: user
              username: username
            object: follow
          reactions:
          - cast:
              hash: hash
              object: cast_dehydrated
            user: null
            object: likes
          - cast:
              hash: hash
              object: cast_dehydrated
            user: null
            object: likes
          type: follows
          seen: true
          object: object
    Notification:
      required:
      - most_recent_timestamp
      - object
      - seen
      - type
      type: object
      properties:
        object:
          type: string
        most_recent_timestamp:
          type: string
          format: date-time
        type:
          type: string
          enum:
          - follows
          - recasts
          - likes
          - mention
          - reply
        seen:
          type: boolean
        follows:
          type: array
          items:
            $ref: '#/components/schemas/Follow'
        cast:
          $ref: '#/components/schemas/CastWithInteractions'
        reactions:
          type: array
          items:
            $ref: '#/components/schemas/ReactionWithUserInfo'
      example:
        cast: ""
        most_recent_timestamp: 2000-01-23T04:56:07.000+00:00
        follows:
        - user:
            fid: 0
            profile:
              bio:
                mentioned_profiles:
                - mentioned_profiles
                - mentioned_profiles
                text: text
            power_badge: true
            display_name: display_name
            verifications:
            - null
            - null
            custody_address: custody_address
            follower_count: 6
            active_status: active
            verified_addresses:
              eth_addresses:
              - null
              - null
              sol_addresses:
              - sol_addresses
              - sol_addresses
            pfp_url: pfp_url
            following_count: 1
            viewer_context:
              followed_by: true
              following: true
            object: user
            username: username
          object: follow
        - user:
            fid: 0
            profile:
              bio:
                mentioned_profiles:
                - mentioned_profiles
                - mentioned_profiles
                text: text
            power_badge: true
            display_name: display_name
            verifications:
            - null
            - null
            custody_address: custody_address
            follower_count: 6
            active_status: active
            verified_addresses:
              eth_addresses:
              - null
              - null
              sol_addresses:
              - sol_addresses
              - sol_addresses
            pfp_url: pfp_url
            following_count: 1
            viewer_context:
              followed_by: true
              following: true
            object: user
            username: username
          object: follow
        reactions:
        - cast:
            hash: hash
            object: cast_dehydrated
          user: null
          object: likes
        - cast:
            hash: hash
            object: cast_dehydrated
          user: null
          object: likes
        type: follows
        seen: true
        object: object
    Follow:
      required:
      - object
      - user
      type: object
      properties:
        object:
          type: string
          enum:
          - follow
        user:
          $ref: '#/components/schemas/User'
      example:
        user:
          fid: 0
          profile:
            bio:
              mentioned_profiles:
              - mentioned_profiles
              - mentioned_profiles
              text: text
          power_badge: true
          display_name: display_name
          verifications:
          - null
          - null
          custody_address: custody_address
          follower_count: 6
          active_status: active
          verified_addresses:
            eth_addresses:
            - null
            - null
            sol_addresses:
            - sol_addresses
            - sol_addresses
          pfp_url: pfp_url
          following_count: 1
          viewer_context:
            followed_by: true
            following: true
          object: user
          username: username
        object: follow
    CastDehydrated:
      required:
      - hash
      - object
      type: object
      properties:
        hash:
          type: string
        object:
          type: string
          enum:
          - cast_dehydrated
      example:
        hash: hash
        object: cast_dehydrated
    ReactionWithUserInfo:
      required:
      - cast
      - object
      - user
      type: object
      properties:
        object:
          type: string
          enum:
          - likes
          - recasts
        cast:
          $ref: '#/components/schemas/CastDehydrated'
        user:
          $ref: '#/components/schemas/User'
      example:
        cast:
          hash: hash
          object: cast_dehydrated
        user: null
        object: likes
    ReactionForCast:
      required:
      - object
      - reaction_timestamp
      - reaction_type
      - user
      type: object
      properties:
        reaction_type:
          type: string
          enum:
          - like
          - recast
        reaction_timestamp:
          type: string
          format: date-time
        object:
          type: string
          enum:
          - likes
          - recasts
        user:
          $ref: '#/components/schemas/User'
      example:
        reaction_type: like
        reaction_timestamp: 2000-01-23T04:56:07.000+00:00
        user:
          fid: 0
          profile:
            bio:
              mentioned_profiles:
              - mentioned_profiles
              - mentioned_profiles
              text: text
          power_badge: true
          display_name: display_name
          verifications:
          - null
          - null
          custody_address: custody_address
          follower_count: 6
          active_status: active
          verified_addresses:
            eth_addresses:
            - null
            - null
            sol_addresses:
            - sol_addresses
            - sol_addresses
          pfp_url: pfp_url
          following_count: 1
          viewer_context:
            followed_by: true
            following: true
          object: user
          username: username
        object: likes
    ReactionWithCastInfo:
      required:
      - cast
      - object
      - reaction_timestamp
      - reaction_type
      - user
      type: object
      properties:
        reaction_type:
          type: string
          enum:
          - like
          - recast
        cast:
          $ref: '#/components/schemas/CastWithInteractions'
        reaction_timestamp:
          type: string
          format: date-time
        object:
          type: string
          enum:
          - likes
          - recasts
        user:
          $ref: '#/components/schemas/UserDehydrated'
      example:
        cast: ""
        reaction_type: like
        reaction_timestamp: 2000-01-23T04:56:07.000+00:00
        user:
          fid: 0
          object: user_dehydrated
        object: likes
    RelevantFollowersResponse:
      required:
      - all_relevant_followers_dehydrated
      - top_relevant_followers_hydrated
      type: object
      properties:
        top_relevant_followers_hydrated:
          type: array
          items:
            $ref: '#/components/schemas/HydratedFollower'
        all_relevant_followers_dehydrated:
          type: array
          items:
            $ref: '#/components/schemas/DehydratedFollower'
      example:
        top_relevant_followers_hydrated:
        - user:
            fid: 0
            profile:
              bio:
                mentioned_profiles:
                - mentioned_profiles
                - mentioned_profiles
                text: text
            power_badge: true
            display_name: display_name
            verifications:
            - null
            - null
            custody_address: custody_address
            follower_count: 6
            active_status: active
            verified_addresses:
              eth_addresses:
              - null
              - null
              sol_addresses:
              - sol_addresses
              - sol_addresses
            pfp_url: pfp_url
            following_count: 1
            viewer_context:
              followed_by: true
              following: true
            object: user
            username: username
          object: follow
        - user:
            fid: 0
            profile:
              bio:
                mentioned_profiles:
                - mentioned_profiles
                - mentioned_profiles
                text: text
            power_badge: true
            display_name: display_name
            verifications:
            - null
            - null
            custody_address: custody_address
            follower_count: 6
            active_status: active
            verified_addresses:
              eth_addresses:
              - null
              - null
              sol_addresses:
              - sol_addresses
              - sol_addresses
            pfp_url: pfp_url
            following_count: 1
            viewer_context:
              followed_by: true
              following: true
            object: user
            username: username
          object: follow
        all_relevant_followers_dehydrated:
        - user:
            fid: 0
            object: user_dehydrated
          object: follow
        - user:
            fid: 0
            object: user_dehydrated
          object: follow
    HydratedFollower:
      type: object
      properties:
        object:
          type: string
          enum:
          - follow
        user:
          $ref: '#/components/schemas/User'
      example:
        user:
          fid: 0
          profile:
            bio:
              mentioned_profiles:
              - mentioned_profiles
              - mentioned_profiles
              text: text
          power_badge: true
          display_name: display_name
          verifications:
          - null
          - null
          custody_address: custody_address
          follower_count: 6
          active_status: active
          verified_addresses:
            eth_addresses:
            - null
            - null
            sol_addresses:
            - sol_addresses
            - sol_addresses
          pfp_url: pfp_url
          following_count: 1
          viewer_context:
            followed_by: true
            following: true
          object: user
          username: username
        object: follow
    DehydratedFollower:
      type: object
      properties:
        object:
          type: string
          enum:
          - follow
        user:
          $ref: '#/components/schemas/UserDehydrated'
      example:
        user:
          fid: 0
          object: user_dehydrated
        object: follow
    UserDehydrated:
      required:
      - fid
      - object
      type: object
      properties:
        object:
          type: string
          enum:
          - user_dehydrated
        fid:
          $ref: '#/components/schemas/Fid'
      example:
        fid: 0
        object: user_dehydrated
    UserResponse:
      required:
      - user
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
      example:
        user:
          fid: 0
          profile:
            bio:
              mentioned_profiles:
              - mentioned_profiles
              - mentioned_profiles
              text: text
          power_badge: true
          display_name: display_name
          verifications:
          - null
          - null
          custody_address: custody_address
          follower_count: 6
          active_status: active
          verified_addresses:
            eth_addresses:
            - null
            - null
            sol_addresses:
            - sol_addresses
            - sol_addresses
          pfp_url: pfp_url
          following_count: 1
          viewer_context:
            followed_by: true
            following: true
          object: user
          username: username
    ReactionsResponse:
      required:
      - next
      - reactions
      type: object
      properties:
        reactions:
          type: array
          items:
            $ref: '#/components/schemas/ReactionWithCastInfo'
        next:
          $ref: '#/components/schemas/NextCursor'
      example:
        next:
          cursor: cursor
        reactions:
        - cast: ""
          reaction_type: like
          reaction_timestamp: 2000-01-23T04:56:07.000+00:00
          user:
            fid: 0
            object: user_dehydrated
          object: likes
        - cast: ""
          reaction_type: like
          reaction_timestamp: 2000-01-23T04:56:07.000+00:00
          user:
            fid: 0
            object: user_dehydrated
          object: likes
    ReactionsCastResponse:
      required:
      - next
      - reactions
      type: object
      properties:
        reactions:
          type: array
          items:
            $ref: '#/components/schemas/ReactionForCast'
        next:
          $ref: '#/components/schemas/NextCursor'
      example:
        next:
          cursor: cursor
        reactions:
        - reaction_type: like
          reaction_timestamp: 2000-01-23T04:56:07.000+00:00
          user:
            fid: 0
            profile:
              bio:
                mentioned_profiles:
                - mentioned_profiles
                - mentioned_profiles
                text: text
            power_badge: true
            display_name: display_name
            verifications:
            - null
            - null
            custody_address: custody_address
            follower_count: 6
            active_status: active
            verified_addresses:
              eth_addresses:
              - null
              - null
              sol_addresses:
              - sol_addresses
              - sol_addresses
            pfp_url: pfp_url
            following_count: 1
            viewer_context:
              followed_by: true
              following: true
            object: user
            username: username
          object: likes
        - reaction_type: like
          reaction_timestamp: 2000-01-23T04:56:07.000+00:00
          user:
            fid: 0
            profile:
              bio:
                mentioned_profiles:
                - mentioned_profiles
                - mentioned_profiles
                text: text
            power_badge: true
            display_name: display_name
            verifications:
            - null
            - null
            custody_address: custody_address
            follower_count: 6
            active_status: active
            verified_addresses:
              eth_addresses:
              - null
              - null
              sol_addresses:
              - sol_addresses
              - sol_addresses
            pfp_url: pfp_url
            following_count: 1
            viewer_context:
              followed_by: true
              following: true
            object: user
            username: username
          object: likes
    StorageAllocationsResponse:
      type: object
      properties:
        total_active_units:
          type: integer
          example: 13
        allocations:
          type: array
          items:
            $ref: '#/components/schemas/StorageAllocation'
      example:
        allocations:
        - units: 10
          expiry: 2024-10-08T22:03:49Z
          user:
            fid: 0
            object: user_dehydrated
          object: storage_allocation
          timestamp: 2023-10-09T22:03:49Z
        - units: 10
          expiry: 2024-10-08T22:03:49Z
          user:
            fid: 0
            object: user_dehydrated
          object: storage_allocation
          timestamp: 2023-10-09T22:03:49Z
        total_active_units: 13
    StorageAllocation:
      type: object
      properties:
        object:
          type: string
          example: storage_allocation
        user:
          $ref: '#/components/schemas/UserDehydrated'
        units:
          type: integer
          example: 10
        expiry:
          type: string
          format: date-time
          example: 2024-10-08T22:03:49Z
        timestamp:
          type: string
          format: date-time
          example: 2023-10-09T22:03:49Z
      example:
        units: 10
        expiry: 2024-10-08T22:03:49Z
        user:
          fid: 0
          object: user_dehydrated
        object: storage_allocation
        timestamp: 2023-10-09T22:03:49Z
    StorageUsageResponse:
      type: object
      properties:
        object:
          type: string
          example: storage_usage
        user:
          $ref: '#/components/schemas/UserDehydrated'
        casts:
          $ref: '#/components/schemas/StorageObject'
        reactions:
          $ref: '#/components/schemas/StorageObject'
        links:
          $ref: '#/components/schemas/StorageObject'
        verified_addresses:
          $ref: '#/components/schemas/StorageObject'
        username_proofs:
          $ref: '#/components/schemas/StorageObject'
        signers:
          $ref: '#/components/schemas/StorageObject'
        total_active_units:
          type: integer
          example: 2
      example:
        signers: null
        casts:
          used: 3659
          object: storage
          capacity: 10000
        verified_addresses: null
        total_active_units: 2
        reactions: null
        links: null
        username_proofs: null
        user:
          fid: 0
          object: user_dehydrated
        object: storage_usage
    StorageObject:
      type: object
      properties:
        object:
          type: string
          example: storage
        used:
          type: integer
          example: 3659
        capacity:
          type: integer
          example: 10000
      example:
        used: 3659
        object: storage
        capacity: 10000
    BulkUsersResponse:
      required:
      - users
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
      example:
        users:
        - fid: 0
          profile:
            bio:
              mentioned_profiles:
              - mentioned_profiles
              - mentioned_profiles
              text: text
          power_badge: true
          display_name: display_name
          verifications:
          - null
          - null
          custody_address: custody_address
          follower_count: 6
          active_status: active
          verified_addresses:
            eth_addresses:
            - null
            - null
            sol_addresses:
            - sol_addresses
            - sol_addresses
          pfp_url: pfp_url
          following_count: 1
          viewer_context:
            followed_by: true
            following: true
          object: user
          username: username
        - fid: 0
          profile:
            bio:
              mentioned_profiles:
              - mentioned_profiles
              - mentioned_profiles
              text: text
          power_badge: true
          display_name: display_name
          verifications:
          - null
          - null
          custody_address: custody_address
          follower_count: 6
          active_status: active
          verified_addresses:
            eth_addresses:
            - null
            - null
            sol_addresses:
            - sol_addresses
            - sol_addresses
          pfp_url: pfp_url
          following_count: 1
          viewer_context:
            followed_by: true
            following: true
          object: user
          username: username
    UsersResponse:
      required:
      - next
      - users
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
        next:
          $ref: '#/components/schemas/NextCursor'
      example:
        next:
          cursor: cursor
        users:
        - fid: 0
          profile:
            bio:
              mentioned_profiles:
              - mentioned_profiles
              - mentioned_profiles
              text: text
          power_badge: true
          display_name: display_name
          verifications:
          - null
          - null
          custody_address: custody_address
          follower_count: 6
          active_status: active
          verified_addresses:
            eth_addresses:
            - null
            - null
            sol_addresses:
            - sol_addresses
            - sol_addresses
          pfp_url: pfp_url
          following_count: 1
          viewer_context:
            followed_by: true
            following: true
          object: user
          username: username
        - fid: 0
          profile:
            bio:
              mentioned_profiles:
              - mentioned_profiles
              - mentioned_profiles
              text: text
          power_badge: true
          display_name: display_name
          verifications:
          - null
          - null
          custody_address: custody_address
          follower_count: 6
          active_status: active
          verified_addresses:
            eth_addresses:
            - null
            - null
            sol_addresses:
            - sol_addresses
            - sol_addresses
          pfp_url: pfp_url
          following_count: 1
          viewer_context:
            followed_by: true
            following: true
          object: user
          username: username
    BulkUsersByAddressResponse:
      type: object
      additionalProperties:
        type: array
        items:
          $ref: '#/components/schemas/User'
      x-schema-name: BulkUsersByAddressResponse
    FeedType:
      type: string
      enum:
      - following
      - filter
    FilterType:
      type: string
      description: The type of filter to apply to the feed.
      enum:
      - fids
      - parent_url
      - channel_id
      - embed_url
      - embed_types
      - global_trending
    EmbedType:
      type: string
      description: The content type of the embedded file
      enum:
      - text
      - image
      - video
      - audio
      - text/html
      - text/plain
      - image/jpeg
      - image/png
      - image/gif
      - image/webp
      - image/svg+xml
      - image/heif
      - video/mp4
      - video/quicktime
      - audio/mpeg
      - application/pdf
      - application/json
      - application/x-mpegurl
    FnameAvailabilityResponse:
      required:
      - available
      type: object
      properties:
        available:
          type: boolean
      example:
        available: true
    NeynarFrame:
      required:
      - link
      - name
      - pages
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Unique identifier for the frame.
          format: uuid
        name:
          type: string
          description: Name of the frame.
        link:
          type: string
          description: Generated link for the frame's first page.
          format: uri
        pages:
          type: array
          items:
            $ref: '#/components/schemas/NeynarFramePage'
        valid:
          type: boolean
          description: Indicates if the frame is valid.
      example:
        valid: true
        pages:
        - image:
            aspect_ratio: 1.91:1
            url: https://i.imgur.com/qo2AzBf.jpeg
          input:
            text:
              placeholder: placeholder
              enabled: false
          buttons:
          - next_page: ""
            action_type: post
            index: 0
            title: title
          - next_page: ""
            action_type: post
            index: 0
            title: title
          title: Welcome to Neynar
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          version: vNext
        - image:
            aspect_ratio: 1.91:1
            url: https://i.imgur.com/qo2AzBf.jpeg
          input:
            text:
              placeholder: placeholder
              enabled: false
          buttons:
          - next_page: ""
            action_type: post
            index: 0
            title: title
          - next_page: ""
            action_type: post
            index: 0
            title: title
          title: Welcome to Neynar
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          version: vNext
        name: name
        link: http://example.com/aeiou
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    NeynarFramePage:
      required:
      - image
      - title
      - uuid
      - version
      type: object
      properties:
        uuid:
          type: string
          description: Unique identifier for the page.
          format: uuid
        version:
          type: string
          description: The version of the page schema.
          example: vNext
          default: vNext
        title:
          type: string
          description: The title of the page.
          example: Welcome to Neynar
        image:
          $ref: '#/components/schemas/NeynarPageImage'
        buttons:
          type: array
          items:
            $ref: '#/components/schemas/NeynarPageButton'
        input:
          $ref: '#/components/schemas/NeynarPageInput'
      example:
        image:
          aspect_ratio: 1.91:1
          url: https://i.imgur.com/qo2AzBf.jpeg
        input:
          text:
            placeholder: placeholder
            enabled: false
        buttons:
        - next_page: ""
          action_type: post
          index: 0
          title: title
        - next_page: ""
          action_type: post
          index: 0
          title: title
        title: Welcome to Neynar
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        version: vNext
    NeynarPageImage:
      required:
      - aspect_ratio
      - url
      type: object
      properties:
        url:
          type: string
          description: The URL of the page's image.
          format: uri
          example: https://i.imgur.com/qo2AzBf.jpeg
        aspect_ratio:
          type: string
          description: The aspect ratio of the image.
          enum:
          - 1.91:1
          - 1:1
      example:
        aspect_ratio: 1.91:1
        url: https://i.imgur.com/qo2AzBf.jpeg
    NeynarPageButton:
      required:
      - action_type
      - index
      - title
      type: object
      properties:
        title:
          type: string
          description: The title of the button.
        index:
          type: integer
          description: "The index of the button, first button should have index 1\
            \ and so on."
        action_type:
          type: string
          description: The type of action that the button performs.
          enum:
          - post
          - post_redirect
          - mint
          - link
        next_page:
          oneOf:
          - $ref: '#/components/schemas/NeynarNextFramePage'
          - $ref: '#/components/schemas/NeynarNextFramePageRedirect'
          - $ref: '#/components/schemas/NeynarNextFramePageMintUrl'
      example:
        next_page: ""
        action_type: post
        index: 0
        title: title
    NeynarPageInput:
      type: object
      properties:
        text:
          $ref: '#/components/schemas/NeynarPageInput_text'
      example:
        text:
          placeholder: placeholder
          enabled: false
    NeynarNextFramePage:
      required:
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: The UUID of the next page.
          format: uuid
    NeynarNextFramePageRedirect:
      required:
      - redirect_url
      type: object
      properties:
        redirect_url:
          type: string
          description: The URL to redirect to.
          format: uri
    NeynarNextFramePageMintUrl:
      required:
      - mint_url
      type: object
      properties:
        mint_url:
          type: string
          description: "The URL for minting, specific to the mint action."
    NeynarFrameCreationRequest:
      required:
      - name
      - pages
      type: object
      properties:
        name:
          type: string
          description: The name of the frame.
        pages:
          type: array
          items:
            $ref: '#/components/schemas/NeynarFramePage'
    NeynarFrameUpdateRequest:
      required:
      - pages
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: The UUID of the frame to update.
          format: uuid
        name:
          type: string
          description: The name of the frame.
        pages:
          type: array
          items:
            $ref: '#/components/schemas/NeynarFramePage'
    ValidatedFrameAction:
      required:
      - cast
      - interactor
      - object
      - state
      - tapped_button
      - timestamp
      - url
      type: object
      properties:
        object:
          type: string
          enum:
          - validated_frame_action
        url:
          type: string
          format: uri
        interactor:
          $ref: '#/components/schemas/User'
        tapped_button:
          $ref: '#/components/schemas/ValidatedFrameAction_tapped_button'
        input:
          $ref: '#/components/schemas/FrameInput'
        state:
          $ref: '#/components/schemas/FrameState'
        cast:
          $ref: '#/components/schemas/CastWithInteractions'
        timestamp:
          $ref: '#/components/schemas/Timestamp'
        signer:
          $ref: '#/components/schemas/ValidatedFrameAction_signer'
        transaction:
          $ref: '#/components/schemas/FrameTransaction'
        address:
          $ref: '#/components/schemas/FrameAddress'
      example:
        tapped_button:
          index: 0
        input:
          text: Draw a purple ringed planet
        cast: ""
        address: address
        interactor:
          fid: 0
          profile:
            bio:
              mentioned_profiles:
              - mentioned_profiles
              - mentioned_profiles
              text: text
          power_badge: true
          display_name: display_name
          verifications:
          - null
          - null
          custody_address: custody_address
          follower_count: 6
          active_status: active
          verified_addresses:
            eth_addresses:
            - null
            - null
            sol_addresses:
            - sol_addresses
            - sol_addresses
          pfp_url: pfp_url
          following_count: 1
          viewer_context:
            followed_by: true
            following: true
          object: user
          username: username
        state:
          serialized: '%7B%22counter%22%3A1%7D'
        url: http://example.com/aeiou
        transaction:
          hash: 0xa80de157a3ab4648db1ecfab7e6355b342215bc549f6e37be9e6da527cc024f7
        object: validated_frame_action
        timestamp: 2000-01-23T04:56:07.000+00:00
        signer:
          client: null
    ValidateFrameActionResponse:
      required:
      - action
      - valid
      type: object
      properties:
        valid:
          type: boolean
          example: true
        action:
          $ref: '#/components/schemas/ValidatedFrameAction'
      example:
        valid: true
        action:
          tapped_button:
            index: 0
          input:
            text: Draw a purple ringed planet
          cast: ""
          address: address
          interactor:
            fid: 0
            profile:
              bio:
                mentioned_profiles:
                - mentioned_profiles
                - mentioned_profiles
                text: text
            power_badge: true
            display_name: display_name
            verifications:
            - null
            - null
            custody_address: custody_address
            follower_count: 6
            active_status: active
            verified_addresses:
              eth_addresses:
              - null
              - null
              sol_addresses:
              - sol_addresses
              - sol_addresses
            pfp_url: pfp_url
            following_count: 1
            viewer_context:
              followed_by: true
              following: true
            object: user
            username: username
          state:
            serialized: '%7B%22counter%22%3A1%7D'
          url: http://example.com/aeiou
          transaction:
            hash: 0xa80de157a3ab4648db1ecfab7e6355b342215bc549f6e37be9e6da527cc024f7
          object: validated_frame_action
          timestamp: 2000-01-23T04:56:07.000+00:00
          signer:
            client: null
    UserFIDResponse:
      required:
      - fid
      type: object
      properties:
        fid:
          type: integer
      example:
        fid: 0
    RegisterUserReqBody:
      required:
      - deadline
      - fid
      - requested_user_custody_address
      - signature
      type: object
      properties:
        signature:
          type: string
        fid:
          type: number
        requested_user_custody_address:
          type: string
        deadline:
          type: number
        fname:
          type: string
    RegisterUserResponse:
      required:
      - message
      - signer
      - success
      type: object
      properties:
        success:
          type: boolean
          enum:
          - true
        message:
          type: string
        signer:
          $ref: '#/components/schemas/Signer'
      example:
        success: true
        message: message
        signer:
          public_key: 0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef
          signer_approval_url: signer_approval_url
          fid: 0
          signer_uuid: 19d0c5fd-9b33-4a48-a0e2-bc7b0555baec
          status: generated
    MuteList:
      required:
      - muted
      - muted_at
      - object
      - timestamp
      type: object
      properties:
        object:
          type: string
          enum:
          - mute
        muted:
          $ref: '#/components/schemas/User'
        muted_at:
          $ref: '#/components/schemas/Timestamp'
      example:
        muted:
          fid: 0
          profile:
            bio:
              mentioned_profiles:
              - mentioned_profiles
              - mentioned_profiles
              text: text
          power_badge: true
          display_name: display_name
          verifications:
          - null
          - null
          custody_address: custody_address
          follower_count: 6
          active_status: active
          verified_addresses:
            eth_addresses:
            - null
            - null
            sol_addresses:
            - sol_addresses
            - sol_addresses
          pfp_url: pfp_url
          following_count: 1
          viewer_context:
            followed_by: true
            following: true
          object: user
          username: username
        muted_at: 2000-01-23T04:56:07.000+00:00
        object: mute
    MuteListResponse:
      required:
      - mutes
      - next
      type: object
      properties:
        mutes:
          type: array
          items:
            $ref: '#/components/schemas/MuteList'
        next:
          $ref: '#/components/schemas/NextCursor'
      example:
        next:
          cursor: cursor
        mutes:
        - muted:
            fid: 0
            profile:
              bio:
                mentioned_profiles:
                - mentioned_profiles
                - mentioned_profiles
                text: text
            power_badge: true
            display_name: display_name
            verifications:
            - null
            - null
            custody_address: custody_address
            follower_count: 6
            active_status: active
            verified_addresses:
              eth_addresses:
              - null
              - null
              sol_addresses:
              - sol_addresses
              - sol_addresses
            pfp_url: pfp_url
            following_count: 1
            viewer_context:
              followed_by: true
              following: true
            object: user
            username: username
          muted_at: 2000-01-23T04:56:07.000+00:00
          object: mute
        - muted:
            fid: 0
            profile:
              bio:
                mentioned_profiles:
                - mentioned_profiles
                - mentioned_profiles
                text: text
            power_badge: true
            display_name: display_name
            verifications:
            - null
            - null
            custody_address: custody_address
            follower_count: 6
            active_status: active
            verified_addresses:
              eth_addresses:
              - null
              - null
              sol_addresses:
              - sol_addresses
              - sol_addresses
            pfp_url: pfp_url
            following_count: 1
            viewer_context:
              followed_by: true
              following: true
            object: user
            username: username
          muted_at: 2000-01-23T04:56:07.000+00:00
          object: mute
    MuteResponse:
      required:
      - success
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
      example:
        success: true
        message: message
    UsersActiveChannelsResponse:
      type: object
      properties:
        channels:
          type: array
          items:
            $ref: '#/components/schemas/Channel'
        next:
          $ref: '#/components/schemas/NextCursor'
      example:
        next:
          cursor: cursor
        channels:
        - image_url: image_url
          hosts:
          - null
          - null
          moderator: null
          description: description
          created_at: 0.8008281904610115
          follower_count: 6.027456183070403
          url: url
          lead:
            fid: 0
            profile:
              bio:
                mentioned_profiles:
                - mentioned_profiles
                - mentioned_profiles
                text: text
            power_badge: true
            display_name: display_name
            verifications:
            - null
            - null
            custody_address: custody_address
            follower_count: 6
            active_status: active
            verified_addresses:
              eth_addresses:
              - null
              - null
              sol_addresses:
              - sol_addresses
              - sol_addresses
            pfp_url: pfp_url
            following_count: 1
            viewer_context:
              followed_by: true
              following: true
            object: user
            username: username
          parent_url: http://example.com/aeiou
          viewer_context:
            following: true
          name: name
          id: id
          object: channel
        - image_url: image_url
          hosts:
          - null
          - null
          moderator: null
          description: description
          created_at: 0.8008281904610115
          follower_count: 6.027456183070403
          url: url
          lead:
            fid: 0
            profile:
              bio:
                mentioned_profiles:
                - mentioned_profiles
                - mentioned_profiles
                text: text
            power_badge: true
            display_name: display_name
            verifications:
            - null
            - null
            custody_address: custody_address
            follower_count: 6
            active_status: active
            verified_addresses:
              eth_addresses:
              - null
              - null
              sol_addresses:
              - sol_addresses
              - sol_addresses
            pfp_url: pfp_url
            following_count: 1
            viewer_context:
              followed_by: true
              following: true
            object: user
            username: username
          parent_url: http://example.com/aeiou
          viewer_context:
            following: true
          name: name
          id: id
          object: channel
    VerificationType:
      type: integer
      description: "Type of verification. 0 = EOA, 1 = contract"
      format: int32
      enum:
      - 0
      - 1
      default: 0
    VerificationChainId:
      type: integer
      description: "Chain ID for farcaster verifications. 0 for EOA verifications,\
        \ 1 or 10 for contract verifications"
      format: int32
      enum:
      - 0
      - 1
      - 10
      default: 0
    DeleteFrameResponse:
      type: object
      properties:
        success:
          type: boolean
        uuid:
          type: string
          format: uuid
      example:
        success: true
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    Webhook:
      required:
      - active
      - created_at
      - deleted_at
      - description
      - developer_uuid
      - http_timeout
      - object
      - rate_limit
      - rate_limit_duration
      - secrets
      - target_url
      - title
      - updated_at
      - webhook_id
      type: object
      properties:
        object:
          type: string
          enum:
          - webhook
        webhook_id:
          type: string
        developer_uuid:
          type: string
        target_url:
          type: string
        title:
          type: string
        secrets:
          type: array
          items:
            $ref: '#/components/schemas/WebhookSecret'
        description:
          type: string
        http_timeout:
          type: string
        rate_limit:
          type: integer
        active:
          type: boolean
        rate_limit_duration:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
        subscription:
          $ref: '#/components/schemas/WebhookSubscription'
      example:
        rate_limit: 0
        target_url: target_url
        http_timeout: http_timeout
        description: description
        active: true
        created_at: 2000-01-23T04:56:07.000+00:00
        subscription:
          subscription_id: subscription_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          filters:
            user.created: {}
            reaction.deleted: null
            user.updated:
              fids:
              - 2
              - 2
            cast.created:
              exclude_author_fids:
              - 6
              - 6
              parent_author_fids:
              - 5
              - 5
              parent_hashes:
              - parent_hashes
              - parent_hashes
              parent_urls:
              - parent_urls
              - parent_urls
              text: (?i)\$degen
              author_fids:
              - 1
              - 1
              root_parent_urls:
              - root_parent_urls
              - root_parent_urls
              embeds: \b(farcaster|neynar)\b
              mentioned_fids:
              - 5
              - 5
            reaction.created:
              target_fids:
              - 2
              - 2
              fids:
              - 3
              - 3
            follow.created:
              target_fids:
              - 9
              - 9
              fids:
              - 7
              - 7
            follow.deleted: null
          object: webhook_subscription
        title: title
        secrets:
        - uid: uid
          expires_at: expires_at
          updated_at: updated_at
          created_at: created_at
          value: value
          deleted_at: deleted_at
        - uid: uid
          expires_at: expires_at
          updated_at: updated_at
          created_at: created_at
          value: value
          deleted_at: deleted_at
        deleted_at: 2000-01-23T04:56:07.000+00:00
        rate_limit_duration: rate_limit_duration
        updated_at: 2000-01-23T04:56:07.000+00:00
        webhook_id: webhook_id
        developer_uuid: developer_uuid
        object: webhook
    WebhookSecret:
      required:
      - created_at
      - deleted_at
      - expires_at
      - uid
      - updated_at
      - value
      type: object
      properties:
        uid:
          type: string
        value:
          type: string
        expires_at:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        deleted_at:
          type: string
      example:
        uid: uid
        expires_at: expires_at
        updated_at: updated_at
        created_at: created_at
        value: value
        deleted_at: deleted_at
    WebhookSubscription:
      required:
      - created_at
      - filters
      - object
      - subscription_id
      - updated_at
      type: object
      properties:
        object:
          type: string
          enum:
          - webhook_subscription
        subscription_id:
          type: string
        filters:
          $ref: '#/components/schemas/WebhookSubscriptionFilters'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        subscription_id: subscription_id
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        filters:
          user.created: {}
          reaction.deleted: null
          user.updated:
            fids:
            - 2
            - 2
          cast.created:
            exclude_author_fids:
            - 6
            - 6
            parent_author_fids:
            - 5
            - 5
            parent_hashes:
            - parent_hashes
            - parent_hashes
            parent_urls:
            - parent_urls
            - parent_urls
            text: (?i)\$degen
            author_fids:
            - 1
            - 1
            root_parent_urls:
            - root_parent_urls
            - root_parent_urls
            embeds: \b(farcaster|neynar)\b
            mentioned_fids:
            - 5
            - 5
          reaction.created:
            target_fids:
            - 2
            - 2
            fids:
            - 3
            - 3
          follow.created:
            target_fids:
            - 9
            - 9
            fids:
            - 7
            - 7
          follow.deleted: null
        object: webhook_subscription
    WebhookSubscriptionFiltersFollow:
      type: object
      properties:
        fids:
          type: array
          items:
            type: integer
        target_fids:
          type: array
          items:
            type: integer
      example:
        target_fids:
        - 9
        - 9
        fids:
        - 7
        - 7
    WebhookSubscriptionFiltersReaction:
      type: object
      properties:
        fids:
          type: array
          items:
            type: integer
        target_fids:
          type: array
          items:
            type: integer
      example:
        target_fids:
        - 2
        - 2
        fids:
        - 3
        - 3
    WebhookSubscriptionFilters:
      type: object
      properties:
        cast.created:
          $ref: '#/components/schemas/WebhookSubscriptionFilters_cast.created'
        user.created:
          type: object
        user.updated:
          $ref: '#/components/schemas/WebhookSubscriptionFilters_user.updated'
        follow.created:
          $ref: '#/components/schemas/WebhookSubscriptionFiltersFollow'
        follow.deleted:
          $ref: '#/components/schemas/WebhookSubscriptionFiltersFollow'
        reaction.created:
          $ref: '#/components/schemas/WebhookSubscriptionFiltersReaction'
        reaction.deleted:
          $ref: '#/components/schemas/WebhookSubscriptionFiltersReaction'
      example:
        user.created: {}
        reaction.deleted: null
        user.updated:
          fids:
          - 2
          - 2
        cast.created:
          exclude_author_fids:
          - 6
          - 6
          parent_author_fids:
          - 5
          - 5
          parent_hashes:
          - parent_hashes
          - parent_hashes
          parent_urls:
          - parent_urls
          - parent_urls
          text: (?i)\$degen
          author_fids:
          - 1
          - 1
          root_parent_urls:
          - root_parent_urls
          - root_parent_urls
          embeds: \b(farcaster|neynar)\b
          mentioned_fids:
          - 5
          - 5
        reaction.created:
          target_fids:
          - 2
          - 2
          fids:
          - 3
          - 3
        follow.created:
          target_fids:
          - 9
          - 9
          fids:
          - 7
          - 7
        follow.deleted: null
    WebhookPostReqBody:
      required:
      - name
      - url
      type: object
      properties:
        name:
          type: string
        url:
          type: string
        subscription:
          $ref: '#/components/schemas/WebhookSubscriptionFilters'
    WebhookPutReqBody:
      type: object
      allOf:
      - $ref: '#/components/schemas/WebhookPostReqBody'
      - required:
        - webhook_id
        properties:
          webhook_id:
            type: string
    WebhookPatchReqBody:
      required:
      - active
      - webhook_id
      type: object
      properties:
        webhook_id:
          type: string
        active:
          type: string
          enum:
          - "true"
          - "false"
    WebhookDeleteReqBody:
      required:
      - webhook_id
      type: object
      properties:
        webhook_id:
          type: string
    WebhookResponse:
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean
        webhook:
          $ref: '#/components/schemas/Webhook'
      example:
        webhook:
          rate_limit: 0
          target_url: target_url
          http_timeout: http_timeout
          description: description
          active: true
          created_at: 2000-01-23T04:56:07.000+00:00
          subscription:
            subscription_id: subscription_id
            updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            filters:
              user.created: {}
              reaction.deleted: null
              user.updated:
                fids:
                - 2
                - 2
              cast.created:
                exclude_author_fids:
                - 6
                - 6
                parent_author_fids:
                - 5
                - 5
                parent_hashes:
                - parent_hashes
                - parent_hashes
                parent_urls:
                - parent_urls
                - parent_urls
                text: (?i)\$degen
                author_fids:
                - 1
                - 1
                root_parent_urls:
                - root_parent_urls
                - root_parent_urls
                embeds: \b(farcaster|neynar)\b
                mentioned_fids:
                - 5
                - 5
              reaction.created:
                target_fids:
                - 2
                - 2
                fids:
                - 3
                - 3
              follow.created:
                target_fids:
                - 9
                - 9
                fids:
                - 7
                - 7
              follow.deleted: null
            object: webhook_subscription
          title: title
          secrets:
          - uid: uid
            expires_at: expires_at
            updated_at: updated_at
            created_at: created_at
            value: value
            deleted_at: deleted_at
          - uid: uid
            expires_at: expires_at
            updated_at: updated_at
            created_at: created_at
            value: value
            deleted_at: deleted_at
          deleted_at: 2000-01-23T04:56:07.000+00:00
          rate_limit_duration: rate_limit_duration
          updated_at: 2000-01-23T04:56:07.000+00:00
          webhook_id: webhook_id
          developer_uuid: developer_uuid
          object: webhook
        success: true
        message: message
    WebhookListResponse:
      required:
      - webhooks
      type: object
      properties:
        webhooks:
          type: array
          items:
            $ref: '#/components/schemas/Webhook'
      example:
        webhooks:
        - rate_limit: 0
          target_url: target_url
          http_timeout: http_timeout
          description: description
          active: true
          created_at: 2000-01-23T04:56:07.000+00:00
          subscription:
            subscription_id: subscription_id
            updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            filters:
              user.created: {}
              reaction.deleted: null
              user.updated:
                fids:
                - 2
                - 2
              cast.created:
                exclude_author_fids:
                - 6
                - 6
                parent_author_fids:
                - 5
                - 5
                parent_hashes:
                - parent_hashes
                - parent_hashes
                parent_urls:
                - parent_urls
                - parent_urls
                text: (?i)\$degen
                author_fids:
                - 1
                - 1
                root_parent_urls:
                - root_parent_urls
                - root_parent_urls
                embeds: \b(farcaster|neynar)\b
                mentioned_fids:
                - 5
                - 5
              reaction.created:
                target_fids:
                - 2
                - 2
                fids:
                - 3
                - 3
              follow.created:
                target_fids:
                - 9
                - 9
                fids:
                - 7
                - 7
              follow.deleted: null
            object: webhook_subscription
          title: title
          secrets:
          - uid: uid
            expires_at: expires_at
            updated_at: updated_at
            created_at: created_at
            value: value
            deleted_at: deleted_at
          - uid: uid
            expires_at: expires_at
            updated_at: updated_at
            created_at: created_at
            value: value
            deleted_at: deleted_at
          deleted_at: 2000-01-23T04:56:07.000+00:00
          rate_limit_duration: rate_limit_duration
          updated_at: 2000-01-23T04:56:07.000+00:00
          webhook_id: webhook_id
          developer_uuid: developer_uuid
          object: webhook
        - rate_limit: 0
          target_url: target_url
          http_timeout: http_timeout
          description: description
          active: true
          created_at: 2000-01-23T04:56:07.000+00:00
          subscription:
            subscription_id: subscription_id
            updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            filters:
              user.created: {}
              reaction.deleted: null
              user.updated:
                fids:
                - 2
                - 2
              cast.created:
                exclude_author_fids:
                - 6
                - 6
                parent_author_fids:
                - 5
                - 5
                parent_hashes:
                - parent_hashes
                - parent_hashes
                parent_urls:
                - parent_urls
                - parent_urls
                text: (?i)\$degen
                author_fids:
                - 1
                - 1
                root_parent_urls:
                - root_parent_urls
                - root_parent_urls
                embeds: \b(farcaster|neynar)\b
                mentioned_fids:
                - 5
                - 5
              reaction.created:
                target_fids:
                - 2
                - 2
                fids:
                - 3
                - 3
              follow.created:
                target_fids:
                - 9
                - 9
                fids:
                - 7
                - 7
              follow.deleted: null
            object: webhook_subscription
          title: title
          secrets:
          - uid: uid
            expires_at: expires_at
            updated_at: updated_at
            created_at: created_at
            value: value
            deleted_at: deleted_at
          - uid: uid
            expires_at: expires_at
            updated_at: updated_at
            created_at: created_at
            value: value
            deleted_at: deleted_at
          deleted_at: 2000-01-23T04:56:07.000+00:00
          rate_limit_duration: rate_limit_duration
          updated_at: 2000-01-23T04:56:07.000+00:00
          webhook_id: webhook_id
          developer_uuid: developer_uuid
          object: webhook
    FrameType:
      type: string
      description: Type of identifier (either 'uuid' or 'url')
      enum:
      - uuid
      - url
    FrameValidateListResponse:
      required:
      - frames
      type: object
      properties:
        frames:
          type: array
          items:
            type: string
            format: uri
      example:
        frames:
        - http://example.com/aeiou
        - http://example.com/aeiou
    FrameValidateAnalyticsInteractors:
      required:
      - interactors
      type: object
      properties:
        interactors:
          type: array
          items:
            $ref: '#/components/schemas/FrameValidateAnalyticsInteractors_interactors'
    FrameValidateAnalyticsTotalInteractors:
      required:
      - total_interactors
      type: object
      properties:
        total_interactors:
          type: number
    FrameValidateAnalyticsInteractionsPerCast:
      required:
      - interactions_per_cast
      type: object
      properties:
        interactions_per_cast:
          type: array
          items:
            $ref: '#/components/schemas/FrameValidateAnalyticsInteractionsPerCast_interactions_per_cast'
    FrameValidateAnalyticsInputText:
      required:
      - input_texts
      type: object
      properties:
        input_texts:
          type: array
          items:
            $ref: '#/components/schemas/FrameValidateAnalyticsInputText_input_texts'
    FrameValidateAnalyticsResponse:
      oneOf:
      - $ref: '#/components/schemas/FrameValidateAnalyticsInteractors'
      - $ref: '#/components/schemas/FrameValidateAnalyticsTotalInteractors'
      - $ref: '#/components/schemas/FrameValidateAnalyticsInteractionsPerCast'
      - $ref: '#/components/schemas/FrameValidateAnalyticsInputText'
    ValidateFrameAnalyticsType:
      type: string
      enum:
      - total-interactors
      - interactors
      - interactions-per-cast
      - input-text
    AuthorizationUrlResponse:
      required:
      - authorization_url
      type: object
      properties:
        authorization_url:
          type: string
          format: uri
      example:
        authorization_url: http://example.com/aeiou
    AuthorizationUrlResponseType:
      type: string
      enum:
      - code
    Idem:
      type: string
      description: "An Idempotency key is a unique identifier for the request.\n**Note:**\
        \ \n1) This is used to prevent duplicate requests. Use the same idem key on\
        \ retry attempts.\n2) This should be a unique identifier for each request.\n\
        3) Recommended format is a 16-character string generated by the developer\
        \ at the time of making this request.\n"
    BuyStorageReqBody:
      required:
      - fid
      type: object
      properties:
        fid:
          minimum: 1
          type: integer
          example: 1
        units:
          minimum: 1
          type: integer
          description: |
            Number of storage units to buy.
            A storage unit lets you store 5000 casts, 2500 reactions and 2500 links.
          example: 1
        idem:
          $ref: '#/components/schemas/Idem'
    ZodError:
      required:
      - code
      - errors
      - message
      type: object
      properties:
        message:
          type: string
          example: Invalid query parameters
        code:
          type: string
          example: InvalidField
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ZodError_errors'
    CastComposerType:
      type: string
      enum:
      - top
      - featured
    CastComposerActionsListResponse:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/CastComposerActionsListResponse_actions'
        next:
          $ref: '#/components/schemas/NextCursor'
      example:
        next:
          cursor: cursor
        actions:
        - action_url: http://example.com/aeiou
          author_fid: 6
          image_url: http://example.com/aeiou
          icon: icon
          description: description
          added_count: 0
          octicon: octicon
          app_name: app_name
          about_url: http://example.com/aeiou
          name: name
          action:
            post_url: http://example.com/aeiou
            action_type: action_type
          category: category
          object: object
        - action_url: http://example.com/aeiou
          author_fid: 6
          image_url: http://example.com/aeiou
          icon: icon
          description: description
          added_count: 0
          octicon: octicon
          app_name: app_name
          about_url: http://example.com/aeiou
          name: name
          action:
            post_url: http://example.com/aeiou
            action_type: action_type
          category: category
          object: object
    SubscriptionCheckResponse:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/SubscriptionStatus'
      example:
        "0xedd3783e8c7c52b80cfbd026a63c207edc9cbee7":
          object: subscribed_to_dehydrated
          status: true
          expires_at: 1748890497000
          subscribed_at: 1719256819704
          tier:
            id: 1
            price:
              period_duration_seconds: 2592000
              tokens_per_period: "3499999997472000"
              initial_mint_price: "0"
        "0x5a927ac639636e534b678e81768ca19e2c6280b7":
          object: subscribed_to_dehydrated
          status: false
          expires_at: null
          subscribed_at: null
          tier: null
    SubscriptionStatus:
      required:
      - expires_at
      - object
      - status
      - subscribed_at
      - tier
      type: object
      properties:
        object:
          type: string
          enum:
          - subscribed_to_dehydrated
        status:
          type: boolean
        expires_at:
          type: integer
          format: int64
          nullable: true
        subscribed_at:
          type: integer
          format: int64
          nullable: true
        tier:
          $ref: '#/components/schemas/SubscriptionTier'
    Fids:
      type: array
      description: List of FIDs
      items:
        $ref: '#/components/schemas/Fid'
      x-schema-name: Fids
    UserPowerLiteResponse:
      required:
      - result
      type: object
      properties:
        result:
          $ref: '#/components/schemas/UserPowerLiteResponse_result'
      example:
        result:
          fids:
          - 0
          - 0
    NotificationType:
      type: string
      enum:
      - follows
      - recasts
      - likes
      - mentions
      - replies
    MarkNotificationsAsSeenReqBody:
      required:
      - signer_uuid
      type: object
      properties:
        signer_uuid:
          type: string
          description: |
            The UUID of the signer. Signer should have atleast one write permission
        type:
          $ref: '#/components/schemas/NotificationType'
    inline_response_400:
      oneOf:
      - $ref: '#/components/schemas/ZodError'
      - $ref: '#/components/schemas/ErrorRes'
    farcaster_frame_body:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
    inline_response_200:
      required:
      - frame
      type: object
      properties:
        frame:
          $ref: '#/components/schemas/Frame'
      description: The frame object containing the meta tags
      example:
        frame:
          image: image
          input:
            text: text
          buttons:
          - post_url: post_url
            action_type: post
            index: 0
            title: title
            target: target
          - post_url: post_url
            action_type: post
            index: 0
            title: title
            target: target
          image_aspect_ratio: image_aspect_ratio
          post_url: post_url
          frames_url: frames_url
          state:
            serialized: serialized
          title: title
          version: version
    frame_validate_body:
      required:
      - message_bytes_in_hex
      type: object
      properties:
        message_bytes_in_hex:
          type: string
          description: Hexadecimal string of message bytes.
        cast_reaction_context:
          type: boolean
          description: Adds viewer_context inside the cast object to indicate whether
            the interactor reacted to the cast housing the frame.
          default: true
        follow_context:
          type: boolean
          description: Adds viewer_context inside the user (interactor) object to
            indicate whether the interactor follows or is followed by the cast author.
          default: false
        signer_context:
          type: boolean
          description: Adds context about the app used by the user inside `frame.action`.
          default: false
        channel_follow_context:
          type: boolean
          description: Adds context about the channel that the cast belongs to inside
            of the cast object.
          default: false
      example:
        message_bytes_in_hex: 0a49080d1085940118f6a6a32e20018201390a1a86db69b3ffdf6ab8acb6872b69ccbe7eb6a67af7ab71e95aa69f10021a1908ef011214237025b322fd03a9ddc7ec6c078fb9c56d1a72111214e3d88aeb2d0af356024e0c693f31c11b42c76b721801224043cb2f3fcbfb5dafce110e934b9369267cf3d1aef06f51ce653dc01700fc7b778522eb7873fd60dda4611376200076caf26d40a736d3919ce14e78a684e4d30b280132203a66717c82d728beb3511b05975c6603275c7f6a0600370bf637b9ecd2bd231e
        cast_reaction_context: true
        follow_context: false
        signer_context: false
        channel_follow_context: true
    EmbedUrlMetadata_image:
      type: object
      properties:
        height_px:
          type: integer
        width_px:
          type: integer
    EmbedUrlMetadata_video_stream:
      type: object
      properties:
        codec_name:
          type: string
        height_px:
          type: integer
        width_px:
          type: integer
    EmbedUrlMetadata_video:
      type: object
      properties:
        duration_s:
          type: number
        stream:
          type: array
          items:
            $ref: '#/components/schemas/EmbedUrlMetadata_video_stream'
    Frame_input:
      type: object
      properties:
        text:
          type: string
          description: Input text for the frame
      example:
        text: text
    Frame_state:
      type: object
      properties:
        serialized:
          type: string
          description: State for the frame in a serialized format
      example:
        serialized: serialized
    SubscriptionTier_price:
      type: object
      properties:
        period_duration_seconds:
          type: integer
          example: 2592000
        tokens_per_period:
          type: string
          example: "3000000000000000"
        initial_mint_price:
          type: string
          example: "0"
      example:
        initial_mint_price: "0"
        tokens_per_period: "3000000000000000"
        period_duration_seconds: 2592000
    Subscription_metadata:
      required:
      - art_url
      - symbol
      - title
      type: object
      properties:
        title:
          type: string
          example: /memes channel sub
        symbol:
          type: string
          example: MMS
        art_url:
          type: string
          example: https://storage.withfabric.xyz/loom/403fdc10-95f3-4b25-9d77-5aac7ccb9fd1.jpg
      example:
        symbol: MMS
        art_url: https://storage.withfabric.xyz/loom/403fdc10-95f3-4b25-9d77-5aac7ccb9fd1.jpg
        title: /memes channel sub
    Subscription_price:
      required:
      - initial_mint_price
      - period_duration_seconds
      - tokens_per_period
      type: object
      properties:
        period_duration_seconds:
          type: integer
          example: 2592000
        tokens_per_period:
          type: string
          example: "350574998400000"
        initial_mint_price:
          type: string
          example: "0"
      example:
        initial_mint_price: "0"
        tokens_per_period: "350574998400000"
        period_duration_seconds: 2592000
    Subscription_token:
      required:
      - address
      - decimals
      - erc20
      - symbol
      type: object
      properties:
        symbol:
          type: string
          example: ETH
        address:
          type: string
          nullable: true
          example: null
        decimals:
          type: integer
          example: 18
        erc20:
          type: boolean
          example: false
      example:
        erc20: false
        symbol: ETH
        address: address
        decimals: 18
    FrameSignaturePacket_untrustedData:
      type: object
      properties:
        fid:
          $ref: '#/components/schemas/Fid'
        url:
          type: string
          description: URL of the frame
        messageHash:
          type: string
          description: Message hash
        timestamp:
          type: string
          description: Timestamp
        network:
          type: integer
          description: Network
        buttonIndex:
          type: integer
          description: Index of the button
        inputText:
          type: string
          description: Input text
        state:
          type: string
          description: State
        transactionId:
          type: string
          description: Transaction ID
        address:
          $ref: '#/components/schemas/Address'
        castId:
          $ref: '#/components/schemas/CastId'
      description: Untrusted data from the user
    FrameSignaturePacket_trustedData:
      type: object
      properties:
        messageBytes:
          type: string
          description: Message bytes
      description: Trusted data from the user
    User_profile_bio:
      required:
      - mentioned_profiles
      - text
      type: object
      properties:
        text:
          type: string
        mentioned_profiles:
          type: array
          items:
            type: string
          default: []
      example:
        mentioned_profiles:
        - mentioned_profiles
        - mentioned_profiles
        text: text
    User_profile:
      required:
      - bio
      type: object
      properties:
        bio:
          $ref: '#/components/schemas/User_profile_bio'
      example:
        bio:
          mentioned_profiles:
          - mentioned_profiles
          - mentioned_profiles
          text: text
    User_verified_addresses:
      required:
      - eth_addresses
      - sol_addresses
      type: object
      properties:
        eth_addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        sol_addresses:
          type: array
          items:
            $ref: '#/components/schemas/SolAddress'
      example:
        eth_addresses:
        - null
        - null
        sol_addresses:
        - sol_addresses
        - sol_addresses
    ProfileUrl_pfp:
      required:
      - url
      type: object
      properties:
        url:
          type: string
    RegisterSignerKeyReqBody_sponsor:
      required:
      - fid
      - signature
      type: object
      properties:
        fid:
          $ref: '#/components/schemas/Fid'
        signature:
          type: string
          description: Signature generated by the fid of the sponsor and the signature
            generated from signKeyRequest for the app.
    Conversation_conversation:
      required:
      - cast
      type: object
      properties:
        cast:
          $ref: '#/components/schemas/CastWithInteractionsAndConversations'
        chronological_parent_casts:
          type: array
          items:
            $ref: '#/components/schemas/CastWithInteractions'
    UserSearchResponse_result:
      required:
      - users
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/SearchedUser'
        next:
          $ref: '#/components/schemas/NextCursor'
      example:
        next:
          cursor: cursor
        users:
        - ""
        - ""
    CastsResponse_result:
      required:
      - casts
      type: object
      properties:
        casts:
          type: array
          items:
            $ref: '#/components/schemas/CastWithInteractions'
      example:
        casts:
        - ""
        - ""
    CastsSearchResponse_result:
      required:
      - casts
      - next
      type: object
      properties:
        casts:
          type: array
          items:
            $ref: '#/components/schemas/CastWithInteractions'
        next:
          $ref: '#/components/schemas/NextCursor'
      example:
        next:
          cursor: cursor
        casts:
        - ""
        - ""
    PostCastResponse_cast_author:
      required:
      - fid
      type: object
      properties:
        fid:
          $ref: '#/components/schemas/Fid'
      example:
        fid: 0
    PostCastResponse_cast:
      required:
      - author
      - hash
      - text
      type: object
      properties:
        hash:
          $ref: '#/components/schemas/Address'
        author:
          $ref: '#/components/schemas/PostCastResponse_cast_author'
        text:
          type: string
      example:
        author:
          fid: 0
        text: text
        hash: hash
    NeynarPageInput_text:
      required:
      - enabled
      type: object
      properties:
        enabled:
          type: boolean
          description: Indicates if text input is enabled.
          default: false
        placeholder:
          type: string
          description: The placeholder text for the input.
      example:
        placeholder: placeholder
        enabled: false
    ValidatedFrameAction_tapped_button:
      required:
      - index
      type: object
      properties:
        index:
          type: integer
      example:
        index: 0
    ValidatedFrameAction_signer:
      type: object
      properties:
        client:
          $ref: '#/components/schemas/User'
      example:
        client: null
    WebhookSubscriptionFilters_cast.created:
      type: object
      properties:
        exclude_author_fids:
          type: array
          description: |
            Exclude casts that matches these authors.
            **Note:**
            This is applied as an AND operation against rest of the filters.
            Rest of the filters are bundled as an OR operation.
          items:
            type: integer
        author_fids:
          type: array
          items:
            type: integer
        mentioned_fids:
          type: array
          items:
            type: integer
        parent_urls:
          type: array
          items:
            type: string
        root_parent_urls:
          type: array
          items:
            type: string
        parent_hashes:
          type: array
          items:
            type: string
        parent_author_fids:
          type: array
          items:
            type: integer
        text:
          type: string
          description: "Regex pattern to match the text key of the cast.\n**Note:**\
            \ \n1) Regex must be parsed by Go's RE2 engine (Test your expression here:\
            \ https://www.lddgo.net/en/string/golangregex)\n2) Use backslashes to\
            \ escape special characters.\nFor example: (?i)\\\\$degen should be written\
            \ as (?i)\\\\\\\\$degen\n"
          example: (?i)\$degen
        embeds:
          type: string
          description: "Regex pattern to match the embeded_url (key embeds) of the\
            \ cast.\n**Note:** \n1) Regex must be parsed by Go's RE2 engine (Test\
            \ your expression here: https://www.lddgo.net/en/string/golangregex)\n\
            2) Use backslashes to escape special characters.\nFor example: \\\\b(farcaster|neynar)\\\
            \\b should be written as \\\\\\\\b(farcaster|neynar)\\\\\\\\b\n"
          example: \b(farcaster|neynar)\b
      example:
        exclude_author_fids:
        - 6
        - 6
        parent_author_fids:
        - 5
        - 5
        parent_hashes:
        - parent_hashes
        - parent_hashes
        parent_urls:
        - parent_urls
        - parent_urls
        text: (?i)\$degen
        author_fids:
        - 1
        - 1
        root_parent_urls:
        - root_parent_urls
        - root_parent_urls
        embeds: \b(farcaster|neynar)\b
        mentioned_fids:
        - 5
        - 5
    WebhookSubscriptionFilters_user.updated:
      type: object
      properties:
        fids:
          type: array
          items:
            type: integer
      example:
        fids:
        - 2
        - 2
    FrameValidateAnalyticsInteractors_interactors:
      required:
      - fid
      - interaction_count
      - username
      type: object
      properties:
        fid:
          $ref: '#/components/schemas/Fid'
        username:
          type: string
        interaction_count:
          type: number
    FrameValidateAnalyticsInteractionsPerCast_interactions_per_cast:
      required:
      - cast_url
      - interaction_count
      - start
      - stop
      - time
      type: object
      properties:
        start:
          type: string
          format: date-time
        stop:
          type: string
          format: date-time
        time:
          type: string
          format: date-time
        interaction_count:
          type: number
        cast_url:
          type: string
          format: uri
    FrameValidateAnalyticsInputText_input_texts:
      required:
      - fid
      - input_text
      - username
      type: object
      properties:
        fid:
          $ref: '#/components/schemas/Fid'
        username:
          type: string
        input_text:
          type: string
    ZodError_errors:
      required:
      - code
      - expected
      - message
      - path
      - received
      type: object
      properties:
        code:
          type: string
        expected:
          type: string
        received:
          type: string
        path:
          type: array
          items:
            type: string
        message:
          type: string
    CastComposerActionsListResponse_action:
      type: object
      properties:
        action_type:
          type: string
          description: "Type of the action (e.g., post)."
        post_url:
          type: string
          description: URL to post the action.
          format: uri
      example:
        post_url: http://example.com/aeiou
        action_type: action_type
    CastComposerActionsListResponse_actions:
      type: object
      properties:
        name:
          type: string
          description: The name of the action.
        icon:
          type: string
          description: The icon representing the action.
        description:
          type: string
          description: A brief description of the action.
        about_url:
          type: string
          description: URL to learn more about the action.
          format: uri
        image_url:
          type: string
          description: URL of the action's image.
          format: uri
        action_url:
          type: string
          description: URL to perform the action.
          format: uri
        action:
          $ref: '#/components/schemas/CastComposerActionsListResponse_action'
        octicon:
          type: string
          description: Icon name for the action.
        added_count:
          type: integer
          description: Number of times the action has been added.
        app_name:
          type: string
          description: Name of the application providing the action.
        author_fid:
          type: integer
          description: Author's Farcaster ID.
        category:
          type: string
          description: Category of the action.
        object:
          type: string
          description: "Object type, which is \"composer_action\"."
      example:
        action_url: http://example.com/aeiou
        author_fid: 6
        image_url: http://example.com/aeiou
        icon: icon
        description: description
        added_count: 0
        octicon: octicon
        app_name: app_name
        about_url: http://example.com/aeiou
        name: name
        action:
          post_url: http://example.com/aeiou
          action_type: action_type
        category: category
        object: object
    UserPowerLiteResponse_result:
      required:
      - fids
      type: object
      properties:
        fids:
          $ref: '#/components/schemas/Fids'
      example:
        fids:
        - 0
        - 0
  responses:
    "401Response":
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorRes'
    "404Response":
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorRes'
    "400Response":
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorRes'
    "400ZodResponse":
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ZodError'
    "403Response":
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorRes'
    "409Response":
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConflictErrorRes'
    "500Response":
      description: Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorRes'
  parameters:
    ApiKey:
      name: api_key
      in: header
      description: API key required for authentication.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        default: NEYNAR_API_DOCS
