/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SubscriptionPrice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionPrice{}

// SubscriptionPrice struct for SubscriptionPrice
type SubscriptionPrice struct {
	PeriodDurationSeconds *int32 `json:"period_duration_seconds,omitempty"`
	TokensPerPeriod *string `json:"tokens_per_period,omitempty"`
	InitialMintPrice *string `json:"initial_mint_price,omitempty"`
}

// NewSubscriptionPrice instantiates a new SubscriptionPrice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionPrice() *SubscriptionPrice {
	this := SubscriptionPrice{}
	return &this
}

// NewSubscriptionPriceWithDefaults instantiates a new SubscriptionPrice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionPriceWithDefaults() *SubscriptionPrice {
	this := SubscriptionPrice{}
	return &this
}

// GetPeriodDurationSeconds returns the PeriodDurationSeconds field value if set, zero value otherwise.
func (o *SubscriptionPrice) GetPeriodDurationSeconds() int32 {
	if o == nil || IsNil(o.PeriodDurationSeconds) {
		var ret int32
		return ret
	}
	return *o.PeriodDurationSeconds
}

// GetPeriodDurationSecondsOk returns a tuple with the PeriodDurationSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionPrice) GetPeriodDurationSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.PeriodDurationSeconds) {
		return nil, false
	}
	return o.PeriodDurationSeconds, true
}

// HasPeriodDurationSeconds returns a boolean if a field has been set.
func (o *SubscriptionPrice) HasPeriodDurationSeconds() bool {
	if o != nil && !IsNil(o.PeriodDurationSeconds) {
		return true
	}

	return false
}

// SetPeriodDurationSeconds gets a reference to the given int32 and assigns it to the PeriodDurationSeconds field.
func (o *SubscriptionPrice) SetPeriodDurationSeconds(v int32) {
	o.PeriodDurationSeconds = &v
}

// GetTokensPerPeriod returns the TokensPerPeriod field value if set, zero value otherwise.
func (o *SubscriptionPrice) GetTokensPerPeriod() string {
	if o == nil || IsNil(o.TokensPerPeriod) {
		var ret string
		return ret
	}
	return *o.TokensPerPeriod
}

// GetTokensPerPeriodOk returns a tuple with the TokensPerPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionPrice) GetTokensPerPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.TokensPerPeriod) {
		return nil, false
	}
	return o.TokensPerPeriod, true
}

// HasTokensPerPeriod returns a boolean if a field has been set.
func (o *SubscriptionPrice) HasTokensPerPeriod() bool {
	if o != nil && !IsNil(o.TokensPerPeriod) {
		return true
	}

	return false
}

// SetTokensPerPeriod gets a reference to the given string and assigns it to the TokensPerPeriod field.
func (o *SubscriptionPrice) SetTokensPerPeriod(v string) {
	o.TokensPerPeriod = &v
}

// GetInitialMintPrice returns the InitialMintPrice field value if set, zero value otherwise.
func (o *SubscriptionPrice) GetInitialMintPrice() string {
	if o == nil || IsNil(o.InitialMintPrice) {
		var ret string
		return ret
	}
	return *o.InitialMintPrice
}

// GetInitialMintPriceOk returns a tuple with the InitialMintPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionPrice) GetInitialMintPriceOk() (*string, bool) {
	if o == nil || IsNil(o.InitialMintPrice) {
		return nil, false
	}
	return o.InitialMintPrice, true
}

// HasInitialMintPrice returns a boolean if a field has been set.
func (o *SubscriptionPrice) HasInitialMintPrice() bool {
	if o != nil && !IsNil(o.InitialMintPrice) {
		return true
	}

	return false
}

// SetInitialMintPrice gets a reference to the given string and assigns it to the InitialMintPrice field.
func (o *SubscriptionPrice) SetInitialMintPrice(v string) {
	o.InitialMintPrice = &v
}

func (o SubscriptionPrice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionPrice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PeriodDurationSeconds) {
		toSerialize["period_duration_seconds"] = o.PeriodDurationSeconds
	}
	if !IsNil(o.TokensPerPeriod) {
		toSerialize["tokens_per_period"] = o.TokensPerPeriod
	}
	if !IsNil(o.InitialMintPrice) {
		toSerialize["initial_mint_price"] = o.InitialMintPrice
	}
	return toSerialize, nil
}

type NullableSubscriptionPrice struct {
	value *SubscriptionPrice
	isSet bool
}

func (v NullableSubscriptionPrice) Get() *SubscriptionPrice {
	return v.value
}

func (v *NullableSubscriptionPrice) Set(val *SubscriptionPrice) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionPrice) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionPrice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionPrice(val *SubscriptionPrice) *NullableSubscriptionPrice {
	return &NullableSubscriptionPrice{value: val, isSet: true}
}

func (v NullableSubscriptionPrice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionPrice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


