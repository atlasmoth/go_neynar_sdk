/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RelevantFollowersResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RelevantFollowersResponse{}

// RelevantFollowersResponse struct for RelevantFollowersResponse
type RelevantFollowersResponse struct {
	TopRelevantFollowersHydrated []HydratedFollower `json:"top_relevant_followers_hydrated,omitempty"`
	AllRelevantFollowersDehydrated []DehydratedFollower `json:"all_relevant_followers_dehydrated,omitempty"`
}

// NewRelevantFollowersResponse instantiates a new RelevantFollowersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRelevantFollowersResponse() *RelevantFollowersResponse {
	this := RelevantFollowersResponse{}
	return &this
}

// NewRelevantFollowersResponseWithDefaults instantiates a new RelevantFollowersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRelevantFollowersResponseWithDefaults() *RelevantFollowersResponse {
	this := RelevantFollowersResponse{}
	return &this
}

// GetTopRelevantFollowersHydrated returns the TopRelevantFollowersHydrated field value if set, zero value otherwise.
func (o *RelevantFollowersResponse) GetTopRelevantFollowersHydrated() []HydratedFollower {
	if o == nil || IsNil(o.TopRelevantFollowersHydrated) {
		var ret []HydratedFollower
		return ret
	}
	return o.TopRelevantFollowersHydrated
}

// GetTopRelevantFollowersHydratedOk returns a tuple with the TopRelevantFollowersHydrated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelevantFollowersResponse) GetTopRelevantFollowersHydratedOk() ([]HydratedFollower, bool) {
	if o == nil || IsNil(o.TopRelevantFollowersHydrated) {
		return nil, false
	}
	return o.TopRelevantFollowersHydrated, true
}

// HasTopRelevantFollowersHydrated returns a boolean if a field has been set.
func (o *RelevantFollowersResponse) HasTopRelevantFollowersHydrated() bool {
	if o != nil && !IsNil(o.TopRelevantFollowersHydrated) {
		return true
	}

	return false
}

// SetTopRelevantFollowersHydrated gets a reference to the given []HydratedFollower and assigns it to the TopRelevantFollowersHydrated field.
func (o *RelevantFollowersResponse) SetTopRelevantFollowersHydrated(v []HydratedFollower) {
	o.TopRelevantFollowersHydrated = v
}

// GetAllRelevantFollowersDehydrated returns the AllRelevantFollowersDehydrated field value if set, zero value otherwise.
func (o *RelevantFollowersResponse) GetAllRelevantFollowersDehydrated() []DehydratedFollower {
	if o == nil || IsNil(o.AllRelevantFollowersDehydrated) {
		var ret []DehydratedFollower
		return ret
	}
	return o.AllRelevantFollowersDehydrated
}

// GetAllRelevantFollowersDehydratedOk returns a tuple with the AllRelevantFollowersDehydrated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelevantFollowersResponse) GetAllRelevantFollowersDehydratedOk() ([]DehydratedFollower, bool) {
	if o == nil || IsNil(o.AllRelevantFollowersDehydrated) {
		return nil, false
	}
	return o.AllRelevantFollowersDehydrated, true
}

// HasAllRelevantFollowersDehydrated returns a boolean if a field has been set.
func (o *RelevantFollowersResponse) HasAllRelevantFollowersDehydrated() bool {
	if o != nil && !IsNil(o.AllRelevantFollowersDehydrated) {
		return true
	}

	return false
}

// SetAllRelevantFollowersDehydrated gets a reference to the given []DehydratedFollower and assigns it to the AllRelevantFollowersDehydrated field.
func (o *RelevantFollowersResponse) SetAllRelevantFollowersDehydrated(v []DehydratedFollower) {
	o.AllRelevantFollowersDehydrated = v
}

func (o RelevantFollowersResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RelevantFollowersResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TopRelevantFollowersHydrated) {
		toSerialize["top_relevant_followers_hydrated"] = o.TopRelevantFollowersHydrated
	}
	if !IsNil(o.AllRelevantFollowersDehydrated) {
		toSerialize["all_relevant_followers_dehydrated"] = o.AllRelevantFollowersDehydrated
	}
	return toSerialize, nil
}

type NullableRelevantFollowersResponse struct {
	value *RelevantFollowersResponse
	isSet bool
}

func (v NullableRelevantFollowersResponse) Get() *RelevantFollowersResponse {
	return v.value
}

func (v *NullableRelevantFollowersResponse) Set(val *RelevantFollowersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRelevantFollowersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRelevantFollowersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRelevantFollowersResponse(val *RelevantFollowersResponse) *NullableRelevantFollowersResponse {
	return &NullableRelevantFollowersResponse{value: val, isSet: true}
}

func (v NullableRelevantFollowersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRelevantFollowersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


