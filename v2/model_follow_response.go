/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FollowResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FollowResponse{}

// FollowResponse struct for FollowResponse
type FollowResponse struct {
	Success *bool `json:"success,omitempty"`
	// User identifier (unsigned integer)
	TargetFid *int32 `json:"target_fid,omitempty"`
	Hash *string `json:"hash,omitempty"`
}

// NewFollowResponse instantiates a new FollowResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFollowResponse() *FollowResponse {
	this := FollowResponse{}
	return &this
}

// NewFollowResponseWithDefaults instantiates a new FollowResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFollowResponseWithDefaults() *FollowResponse {
	this := FollowResponse{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *FollowResponse) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FollowResponse) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *FollowResponse) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *FollowResponse) SetSuccess(v bool) {
	o.Success = &v
}

// GetTargetFid returns the TargetFid field value if set, zero value otherwise.
func (o *FollowResponse) GetTargetFid() int32 {
	if o == nil || IsNil(o.TargetFid) {
		var ret int32
		return ret
	}
	return *o.TargetFid
}

// GetTargetFidOk returns a tuple with the TargetFid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FollowResponse) GetTargetFidOk() (*int32, bool) {
	if o == nil || IsNil(o.TargetFid) {
		return nil, false
	}
	return o.TargetFid, true
}

// HasTargetFid returns a boolean if a field has been set.
func (o *FollowResponse) HasTargetFid() bool {
	if o != nil && !IsNil(o.TargetFid) {
		return true
	}

	return false
}

// SetTargetFid gets a reference to the given int32 and assigns it to the TargetFid field.
func (o *FollowResponse) SetTargetFid(v int32) {
	o.TargetFid = &v
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *FollowResponse) GetHash() string {
	if o == nil || IsNil(o.Hash) {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FollowResponse) GetHashOk() (*string, bool) {
	if o == nil || IsNil(o.Hash) {
		return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *FollowResponse) HasHash() bool {
	if o != nil && !IsNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *FollowResponse) SetHash(v string) {
	o.Hash = &v
}

func (o FollowResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FollowResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.TargetFid) {
		toSerialize["target_fid"] = o.TargetFid
	}
	if !IsNil(o.Hash) {
		toSerialize["hash"] = o.Hash
	}
	return toSerialize, nil
}

type NullableFollowResponse struct {
	value *FollowResponse
	isSet bool
}

func (v NullableFollowResponse) Get() *FollowResponse {
	return v.value
}

func (v *NullableFollowResponse) Set(val *FollowResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFollowResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFollowResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFollowResponse(val *FollowResponse) *NullableFollowResponse {
	return &NullableFollowResponse{value: val, isSet: true}
}

func (v NullableFollowResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFollowResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


