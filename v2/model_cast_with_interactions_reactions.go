/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CastWithInteractionsReactions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CastWithInteractionsReactions{}

// CastWithInteractionsReactions struct for CastWithInteractionsReactions
type CastWithInteractionsReactions struct {
	Likes []ReactionLike `json:"likes,omitempty"`
	Recasts []ReactionRecast `json:"recasts,omitempty"`
	LikesCount *int32 `json:"likes_count,omitempty"`
	RecastsCount *int32 `json:"recasts_count,omitempty"`
}

// NewCastWithInteractionsReactions instantiates a new CastWithInteractionsReactions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCastWithInteractionsReactions() *CastWithInteractionsReactions {
	this := CastWithInteractionsReactions{}
	return &this
}

// NewCastWithInteractionsReactionsWithDefaults instantiates a new CastWithInteractionsReactions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCastWithInteractionsReactionsWithDefaults() *CastWithInteractionsReactions {
	this := CastWithInteractionsReactions{}
	return &this
}

// GetLikes returns the Likes field value if set, zero value otherwise.
func (o *CastWithInteractionsReactions) GetLikes() []ReactionLike {
	if o == nil || IsNil(o.Likes) {
		var ret []ReactionLike
		return ret
	}
	return o.Likes
}

// GetLikesOk returns a tuple with the Likes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CastWithInteractionsReactions) GetLikesOk() ([]ReactionLike, bool) {
	if o == nil || IsNil(o.Likes) {
		return nil, false
	}
	return o.Likes, true
}

// HasLikes returns a boolean if a field has been set.
func (o *CastWithInteractionsReactions) HasLikes() bool {
	if o != nil && !IsNil(o.Likes) {
		return true
	}

	return false
}

// SetLikes gets a reference to the given []ReactionLike and assigns it to the Likes field.
func (o *CastWithInteractionsReactions) SetLikes(v []ReactionLike) {
	o.Likes = v
}

// GetRecasts returns the Recasts field value if set, zero value otherwise.
func (o *CastWithInteractionsReactions) GetRecasts() []ReactionRecast {
	if o == nil || IsNil(o.Recasts) {
		var ret []ReactionRecast
		return ret
	}
	return o.Recasts
}

// GetRecastsOk returns a tuple with the Recasts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CastWithInteractionsReactions) GetRecastsOk() ([]ReactionRecast, bool) {
	if o == nil || IsNil(o.Recasts) {
		return nil, false
	}
	return o.Recasts, true
}

// HasRecasts returns a boolean if a field has been set.
func (o *CastWithInteractionsReactions) HasRecasts() bool {
	if o != nil && !IsNil(o.Recasts) {
		return true
	}

	return false
}

// SetRecasts gets a reference to the given []ReactionRecast and assigns it to the Recasts field.
func (o *CastWithInteractionsReactions) SetRecasts(v []ReactionRecast) {
	o.Recasts = v
}

// GetLikesCount returns the LikesCount field value if set, zero value otherwise.
func (o *CastWithInteractionsReactions) GetLikesCount() int32 {
	if o == nil || IsNil(o.LikesCount) {
		var ret int32
		return ret
	}
	return *o.LikesCount
}

// GetLikesCountOk returns a tuple with the LikesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CastWithInteractionsReactions) GetLikesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.LikesCount) {
		return nil, false
	}
	return o.LikesCount, true
}

// HasLikesCount returns a boolean if a field has been set.
func (o *CastWithInteractionsReactions) HasLikesCount() bool {
	if o != nil && !IsNil(o.LikesCount) {
		return true
	}

	return false
}

// SetLikesCount gets a reference to the given int32 and assigns it to the LikesCount field.
func (o *CastWithInteractionsReactions) SetLikesCount(v int32) {
	o.LikesCount = &v
}

// GetRecastsCount returns the RecastsCount field value if set, zero value otherwise.
func (o *CastWithInteractionsReactions) GetRecastsCount() int32 {
	if o == nil || IsNil(o.RecastsCount) {
		var ret int32
		return ret
	}
	return *o.RecastsCount
}

// GetRecastsCountOk returns a tuple with the RecastsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CastWithInteractionsReactions) GetRecastsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.RecastsCount) {
		return nil, false
	}
	return o.RecastsCount, true
}

// HasRecastsCount returns a boolean if a field has been set.
func (o *CastWithInteractionsReactions) HasRecastsCount() bool {
	if o != nil && !IsNil(o.RecastsCount) {
		return true
	}

	return false
}

// SetRecastsCount gets a reference to the given int32 and assigns it to the RecastsCount field.
func (o *CastWithInteractionsReactions) SetRecastsCount(v int32) {
	o.RecastsCount = &v
}

func (o CastWithInteractionsReactions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CastWithInteractionsReactions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Likes) {
		toSerialize["likes"] = o.Likes
	}
	if !IsNil(o.Recasts) {
		toSerialize["recasts"] = o.Recasts
	}
	if !IsNil(o.LikesCount) {
		toSerialize["likes_count"] = o.LikesCount
	}
	if !IsNil(o.RecastsCount) {
		toSerialize["recasts_count"] = o.RecastsCount
	}
	return toSerialize, nil
}

type NullableCastWithInteractionsReactions struct {
	value *CastWithInteractionsReactions
	isSet bool
}

func (v NullableCastWithInteractionsReactions) Get() *CastWithInteractionsReactions {
	return v.value
}

func (v *NullableCastWithInteractionsReactions) Set(val *CastWithInteractionsReactions) {
	v.value = val
	v.isSet = true
}

func (v NullableCastWithInteractionsReactions) IsSet() bool {
	return v.isSet
}

func (v *NullableCastWithInteractionsReactions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCastWithInteractionsReactions(val *CastWithInteractionsReactions) *NullableCastWithInteractionsReactions {
	return &NullableCastWithInteractionsReactions{value: val, isSet: true}
}

func (v NullableCastWithInteractionsReactions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCastWithInteractionsReactions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


