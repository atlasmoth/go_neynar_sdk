/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FrameValidateAnalyticsInputTextInputTextsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FrameValidateAnalyticsInputTextInputTextsInner{}

// FrameValidateAnalyticsInputTextInputTextsInner struct for FrameValidateAnalyticsInputTextInputTextsInner
type FrameValidateAnalyticsInputTextInputTextsInner struct {
	// User identifier (unsigned integer)
	Fid *int32 `json:"fid,omitempty"`
	Username *string `json:"username,omitempty"`
	InputText *string `json:"input_text,omitempty"`
}

// NewFrameValidateAnalyticsInputTextInputTextsInner instantiates a new FrameValidateAnalyticsInputTextInputTextsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFrameValidateAnalyticsInputTextInputTextsInner() *FrameValidateAnalyticsInputTextInputTextsInner {
	this := FrameValidateAnalyticsInputTextInputTextsInner{}
	return &this
}

// NewFrameValidateAnalyticsInputTextInputTextsInnerWithDefaults instantiates a new FrameValidateAnalyticsInputTextInputTextsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFrameValidateAnalyticsInputTextInputTextsInnerWithDefaults() *FrameValidateAnalyticsInputTextInputTextsInner {
	this := FrameValidateAnalyticsInputTextInputTextsInner{}
	return &this
}

// GetFid returns the Fid field value if set, zero value otherwise.
func (o *FrameValidateAnalyticsInputTextInputTextsInner) GetFid() int32 {
	if o == nil || IsNil(o.Fid) {
		var ret int32
		return ret
	}
	return *o.Fid
}

// GetFidOk returns a tuple with the Fid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameValidateAnalyticsInputTextInputTextsInner) GetFidOk() (*int32, bool) {
	if o == nil || IsNil(o.Fid) {
		return nil, false
	}
	return o.Fid, true
}

// HasFid returns a boolean if a field has been set.
func (o *FrameValidateAnalyticsInputTextInputTextsInner) HasFid() bool {
	if o != nil && !IsNil(o.Fid) {
		return true
	}

	return false
}

// SetFid gets a reference to the given int32 and assigns it to the Fid field.
func (o *FrameValidateAnalyticsInputTextInputTextsInner) SetFid(v int32) {
	o.Fid = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *FrameValidateAnalyticsInputTextInputTextsInner) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameValidateAnalyticsInputTextInputTextsInner) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *FrameValidateAnalyticsInputTextInputTextsInner) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *FrameValidateAnalyticsInputTextInputTextsInner) SetUsername(v string) {
	o.Username = &v
}

// GetInputText returns the InputText field value if set, zero value otherwise.
func (o *FrameValidateAnalyticsInputTextInputTextsInner) GetInputText() string {
	if o == nil || IsNil(o.InputText) {
		var ret string
		return ret
	}
	return *o.InputText
}

// GetInputTextOk returns a tuple with the InputText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameValidateAnalyticsInputTextInputTextsInner) GetInputTextOk() (*string, bool) {
	if o == nil || IsNil(o.InputText) {
		return nil, false
	}
	return o.InputText, true
}

// HasInputText returns a boolean if a field has been set.
func (o *FrameValidateAnalyticsInputTextInputTextsInner) HasInputText() bool {
	if o != nil && !IsNil(o.InputText) {
		return true
	}

	return false
}

// SetInputText gets a reference to the given string and assigns it to the InputText field.
func (o *FrameValidateAnalyticsInputTextInputTextsInner) SetInputText(v string) {
	o.InputText = &v
}

func (o FrameValidateAnalyticsInputTextInputTextsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FrameValidateAnalyticsInputTextInputTextsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Fid) {
		toSerialize["fid"] = o.Fid
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.InputText) {
		toSerialize["input_text"] = o.InputText
	}
	return toSerialize, nil
}

type NullableFrameValidateAnalyticsInputTextInputTextsInner struct {
	value *FrameValidateAnalyticsInputTextInputTextsInner
	isSet bool
}

func (v NullableFrameValidateAnalyticsInputTextInputTextsInner) Get() *FrameValidateAnalyticsInputTextInputTextsInner {
	return v.value
}

func (v *NullableFrameValidateAnalyticsInputTextInputTextsInner) Set(val *FrameValidateAnalyticsInputTextInputTextsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableFrameValidateAnalyticsInputTextInputTextsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableFrameValidateAnalyticsInputTextInputTextsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFrameValidateAnalyticsInputTextInputTextsInner(val *FrameValidateAnalyticsInputTextInputTextsInner) *NullableFrameValidateAnalyticsInputTextInputTextsInner {
	return &NullableFrameValidateAnalyticsInputTextInputTextsInner{value: val, isSet: true}
}

func (v NullableFrameValidateAnalyticsInputTextInputTextsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFrameValidateAnalyticsInputTextInputTextsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


