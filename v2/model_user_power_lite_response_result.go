/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserPowerLiteResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserPowerLiteResponseResult{}

// UserPowerLiteResponseResult struct for UserPowerLiteResponseResult
type UserPowerLiteResponseResult struct {
	// List of FIDs
	Fids []int32 `json:"fids,omitempty"`
}

// NewUserPowerLiteResponseResult instantiates a new UserPowerLiteResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserPowerLiteResponseResult() *UserPowerLiteResponseResult {
	this := UserPowerLiteResponseResult{}
	return &this
}

// NewUserPowerLiteResponseResultWithDefaults instantiates a new UserPowerLiteResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserPowerLiteResponseResultWithDefaults() *UserPowerLiteResponseResult {
	this := UserPowerLiteResponseResult{}
	return &this
}

// GetFids returns the Fids field value if set, zero value otherwise.
func (o *UserPowerLiteResponseResult) GetFids() []int32 {
	if o == nil || IsNil(o.Fids) {
		var ret []int32
		return ret
	}
	return o.Fids
}

// GetFidsOk returns a tuple with the Fids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserPowerLiteResponseResult) GetFidsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Fids) {
		return nil, false
	}
	return o.Fids, true
}

// HasFids returns a boolean if a field has been set.
func (o *UserPowerLiteResponseResult) HasFids() bool {
	if o != nil && !IsNil(o.Fids) {
		return true
	}

	return false
}

// SetFids gets a reference to the given []int32 and assigns it to the Fids field.
func (o *UserPowerLiteResponseResult) SetFids(v []int32) {
	o.Fids = v
}

func (o UserPowerLiteResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserPowerLiteResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Fids) {
		toSerialize["fids"] = o.Fids
	}
	return toSerialize, nil
}

type NullableUserPowerLiteResponseResult struct {
	value *UserPowerLiteResponseResult
	isSet bool
}

func (v NullableUserPowerLiteResponseResult) Get() *UserPowerLiteResponseResult {
	return v.value
}

func (v *NullableUserPowerLiteResponseResult) Set(val *UserPowerLiteResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableUserPowerLiteResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableUserPowerLiteResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserPowerLiteResponseResult(val *UserPowerLiteResponseResult) *NullableUserPowerLiteResponseResult {
	return &NullableUserPowerLiteResponseResult{value: val, isSet: true}
}

func (v NullableUserPowerLiteResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserPowerLiteResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


