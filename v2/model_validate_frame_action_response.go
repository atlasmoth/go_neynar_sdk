/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ValidateFrameActionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValidateFrameActionResponse{}

// ValidateFrameActionResponse struct for ValidateFrameActionResponse
type ValidateFrameActionResponse struct {
	Valid *bool `json:"valid,omitempty"`
	Action *ValidatedFrameAction `json:"action,omitempty"`
}

// NewValidateFrameActionResponse instantiates a new ValidateFrameActionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidateFrameActionResponse() *ValidateFrameActionResponse {
	this := ValidateFrameActionResponse{}
	return &this
}

// NewValidateFrameActionResponseWithDefaults instantiates a new ValidateFrameActionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidateFrameActionResponseWithDefaults() *ValidateFrameActionResponse {
	this := ValidateFrameActionResponse{}
	return &this
}

// GetValid returns the Valid field value if set, zero value otherwise.
func (o *ValidateFrameActionResponse) GetValid() bool {
	if o == nil || IsNil(o.Valid) {
		var ret bool
		return ret
	}
	return *o.Valid
}

// GetValidOk returns a tuple with the Valid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateFrameActionResponse) GetValidOk() (*bool, bool) {
	if o == nil || IsNil(o.Valid) {
		return nil, false
	}
	return o.Valid, true
}

// HasValid returns a boolean if a field has been set.
func (o *ValidateFrameActionResponse) HasValid() bool {
	if o != nil && !IsNil(o.Valid) {
		return true
	}

	return false
}

// SetValid gets a reference to the given bool and assigns it to the Valid field.
func (o *ValidateFrameActionResponse) SetValid(v bool) {
	o.Valid = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *ValidateFrameActionResponse) GetAction() ValidatedFrameAction {
	if o == nil || IsNil(o.Action) {
		var ret ValidatedFrameAction
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateFrameActionResponse) GetActionOk() (*ValidatedFrameAction, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *ValidateFrameActionResponse) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given ValidatedFrameAction and assigns it to the Action field.
func (o *ValidateFrameActionResponse) SetAction(v ValidatedFrameAction) {
	o.Action = &v
}

func (o ValidateFrameActionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValidateFrameActionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Valid) {
		toSerialize["valid"] = o.Valid
	}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	return toSerialize, nil
}

type NullableValidateFrameActionResponse struct {
	value *ValidateFrameActionResponse
	isSet bool
}

func (v NullableValidateFrameActionResponse) Get() *ValidateFrameActionResponse {
	return v.value
}

func (v *NullableValidateFrameActionResponse) Set(val *ValidateFrameActionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableValidateFrameActionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableValidateFrameActionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidateFrameActionResponse(val *ValidateFrameActionResponse) *NullableValidateFrameActionResponse {
	return &NullableValidateFrameActionResponse{value: val, isSet: true}
}

func (v NullableValidateFrameActionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidateFrameActionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


