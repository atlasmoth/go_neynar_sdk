/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RegisterUserReqBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegisterUserReqBody{}

// RegisterUserReqBody struct for RegisterUserReqBody
type RegisterUserReqBody struct {
	Signature *string `json:"signature,omitempty"`
	Fid *float32 `json:"fid,omitempty"`
	RequestedUserCustodyAddress *string `json:"requested_user_custody_address,omitempty"`
	Deadline *float32 `json:"deadline,omitempty"`
	Fname *string `json:"fname,omitempty"`
}

// NewRegisterUserReqBody instantiates a new RegisterUserReqBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisterUserReqBody() *RegisterUserReqBody {
	this := RegisterUserReqBody{}
	return &this
}

// NewRegisterUserReqBodyWithDefaults instantiates a new RegisterUserReqBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisterUserReqBodyWithDefaults() *RegisterUserReqBody {
	this := RegisterUserReqBody{}
	return &this
}

// GetSignature returns the Signature field value if set, zero value otherwise.
func (o *RegisterUserReqBody) GetSignature() string {
	if o == nil || IsNil(o.Signature) {
		var ret string
		return ret
	}
	return *o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterUserReqBody) GetSignatureOk() (*string, bool) {
	if o == nil || IsNil(o.Signature) {
		return nil, false
	}
	return o.Signature, true
}

// HasSignature returns a boolean if a field has been set.
func (o *RegisterUserReqBody) HasSignature() bool {
	if o != nil && !IsNil(o.Signature) {
		return true
	}

	return false
}

// SetSignature gets a reference to the given string and assigns it to the Signature field.
func (o *RegisterUserReqBody) SetSignature(v string) {
	o.Signature = &v
}

// GetFid returns the Fid field value if set, zero value otherwise.
func (o *RegisterUserReqBody) GetFid() float32 {
	if o == nil || IsNil(o.Fid) {
		var ret float32
		return ret
	}
	return *o.Fid
}

// GetFidOk returns a tuple with the Fid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterUserReqBody) GetFidOk() (*float32, bool) {
	if o == nil || IsNil(o.Fid) {
		return nil, false
	}
	return o.Fid, true
}

// HasFid returns a boolean if a field has been set.
func (o *RegisterUserReqBody) HasFid() bool {
	if o != nil && !IsNil(o.Fid) {
		return true
	}

	return false
}

// SetFid gets a reference to the given float32 and assigns it to the Fid field.
func (o *RegisterUserReqBody) SetFid(v float32) {
	o.Fid = &v
}

// GetRequestedUserCustodyAddress returns the RequestedUserCustodyAddress field value if set, zero value otherwise.
func (o *RegisterUserReqBody) GetRequestedUserCustodyAddress() string {
	if o == nil || IsNil(o.RequestedUserCustodyAddress) {
		var ret string
		return ret
	}
	return *o.RequestedUserCustodyAddress
}

// GetRequestedUserCustodyAddressOk returns a tuple with the RequestedUserCustodyAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterUserReqBody) GetRequestedUserCustodyAddressOk() (*string, bool) {
	if o == nil || IsNil(o.RequestedUserCustodyAddress) {
		return nil, false
	}
	return o.RequestedUserCustodyAddress, true
}

// HasRequestedUserCustodyAddress returns a boolean if a field has been set.
func (o *RegisterUserReqBody) HasRequestedUserCustodyAddress() bool {
	if o != nil && !IsNil(o.RequestedUserCustodyAddress) {
		return true
	}

	return false
}

// SetRequestedUserCustodyAddress gets a reference to the given string and assigns it to the RequestedUserCustodyAddress field.
func (o *RegisterUserReqBody) SetRequestedUserCustodyAddress(v string) {
	o.RequestedUserCustodyAddress = &v
}

// GetDeadline returns the Deadline field value if set, zero value otherwise.
func (o *RegisterUserReqBody) GetDeadline() float32 {
	if o == nil || IsNil(o.Deadline) {
		var ret float32
		return ret
	}
	return *o.Deadline
}

// GetDeadlineOk returns a tuple with the Deadline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterUserReqBody) GetDeadlineOk() (*float32, bool) {
	if o == nil || IsNil(o.Deadline) {
		return nil, false
	}
	return o.Deadline, true
}

// HasDeadline returns a boolean if a field has been set.
func (o *RegisterUserReqBody) HasDeadline() bool {
	if o != nil && !IsNil(o.Deadline) {
		return true
	}

	return false
}

// SetDeadline gets a reference to the given float32 and assigns it to the Deadline field.
func (o *RegisterUserReqBody) SetDeadline(v float32) {
	o.Deadline = &v
}

// GetFname returns the Fname field value if set, zero value otherwise.
func (o *RegisterUserReqBody) GetFname() string {
	if o == nil || IsNil(o.Fname) {
		var ret string
		return ret
	}
	return *o.Fname
}

// GetFnameOk returns a tuple with the Fname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterUserReqBody) GetFnameOk() (*string, bool) {
	if o == nil || IsNil(o.Fname) {
		return nil, false
	}
	return o.Fname, true
}

// HasFname returns a boolean if a field has been set.
func (o *RegisterUserReqBody) HasFname() bool {
	if o != nil && !IsNil(o.Fname) {
		return true
	}

	return false
}

// SetFname gets a reference to the given string and assigns it to the Fname field.
func (o *RegisterUserReqBody) SetFname(v string) {
	o.Fname = &v
}

func (o RegisterUserReqBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegisterUserReqBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Signature) {
		toSerialize["signature"] = o.Signature
	}
	if !IsNil(o.Fid) {
		toSerialize["fid"] = o.Fid
	}
	if !IsNil(o.RequestedUserCustodyAddress) {
		toSerialize["requested_user_custody_address"] = o.RequestedUserCustodyAddress
	}
	if !IsNil(o.Deadline) {
		toSerialize["deadline"] = o.Deadline
	}
	if !IsNil(o.Fname) {
		toSerialize["fname"] = o.Fname
	}
	return toSerialize, nil
}

type NullableRegisterUserReqBody struct {
	value *RegisterUserReqBody
	isSet bool
}

func (v NullableRegisterUserReqBody) Get() *RegisterUserReqBody {
	return v.value
}

func (v *NullableRegisterUserReqBody) Set(val *RegisterUserReqBody) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisterUserReqBody) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisterUserReqBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisterUserReqBody(val *RegisterUserReqBody) *NullableRegisterUserReqBody {
	return &NullableRegisterUserReqBody{value: val, isSet: true}
}

func (v NullableRegisterUserReqBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisterUserReqBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


