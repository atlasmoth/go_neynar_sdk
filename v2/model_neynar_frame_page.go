/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the NeynarFramePage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NeynarFramePage{}

// NeynarFramePage struct for NeynarFramePage
type NeynarFramePage struct {
	// Unique identifier for the page.
	Uuid *string `json:"uuid,omitempty"`
	// The version of the page schema.
	Version *string `json:"version,omitempty"`
	// The title of the page.
	Title *string `json:"title,omitempty"`
	Image *NeynarPageImage `json:"image,omitempty"`
	Buttons []NeynarPageButton `json:"buttons,omitempty"`
	Input *NeynarPageInput `json:"input,omitempty"`
}

// NewNeynarFramePage instantiates a new NeynarFramePage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNeynarFramePage() *NeynarFramePage {
	this := NeynarFramePage{}
	var version string = "vNext"
	this.Version = &version
	return &this
}

// NewNeynarFramePageWithDefaults instantiates a new NeynarFramePage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNeynarFramePageWithDefaults() *NeynarFramePage {
	this := NeynarFramePage{}
	var version string = "vNext"
	this.Version = &version
	return &this
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *NeynarFramePage) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NeynarFramePage) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *NeynarFramePage) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *NeynarFramePage) SetUuid(v string) {
	o.Uuid = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *NeynarFramePage) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NeynarFramePage) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *NeynarFramePage) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *NeynarFramePage) SetVersion(v string) {
	o.Version = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *NeynarFramePage) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NeynarFramePage) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *NeynarFramePage) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *NeynarFramePage) SetTitle(v string) {
	o.Title = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *NeynarFramePage) GetImage() NeynarPageImage {
	if o == nil || IsNil(o.Image) {
		var ret NeynarPageImage
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NeynarFramePage) GetImageOk() (*NeynarPageImage, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *NeynarFramePage) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given NeynarPageImage and assigns it to the Image field.
func (o *NeynarFramePage) SetImage(v NeynarPageImage) {
	o.Image = &v
}

// GetButtons returns the Buttons field value if set, zero value otherwise.
func (o *NeynarFramePage) GetButtons() []NeynarPageButton {
	if o == nil || IsNil(o.Buttons) {
		var ret []NeynarPageButton
		return ret
	}
	return o.Buttons
}

// GetButtonsOk returns a tuple with the Buttons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NeynarFramePage) GetButtonsOk() ([]NeynarPageButton, bool) {
	if o == nil || IsNil(o.Buttons) {
		return nil, false
	}
	return o.Buttons, true
}

// HasButtons returns a boolean if a field has been set.
func (o *NeynarFramePage) HasButtons() bool {
	if o != nil && !IsNil(o.Buttons) {
		return true
	}

	return false
}

// SetButtons gets a reference to the given []NeynarPageButton and assigns it to the Buttons field.
func (o *NeynarFramePage) SetButtons(v []NeynarPageButton) {
	o.Buttons = v
}

// GetInput returns the Input field value if set, zero value otherwise.
func (o *NeynarFramePage) GetInput() NeynarPageInput {
	if o == nil || IsNil(o.Input) {
		var ret NeynarPageInput
		return ret
	}
	return *o.Input
}

// GetInputOk returns a tuple with the Input field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NeynarFramePage) GetInputOk() (*NeynarPageInput, bool) {
	if o == nil || IsNil(o.Input) {
		return nil, false
	}
	return o.Input, true
}

// HasInput returns a boolean if a field has been set.
func (o *NeynarFramePage) HasInput() bool {
	if o != nil && !IsNil(o.Input) {
		return true
	}

	return false
}

// SetInput gets a reference to the given NeynarPageInput and assigns it to the Input field.
func (o *NeynarFramePage) SetInput(v NeynarPageInput) {
	o.Input = &v
}

func (o NeynarFramePage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NeynarFramePage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !IsNil(o.Buttons) {
		toSerialize["buttons"] = o.Buttons
	}
	if !IsNil(o.Input) {
		toSerialize["input"] = o.Input
	}
	return toSerialize, nil
}

type NullableNeynarFramePage struct {
	value *NeynarFramePage
	isSet bool
}

func (v NullableNeynarFramePage) Get() *NeynarFramePage {
	return v.value
}

func (v *NullableNeynarFramePage) Set(val *NeynarFramePage) {
	v.value = val
	v.isSet = true
}

func (v NullableNeynarFramePage) IsSet() bool {
	return v.isSet
}

func (v *NullableNeynarFramePage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNeynarFramePage(val *NeynarFramePage) *NullableNeynarFramePage {
	return &NullableNeynarFramePage{value: val, isSet: true}
}

func (v NullableNeynarFramePage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNeynarFramePage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


