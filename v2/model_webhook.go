/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the Webhook type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Webhook{}

// Webhook struct for Webhook
type Webhook struct {
	Object *string `json:"object,omitempty"`
	WebhookId *string `json:"webhook_id,omitempty"`
	DeveloperUuid *string `json:"developer_uuid,omitempty"`
	TargetUrl *string `json:"target_url,omitempty"`
	Title *string `json:"title,omitempty"`
	Secrets []WebhookSecret `json:"secrets,omitempty"`
	Description *string `json:"description,omitempty"`
	HttpTimeout *string `json:"http_timeout,omitempty"`
	RateLimit *int32 `json:"rate_limit,omitempty"`
	Active *bool `json:"active,omitempty"`
	RateLimitDuration *string `json:"rate_limit_duration,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	DeletedAt *time.Time `json:"deleted_at,omitempty"`
	Subscription *WebhookSubscription `json:"subscription,omitempty"`
}

// NewWebhook instantiates a new Webhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhook() *Webhook {
	this := Webhook{}
	return &this
}

// NewWebhookWithDefaults instantiates a new Webhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookWithDefaults() *Webhook {
	this := Webhook{}
	return &this
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *Webhook) GetObject() string {
	if o == nil || IsNil(o.Object) {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhook) GetObjectOk() (*string, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *Webhook) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *Webhook) SetObject(v string) {
	o.Object = &v
}

// GetWebhookId returns the WebhookId field value if set, zero value otherwise.
func (o *Webhook) GetWebhookId() string {
	if o == nil || IsNil(o.WebhookId) {
		var ret string
		return ret
	}
	return *o.WebhookId
}

// GetWebhookIdOk returns a tuple with the WebhookId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhook) GetWebhookIdOk() (*string, bool) {
	if o == nil || IsNil(o.WebhookId) {
		return nil, false
	}
	return o.WebhookId, true
}

// HasWebhookId returns a boolean if a field has been set.
func (o *Webhook) HasWebhookId() bool {
	if o != nil && !IsNil(o.WebhookId) {
		return true
	}

	return false
}

// SetWebhookId gets a reference to the given string and assigns it to the WebhookId field.
func (o *Webhook) SetWebhookId(v string) {
	o.WebhookId = &v
}

// GetDeveloperUuid returns the DeveloperUuid field value if set, zero value otherwise.
func (o *Webhook) GetDeveloperUuid() string {
	if o == nil || IsNil(o.DeveloperUuid) {
		var ret string
		return ret
	}
	return *o.DeveloperUuid
}

// GetDeveloperUuidOk returns a tuple with the DeveloperUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhook) GetDeveloperUuidOk() (*string, bool) {
	if o == nil || IsNil(o.DeveloperUuid) {
		return nil, false
	}
	return o.DeveloperUuid, true
}

// HasDeveloperUuid returns a boolean if a field has been set.
func (o *Webhook) HasDeveloperUuid() bool {
	if o != nil && !IsNil(o.DeveloperUuid) {
		return true
	}

	return false
}

// SetDeveloperUuid gets a reference to the given string and assigns it to the DeveloperUuid field.
func (o *Webhook) SetDeveloperUuid(v string) {
	o.DeveloperUuid = &v
}

// GetTargetUrl returns the TargetUrl field value if set, zero value otherwise.
func (o *Webhook) GetTargetUrl() string {
	if o == nil || IsNil(o.TargetUrl) {
		var ret string
		return ret
	}
	return *o.TargetUrl
}

// GetTargetUrlOk returns a tuple with the TargetUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhook) GetTargetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.TargetUrl) {
		return nil, false
	}
	return o.TargetUrl, true
}

// HasTargetUrl returns a boolean if a field has been set.
func (o *Webhook) HasTargetUrl() bool {
	if o != nil && !IsNil(o.TargetUrl) {
		return true
	}

	return false
}

// SetTargetUrl gets a reference to the given string and assigns it to the TargetUrl field.
func (o *Webhook) SetTargetUrl(v string) {
	o.TargetUrl = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *Webhook) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhook) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *Webhook) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *Webhook) SetTitle(v string) {
	o.Title = &v
}

// GetSecrets returns the Secrets field value if set, zero value otherwise.
func (o *Webhook) GetSecrets() []WebhookSecret {
	if o == nil || IsNil(o.Secrets) {
		var ret []WebhookSecret
		return ret
	}
	return o.Secrets
}

// GetSecretsOk returns a tuple with the Secrets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhook) GetSecretsOk() ([]WebhookSecret, bool) {
	if o == nil || IsNil(o.Secrets) {
		return nil, false
	}
	return o.Secrets, true
}

// HasSecrets returns a boolean if a field has been set.
func (o *Webhook) HasSecrets() bool {
	if o != nil && !IsNil(o.Secrets) {
		return true
	}

	return false
}

// SetSecrets gets a reference to the given []WebhookSecret and assigns it to the Secrets field.
func (o *Webhook) SetSecrets(v []WebhookSecret) {
	o.Secrets = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Webhook) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhook) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Webhook) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Webhook) SetDescription(v string) {
	o.Description = &v
}

// GetHttpTimeout returns the HttpTimeout field value if set, zero value otherwise.
func (o *Webhook) GetHttpTimeout() string {
	if o == nil || IsNil(o.HttpTimeout) {
		var ret string
		return ret
	}
	return *o.HttpTimeout
}

// GetHttpTimeoutOk returns a tuple with the HttpTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhook) GetHttpTimeoutOk() (*string, bool) {
	if o == nil || IsNil(o.HttpTimeout) {
		return nil, false
	}
	return o.HttpTimeout, true
}

// HasHttpTimeout returns a boolean if a field has been set.
func (o *Webhook) HasHttpTimeout() bool {
	if o != nil && !IsNil(o.HttpTimeout) {
		return true
	}

	return false
}

// SetHttpTimeout gets a reference to the given string and assigns it to the HttpTimeout field.
func (o *Webhook) SetHttpTimeout(v string) {
	o.HttpTimeout = &v
}

// GetRateLimit returns the RateLimit field value if set, zero value otherwise.
func (o *Webhook) GetRateLimit() int32 {
	if o == nil || IsNil(o.RateLimit) {
		var ret int32
		return ret
	}
	return *o.RateLimit
}

// GetRateLimitOk returns a tuple with the RateLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhook) GetRateLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.RateLimit) {
		return nil, false
	}
	return o.RateLimit, true
}

// HasRateLimit returns a boolean if a field has been set.
func (o *Webhook) HasRateLimit() bool {
	if o != nil && !IsNil(o.RateLimit) {
		return true
	}

	return false
}

// SetRateLimit gets a reference to the given int32 and assigns it to the RateLimit field.
func (o *Webhook) SetRateLimit(v int32) {
	o.RateLimit = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *Webhook) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhook) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *Webhook) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *Webhook) SetActive(v bool) {
	o.Active = &v
}

// GetRateLimitDuration returns the RateLimitDuration field value if set, zero value otherwise.
func (o *Webhook) GetRateLimitDuration() string {
	if o == nil || IsNil(o.RateLimitDuration) {
		var ret string
		return ret
	}
	return *o.RateLimitDuration
}

// GetRateLimitDurationOk returns a tuple with the RateLimitDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhook) GetRateLimitDurationOk() (*string, bool) {
	if o == nil || IsNil(o.RateLimitDuration) {
		return nil, false
	}
	return o.RateLimitDuration, true
}

// HasRateLimitDuration returns a boolean if a field has been set.
func (o *Webhook) HasRateLimitDuration() bool {
	if o != nil && !IsNil(o.RateLimitDuration) {
		return true
	}

	return false
}

// SetRateLimitDuration gets a reference to the given string and assigns it to the RateLimitDuration field.
func (o *Webhook) SetRateLimitDuration(v string) {
	o.RateLimitDuration = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Webhook) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhook) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Webhook) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Webhook) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Webhook) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhook) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Webhook) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *Webhook) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *Webhook) GetDeletedAt() time.Time {
	if o == nil || IsNil(o.DeletedAt) {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhook) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *Webhook) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given time.Time and assigns it to the DeletedAt field.
func (o *Webhook) SetDeletedAt(v time.Time) {
	o.DeletedAt = &v
}

// GetSubscription returns the Subscription field value if set, zero value otherwise.
func (o *Webhook) GetSubscription() WebhookSubscription {
	if o == nil || IsNil(o.Subscription) {
		var ret WebhookSubscription
		return ret
	}
	return *o.Subscription
}

// GetSubscriptionOk returns a tuple with the Subscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhook) GetSubscriptionOk() (*WebhookSubscription, bool) {
	if o == nil || IsNil(o.Subscription) {
		return nil, false
	}
	return o.Subscription, true
}

// HasSubscription returns a boolean if a field has been set.
func (o *Webhook) HasSubscription() bool {
	if o != nil && !IsNil(o.Subscription) {
		return true
	}

	return false
}

// SetSubscription gets a reference to the given WebhookSubscription and assigns it to the Subscription field.
func (o *Webhook) SetSubscription(v WebhookSubscription) {
	o.Subscription = &v
}

func (o Webhook) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Webhook) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	if !IsNil(o.WebhookId) {
		toSerialize["webhook_id"] = o.WebhookId
	}
	if !IsNil(o.DeveloperUuid) {
		toSerialize["developer_uuid"] = o.DeveloperUuid
	}
	if !IsNil(o.TargetUrl) {
		toSerialize["target_url"] = o.TargetUrl
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Secrets) {
		toSerialize["secrets"] = o.Secrets
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.HttpTimeout) {
		toSerialize["http_timeout"] = o.HttpTimeout
	}
	if !IsNil(o.RateLimit) {
		toSerialize["rate_limit"] = o.RateLimit
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.RateLimitDuration) {
		toSerialize["rate_limit_duration"] = o.RateLimitDuration
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !IsNil(o.Subscription) {
		toSerialize["subscription"] = o.Subscription
	}
	return toSerialize, nil
}

type NullableWebhook struct {
	value *Webhook
	isSet bool
}

func (v NullableWebhook) Get() *Webhook {
	return v.value
}

func (v *NullableWebhook) Set(val *Webhook) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhook(val *Webhook) *NullableWebhook {
	return &NullableWebhook{value: val, isSet: true}
}

func (v NullableWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


