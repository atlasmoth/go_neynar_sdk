/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TrendingChannelResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrendingChannelResponse{}

// TrendingChannelResponse struct for TrendingChannelResponse
type TrendingChannelResponse struct {
	Channels []ChannelActivity `json:"channels,omitempty"`
	Next *NextCursor `json:"next,omitempty"`
}

// NewTrendingChannelResponse instantiates a new TrendingChannelResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrendingChannelResponse() *TrendingChannelResponse {
	this := TrendingChannelResponse{}
	return &this
}

// NewTrendingChannelResponseWithDefaults instantiates a new TrendingChannelResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrendingChannelResponseWithDefaults() *TrendingChannelResponse {
	this := TrendingChannelResponse{}
	return &this
}

// GetChannels returns the Channels field value if set, zero value otherwise.
func (o *TrendingChannelResponse) GetChannels() []ChannelActivity {
	if o == nil || IsNil(o.Channels) {
		var ret []ChannelActivity
		return ret
	}
	return o.Channels
}

// GetChannelsOk returns a tuple with the Channels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrendingChannelResponse) GetChannelsOk() ([]ChannelActivity, bool) {
	if o == nil || IsNil(o.Channels) {
		return nil, false
	}
	return o.Channels, true
}

// HasChannels returns a boolean if a field has been set.
func (o *TrendingChannelResponse) HasChannels() bool {
	if o != nil && !IsNil(o.Channels) {
		return true
	}

	return false
}

// SetChannels gets a reference to the given []ChannelActivity and assigns it to the Channels field.
func (o *TrendingChannelResponse) SetChannels(v []ChannelActivity) {
	o.Channels = v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *TrendingChannelResponse) GetNext() NextCursor {
	if o == nil || IsNil(o.Next) {
		var ret NextCursor
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrendingChannelResponse) GetNextOk() (*NextCursor, bool) {
	if o == nil || IsNil(o.Next) {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *TrendingChannelResponse) HasNext() bool {
	if o != nil && !IsNil(o.Next) {
		return true
	}

	return false
}

// SetNext gets a reference to the given NextCursor and assigns it to the Next field.
func (o *TrendingChannelResponse) SetNext(v NextCursor) {
	o.Next = &v
}

func (o TrendingChannelResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrendingChannelResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Channels) {
		toSerialize["channels"] = o.Channels
	}
	if !IsNil(o.Next) {
		toSerialize["next"] = o.Next
	}
	return toSerialize, nil
}

type NullableTrendingChannelResponse struct {
	value *TrendingChannelResponse
	isSet bool
}

func (v NullableTrendingChannelResponse) Get() *TrendingChannelResponse {
	return v.value
}

func (v *NullableTrendingChannelResponse) Set(val *TrendingChannelResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTrendingChannelResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTrendingChannelResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrendingChannelResponse(val *TrendingChannelResponse) *NullableTrendingChannelResponse {
	return &NullableTrendingChannelResponse{value: val, isSet: true}
}

func (v NullableTrendingChannelResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrendingChannelResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


