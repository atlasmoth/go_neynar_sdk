/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SubscriptionStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionStatus{}

// SubscriptionStatus struct for SubscriptionStatus
type SubscriptionStatus struct {
	Object *string `json:"object,omitempty"`
	Status *bool `json:"status,omitempty"`
	ExpiresAt NullableInt64 `json:"expires_at,omitempty"`
	SubscribedAt NullableInt64 `json:"subscribed_at,omitempty"`
	Tier *SubscriptionTier `json:"tier,omitempty"`
}

// NewSubscriptionStatus instantiates a new SubscriptionStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionStatus() *SubscriptionStatus {
	this := SubscriptionStatus{}
	return &this
}

// NewSubscriptionStatusWithDefaults instantiates a new SubscriptionStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionStatusWithDefaults() *SubscriptionStatus {
	this := SubscriptionStatus{}
	return &this
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *SubscriptionStatus) GetObject() string {
	if o == nil || IsNil(o.Object) {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionStatus) GetObjectOk() (*string, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *SubscriptionStatus) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *SubscriptionStatus) SetObject(v string) {
	o.Object = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SubscriptionStatus) GetStatus() bool {
	if o == nil || IsNil(o.Status) {
		var ret bool
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionStatus) GetStatusOk() (*bool, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SubscriptionStatus) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given bool and assigns it to the Status field.
func (o *SubscriptionStatus) SetStatus(v bool) {
	o.Status = &v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionStatus) GetExpiresAt() int64 {
	if o == nil || IsNil(o.ExpiresAt.Get()) {
		var ret int64
		return ret
	}
	return *o.ExpiresAt.Get()
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionStatus) GetExpiresAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiresAt.Get(), o.ExpiresAt.IsSet()
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *SubscriptionStatus) HasExpiresAt() bool {
	if o != nil && o.ExpiresAt.IsSet() {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given NullableInt64 and assigns it to the ExpiresAt field.
func (o *SubscriptionStatus) SetExpiresAt(v int64) {
	o.ExpiresAt.Set(&v)
}
// SetExpiresAtNil sets the value for ExpiresAt to be an explicit nil
func (o *SubscriptionStatus) SetExpiresAtNil() {
	o.ExpiresAt.Set(nil)
}

// UnsetExpiresAt ensures that no value is present for ExpiresAt, not even an explicit nil
func (o *SubscriptionStatus) UnsetExpiresAt() {
	o.ExpiresAt.Unset()
}

// GetSubscribedAt returns the SubscribedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionStatus) GetSubscribedAt() int64 {
	if o == nil || IsNil(o.SubscribedAt.Get()) {
		var ret int64
		return ret
	}
	return *o.SubscribedAt.Get()
}

// GetSubscribedAtOk returns a tuple with the SubscribedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionStatus) GetSubscribedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubscribedAt.Get(), o.SubscribedAt.IsSet()
}

// HasSubscribedAt returns a boolean if a field has been set.
func (o *SubscriptionStatus) HasSubscribedAt() bool {
	if o != nil && o.SubscribedAt.IsSet() {
		return true
	}

	return false
}

// SetSubscribedAt gets a reference to the given NullableInt64 and assigns it to the SubscribedAt field.
func (o *SubscriptionStatus) SetSubscribedAt(v int64) {
	o.SubscribedAt.Set(&v)
}
// SetSubscribedAtNil sets the value for SubscribedAt to be an explicit nil
func (o *SubscriptionStatus) SetSubscribedAtNil() {
	o.SubscribedAt.Set(nil)
}

// UnsetSubscribedAt ensures that no value is present for SubscribedAt, not even an explicit nil
func (o *SubscriptionStatus) UnsetSubscribedAt() {
	o.SubscribedAt.Unset()
}

// GetTier returns the Tier field value if set, zero value otherwise.
func (o *SubscriptionStatus) GetTier() SubscriptionTier {
	if o == nil || IsNil(o.Tier) {
		var ret SubscriptionTier
		return ret
	}
	return *o.Tier
}

// GetTierOk returns a tuple with the Tier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionStatus) GetTierOk() (*SubscriptionTier, bool) {
	if o == nil || IsNil(o.Tier) {
		return nil, false
	}
	return o.Tier, true
}

// HasTier returns a boolean if a field has been set.
func (o *SubscriptionStatus) HasTier() bool {
	if o != nil && !IsNil(o.Tier) {
		return true
	}

	return false
}

// SetTier gets a reference to the given SubscriptionTier and assigns it to the Tier field.
func (o *SubscriptionStatus) SetTier(v SubscriptionTier) {
	o.Tier = &v
}

func (o SubscriptionStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.ExpiresAt.IsSet() {
		toSerialize["expires_at"] = o.ExpiresAt.Get()
	}
	if o.SubscribedAt.IsSet() {
		toSerialize["subscribed_at"] = o.SubscribedAt.Get()
	}
	if !IsNil(o.Tier) {
		toSerialize["tier"] = o.Tier
	}
	return toSerialize, nil
}

type NullableSubscriptionStatus struct {
	value *SubscriptionStatus
	isSet bool
}

func (v NullableSubscriptionStatus) Get() *SubscriptionStatus {
	return v.value
}

func (v *NullableSubscriptionStatus) Set(val *SubscriptionStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionStatus(val *SubscriptionStatus) *NullableSubscriptionStatus {
	return &NullableSubscriptionStatus{value: val, isSet: true}
}

func (v NullableSubscriptionStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


