/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CastResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CastResponse{}

// CastResponse struct for CastResponse
type CastResponse struct {
	Cast *CastWithInteractions `json:"cast,omitempty"`
}

// NewCastResponse instantiates a new CastResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCastResponse() *CastResponse {
	this := CastResponse{}
	return &this
}

// NewCastResponseWithDefaults instantiates a new CastResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCastResponseWithDefaults() *CastResponse {
	this := CastResponse{}
	return &this
}

// GetCast returns the Cast field value if set, zero value otherwise.
func (o *CastResponse) GetCast() CastWithInteractions {
	if o == nil || IsNil(o.Cast) {
		var ret CastWithInteractions
		return ret
	}
	return *o.Cast
}

// GetCastOk returns a tuple with the Cast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CastResponse) GetCastOk() (*CastWithInteractions, bool) {
	if o == nil || IsNil(o.Cast) {
		return nil, false
	}
	return o.Cast, true
}

// HasCast returns a boolean if a field has been set.
func (o *CastResponse) HasCast() bool {
	if o != nil && !IsNil(o.Cast) {
		return true
	}

	return false
}

// SetCast gets a reference to the given CastWithInteractions and assigns it to the Cast field.
func (o *CastResponse) SetCast(v CastWithInteractions) {
	o.Cast = &v
}

func (o CastResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CastResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cast) {
		toSerialize["cast"] = o.Cast
	}
	return toSerialize, nil
}

type NullableCastResponse struct {
	value *CastResponse
	isSet bool
}

func (v NullableCastResponse) Get() *CastResponse {
	return v.value
}

func (v *NullableCastResponse) Set(val *CastResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCastResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCastResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCastResponse(val *CastResponse) *NullableCastResponse {
	return &NullableCastResponse{value: val, isSet: true}
}

func (v NullableCastResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCastResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


