/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StorageAllocationsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StorageAllocationsResponse{}

// StorageAllocationsResponse struct for StorageAllocationsResponse
type StorageAllocationsResponse struct {
	TotalActiveUnits *int32 `json:"total_active_units,omitempty"`
	Allocations []StorageAllocation `json:"allocations,omitempty"`
}

// NewStorageAllocationsResponse instantiates a new StorageAllocationsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStorageAllocationsResponse() *StorageAllocationsResponse {
	this := StorageAllocationsResponse{}
	return &this
}

// NewStorageAllocationsResponseWithDefaults instantiates a new StorageAllocationsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStorageAllocationsResponseWithDefaults() *StorageAllocationsResponse {
	this := StorageAllocationsResponse{}
	return &this
}

// GetTotalActiveUnits returns the TotalActiveUnits field value if set, zero value otherwise.
func (o *StorageAllocationsResponse) GetTotalActiveUnits() int32 {
	if o == nil || IsNil(o.TotalActiveUnits) {
		var ret int32
		return ret
	}
	return *o.TotalActiveUnits
}

// GetTotalActiveUnitsOk returns a tuple with the TotalActiveUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageAllocationsResponse) GetTotalActiveUnitsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalActiveUnits) {
		return nil, false
	}
	return o.TotalActiveUnits, true
}

// HasTotalActiveUnits returns a boolean if a field has been set.
func (o *StorageAllocationsResponse) HasTotalActiveUnits() bool {
	if o != nil && !IsNil(o.TotalActiveUnits) {
		return true
	}

	return false
}

// SetTotalActiveUnits gets a reference to the given int32 and assigns it to the TotalActiveUnits field.
func (o *StorageAllocationsResponse) SetTotalActiveUnits(v int32) {
	o.TotalActiveUnits = &v
}

// GetAllocations returns the Allocations field value if set, zero value otherwise.
func (o *StorageAllocationsResponse) GetAllocations() []StorageAllocation {
	if o == nil || IsNil(o.Allocations) {
		var ret []StorageAllocation
		return ret
	}
	return o.Allocations
}

// GetAllocationsOk returns a tuple with the Allocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageAllocationsResponse) GetAllocationsOk() ([]StorageAllocation, bool) {
	if o == nil || IsNil(o.Allocations) {
		return nil, false
	}
	return o.Allocations, true
}

// HasAllocations returns a boolean if a field has been set.
func (o *StorageAllocationsResponse) HasAllocations() bool {
	if o != nil && !IsNil(o.Allocations) {
		return true
	}

	return false
}

// SetAllocations gets a reference to the given []StorageAllocation and assigns it to the Allocations field.
func (o *StorageAllocationsResponse) SetAllocations(v []StorageAllocation) {
	o.Allocations = v
}

func (o StorageAllocationsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StorageAllocationsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalActiveUnits) {
		toSerialize["total_active_units"] = o.TotalActiveUnits
	}
	if !IsNil(o.Allocations) {
		toSerialize["allocations"] = o.Allocations
	}
	return toSerialize, nil
}

type NullableStorageAllocationsResponse struct {
	value *StorageAllocationsResponse
	isSet bool
}

func (v NullableStorageAllocationsResponse) Get() *StorageAllocationsResponse {
	return v.value
}

func (v *NullableStorageAllocationsResponse) Set(val *StorageAllocationsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableStorageAllocationsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableStorageAllocationsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStorageAllocationsResponse(val *StorageAllocationsResponse) *NullableStorageAllocationsResponse {
	return &NullableStorageAllocationsResponse{value: val, isSet: true}
}

func (v NullableStorageAllocationsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStorageAllocationsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


