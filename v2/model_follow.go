/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Follow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Follow{}

// Follow struct for Follow
type Follow struct {
	Object *string `json:"object,omitempty"`
	User *User `json:"user,omitempty"`
}

// NewFollow instantiates a new Follow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFollow() *Follow {
	this := Follow{}
	return &this
}

// NewFollowWithDefaults instantiates a new Follow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFollowWithDefaults() *Follow {
	this := Follow{}
	return &this
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *Follow) GetObject() string {
	if o == nil || IsNil(o.Object) {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Follow) GetObjectOk() (*string, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *Follow) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *Follow) SetObject(v string) {
	o.Object = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *Follow) GetUser() User {
	if o == nil || IsNil(o.User) {
		var ret User
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Follow) GetUserOk() (*User, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *Follow) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given User and assigns it to the User field.
func (o *Follow) SetUser(v User) {
	o.User = &v
}

func (o Follow) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Follow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableFollow struct {
	value *Follow
	isSet bool
}

func (v NullableFollow) Get() *Follow {
	return v.value
}

func (v *NullableFollow) Set(val *Follow) {
	v.value = val
	v.isSet = true
}

func (v NullableFollow) IsSet() bool {
	return v.isSet
}

func (v *NullableFollow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFollow(val *Follow) *NullableFollow {
	return &NullableFollow{value: val, isSet: true}
}

func (v NullableFollow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFollow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


