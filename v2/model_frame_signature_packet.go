/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FrameSignaturePacket type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FrameSignaturePacket{}

// FrameSignaturePacket The Frame Signature Packet (https://docs.farcaster.xyz/developers/frames/spec#frame-signature-packet)
type FrameSignaturePacket struct {
	UntrustedData *FrameSignaturePacketUntrustedData `json:"untrustedData,omitempty"`
	TrustedData *FrameSignaturePacketTrustedData `json:"trustedData,omitempty"`
}

// NewFrameSignaturePacket instantiates a new FrameSignaturePacket object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFrameSignaturePacket() *FrameSignaturePacket {
	this := FrameSignaturePacket{}
	return &this
}

// NewFrameSignaturePacketWithDefaults instantiates a new FrameSignaturePacket object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFrameSignaturePacketWithDefaults() *FrameSignaturePacket {
	this := FrameSignaturePacket{}
	return &this
}

// GetUntrustedData returns the UntrustedData field value if set, zero value otherwise.
func (o *FrameSignaturePacket) GetUntrustedData() FrameSignaturePacketUntrustedData {
	if o == nil || IsNil(o.UntrustedData) {
		var ret FrameSignaturePacketUntrustedData
		return ret
	}
	return *o.UntrustedData
}

// GetUntrustedDataOk returns a tuple with the UntrustedData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameSignaturePacket) GetUntrustedDataOk() (*FrameSignaturePacketUntrustedData, bool) {
	if o == nil || IsNil(o.UntrustedData) {
		return nil, false
	}
	return o.UntrustedData, true
}

// HasUntrustedData returns a boolean if a field has been set.
func (o *FrameSignaturePacket) HasUntrustedData() bool {
	if o != nil && !IsNil(o.UntrustedData) {
		return true
	}

	return false
}

// SetUntrustedData gets a reference to the given FrameSignaturePacketUntrustedData and assigns it to the UntrustedData field.
func (o *FrameSignaturePacket) SetUntrustedData(v FrameSignaturePacketUntrustedData) {
	o.UntrustedData = &v
}

// GetTrustedData returns the TrustedData field value if set, zero value otherwise.
func (o *FrameSignaturePacket) GetTrustedData() FrameSignaturePacketTrustedData {
	if o == nil || IsNil(o.TrustedData) {
		var ret FrameSignaturePacketTrustedData
		return ret
	}
	return *o.TrustedData
}

// GetTrustedDataOk returns a tuple with the TrustedData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameSignaturePacket) GetTrustedDataOk() (*FrameSignaturePacketTrustedData, bool) {
	if o == nil || IsNil(o.TrustedData) {
		return nil, false
	}
	return o.TrustedData, true
}

// HasTrustedData returns a boolean if a field has been set.
func (o *FrameSignaturePacket) HasTrustedData() bool {
	if o != nil && !IsNil(o.TrustedData) {
		return true
	}

	return false
}

// SetTrustedData gets a reference to the given FrameSignaturePacketTrustedData and assigns it to the TrustedData field.
func (o *FrameSignaturePacket) SetTrustedData(v FrameSignaturePacketTrustedData) {
	o.TrustedData = &v
}

func (o FrameSignaturePacket) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FrameSignaturePacket) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UntrustedData) {
		toSerialize["untrustedData"] = o.UntrustedData
	}
	if !IsNil(o.TrustedData) {
		toSerialize["trustedData"] = o.TrustedData
	}
	return toSerialize, nil
}

type NullableFrameSignaturePacket struct {
	value *FrameSignaturePacket
	isSet bool
}

func (v NullableFrameSignaturePacket) Get() *FrameSignaturePacket {
	return v.value
}

func (v *NullableFrameSignaturePacket) Set(val *FrameSignaturePacket) {
	v.value = val
	v.isSet = true
}

func (v NullableFrameSignaturePacket) IsSet() bool {
	return v.isSet
}

func (v *NullableFrameSignaturePacket) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFrameSignaturePacket(val *FrameSignaturePacket) *NullableFrameSignaturePacket {
	return &NullableFrameSignaturePacket{value: val, isSet: true}
}

func (v NullableFrameSignaturePacket) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFrameSignaturePacket) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


