/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CastsResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CastsResponseResult{}

// CastsResponseResult struct for CastsResponseResult
type CastsResponseResult struct {
	Casts []CastWithInteractions `json:"casts,omitempty"`
}

// NewCastsResponseResult instantiates a new CastsResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCastsResponseResult() *CastsResponseResult {
	this := CastsResponseResult{}
	return &this
}

// NewCastsResponseResultWithDefaults instantiates a new CastsResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCastsResponseResultWithDefaults() *CastsResponseResult {
	this := CastsResponseResult{}
	return &this
}

// GetCasts returns the Casts field value if set, zero value otherwise.
func (o *CastsResponseResult) GetCasts() []CastWithInteractions {
	if o == nil || IsNil(o.Casts) {
		var ret []CastWithInteractions
		return ret
	}
	return o.Casts
}

// GetCastsOk returns a tuple with the Casts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CastsResponseResult) GetCastsOk() ([]CastWithInteractions, bool) {
	if o == nil || IsNil(o.Casts) {
		return nil, false
	}
	return o.Casts, true
}

// HasCasts returns a boolean if a field has been set.
func (o *CastsResponseResult) HasCasts() bool {
	if o != nil && !IsNil(o.Casts) {
		return true
	}

	return false
}

// SetCasts gets a reference to the given []CastWithInteractions and assigns it to the Casts field.
func (o *CastsResponseResult) SetCasts(v []CastWithInteractions) {
	o.Casts = v
}

func (o CastsResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CastsResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Casts) {
		toSerialize["casts"] = o.Casts
	}
	return toSerialize, nil
}

type NullableCastsResponseResult struct {
	value *CastsResponseResult
	isSet bool
}

func (v NullableCastsResponseResult) Get() *CastsResponseResult {
	return v.value
}

func (v *NullableCastsResponseResult) Set(val *CastsResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableCastsResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableCastsResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCastsResponseResult(val *CastsResponseResult) *NullableCastsResponseResult {
	return &NullableCastsResponseResult{value: val, isSet: true}
}

func (v NullableCastsResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCastsResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


