/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Subscription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Subscription{}

// Subscription struct for Subscription
type Subscription struct {
	Object *string `json:"object,omitempty"`
	ProviderName *string `json:"provider_name,omitempty"`
	ContractAddress *string `json:"contract_address,omitempty"`
	Chain *int32 `json:"chain,omitempty"`
	Metadata *SubscriptionMetadata `json:"metadata,omitempty"`
	OwnerAddress *string `json:"owner_address,omitempty"`
	Price *SubscriptionPrice `json:"price,omitempty"`
	Tiers []SubscriptionTier `json:"tiers,omitempty"`
	ProtocolVersion *int32 `json:"protocol_version,omitempty"`
	Token *SubscriptionToken `json:"token,omitempty"`
}

// NewSubscription instantiates a new Subscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscription() *Subscription {
	this := Subscription{}
	return &this
}

// NewSubscriptionWithDefaults instantiates a new Subscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionWithDefaults() *Subscription {
	this := Subscription{}
	return &this
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *Subscription) GetObject() string {
	if o == nil || IsNil(o.Object) {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetObjectOk() (*string, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *Subscription) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *Subscription) SetObject(v string) {
	o.Object = &v
}

// GetProviderName returns the ProviderName field value if set, zero value otherwise.
func (o *Subscription) GetProviderName() string {
	if o == nil || IsNil(o.ProviderName) {
		var ret string
		return ret
	}
	return *o.ProviderName
}

// GetProviderNameOk returns a tuple with the ProviderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetProviderNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderName) {
		return nil, false
	}
	return o.ProviderName, true
}

// HasProviderName returns a boolean if a field has been set.
func (o *Subscription) HasProviderName() bool {
	if o != nil && !IsNil(o.ProviderName) {
		return true
	}

	return false
}

// SetProviderName gets a reference to the given string and assigns it to the ProviderName field.
func (o *Subscription) SetProviderName(v string) {
	o.ProviderName = &v
}

// GetContractAddress returns the ContractAddress field value if set, zero value otherwise.
func (o *Subscription) GetContractAddress() string {
	if o == nil || IsNil(o.ContractAddress) {
		var ret string
		return ret
	}
	return *o.ContractAddress
}

// GetContractAddressOk returns a tuple with the ContractAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetContractAddressOk() (*string, bool) {
	if o == nil || IsNil(o.ContractAddress) {
		return nil, false
	}
	return o.ContractAddress, true
}

// HasContractAddress returns a boolean if a field has been set.
func (o *Subscription) HasContractAddress() bool {
	if o != nil && !IsNil(o.ContractAddress) {
		return true
	}

	return false
}

// SetContractAddress gets a reference to the given string and assigns it to the ContractAddress field.
func (o *Subscription) SetContractAddress(v string) {
	o.ContractAddress = &v
}

// GetChain returns the Chain field value if set, zero value otherwise.
func (o *Subscription) GetChain() int32 {
	if o == nil || IsNil(o.Chain) {
		var ret int32
		return ret
	}
	return *o.Chain
}

// GetChainOk returns a tuple with the Chain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetChainOk() (*int32, bool) {
	if o == nil || IsNil(o.Chain) {
		return nil, false
	}
	return o.Chain, true
}

// HasChain returns a boolean if a field has been set.
func (o *Subscription) HasChain() bool {
	if o != nil && !IsNil(o.Chain) {
		return true
	}

	return false
}

// SetChain gets a reference to the given int32 and assigns it to the Chain field.
func (o *Subscription) SetChain(v int32) {
	o.Chain = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *Subscription) GetMetadata() SubscriptionMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret SubscriptionMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetMetadataOk() (*SubscriptionMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *Subscription) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given SubscriptionMetadata and assigns it to the Metadata field.
func (o *Subscription) SetMetadata(v SubscriptionMetadata) {
	o.Metadata = &v
}

// GetOwnerAddress returns the OwnerAddress field value if set, zero value otherwise.
func (o *Subscription) GetOwnerAddress() string {
	if o == nil || IsNil(o.OwnerAddress) {
		var ret string
		return ret
	}
	return *o.OwnerAddress
}

// GetOwnerAddressOk returns a tuple with the OwnerAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetOwnerAddressOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerAddress) {
		return nil, false
	}
	return o.OwnerAddress, true
}

// HasOwnerAddress returns a boolean if a field has been set.
func (o *Subscription) HasOwnerAddress() bool {
	if o != nil && !IsNil(o.OwnerAddress) {
		return true
	}

	return false
}

// SetOwnerAddress gets a reference to the given string and assigns it to the OwnerAddress field.
func (o *Subscription) SetOwnerAddress(v string) {
	o.OwnerAddress = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *Subscription) GetPrice() SubscriptionPrice {
	if o == nil || IsNil(o.Price) {
		var ret SubscriptionPrice
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetPriceOk() (*SubscriptionPrice, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *Subscription) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given SubscriptionPrice and assigns it to the Price field.
func (o *Subscription) SetPrice(v SubscriptionPrice) {
	o.Price = &v
}

// GetTiers returns the Tiers field value if set, zero value otherwise.
func (o *Subscription) GetTiers() []SubscriptionTier {
	if o == nil || IsNil(o.Tiers) {
		var ret []SubscriptionTier
		return ret
	}
	return o.Tiers
}

// GetTiersOk returns a tuple with the Tiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetTiersOk() ([]SubscriptionTier, bool) {
	if o == nil || IsNil(o.Tiers) {
		return nil, false
	}
	return o.Tiers, true
}

// HasTiers returns a boolean if a field has been set.
func (o *Subscription) HasTiers() bool {
	if o != nil && !IsNil(o.Tiers) {
		return true
	}

	return false
}

// SetTiers gets a reference to the given []SubscriptionTier and assigns it to the Tiers field.
func (o *Subscription) SetTiers(v []SubscriptionTier) {
	o.Tiers = v
}

// GetProtocolVersion returns the ProtocolVersion field value if set, zero value otherwise.
func (o *Subscription) GetProtocolVersion() int32 {
	if o == nil || IsNil(o.ProtocolVersion) {
		var ret int32
		return ret
	}
	return *o.ProtocolVersion
}

// GetProtocolVersionOk returns a tuple with the ProtocolVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetProtocolVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.ProtocolVersion) {
		return nil, false
	}
	return o.ProtocolVersion, true
}

// HasProtocolVersion returns a boolean if a field has been set.
func (o *Subscription) HasProtocolVersion() bool {
	if o != nil && !IsNil(o.ProtocolVersion) {
		return true
	}

	return false
}

// SetProtocolVersion gets a reference to the given int32 and assigns it to the ProtocolVersion field.
func (o *Subscription) SetProtocolVersion(v int32) {
	o.ProtocolVersion = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *Subscription) GetToken() SubscriptionToken {
	if o == nil || IsNil(o.Token) {
		var ret SubscriptionToken
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetTokenOk() (*SubscriptionToken, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *Subscription) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given SubscriptionToken and assigns it to the Token field.
func (o *Subscription) SetToken(v SubscriptionToken) {
	o.Token = &v
}

func (o Subscription) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Subscription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	if !IsNil(o.ProviderName) {
		toSerialize["provider_name"] = o.ProviderName
	}
	if !IsNil(o.ContractAddress) {
		toSerialize["contract_address"] = o.ContractAddress
	}
	if !IsNil(o.Chain) {
		toSerialize["chain"] = o.Chain
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.OwnerAddress) {
		toSerialize["owner_address"] = o.OwnerAddress
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Tiers) {
		toSerialize["tiers"] = o.Tiers
	}
	if !IsNil(o.ProtocolVersion) {
		toSerialize["protocol_version"] = o.ProtocolVersion
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullableSubscription struct {
	value *Subscription
	isSet bool
}

func (v NullableSubscription) Get() *Subscription {
	return v.value
}

func (v *NullableSubscription) Set(val *Subscription) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscription(val *Subscription) *NullableSubscription {
	return &NullableSubscription{value: val, isSet: true}
}

func (v NullableSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


