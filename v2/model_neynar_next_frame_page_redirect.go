/*
Farcaster API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the NeynarNextFramePageRedirect type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NeynarNextFramePageRedirect{}

// NeynarNextFramePageRedirect struct for NeynarNextFramePageRedirect
type NeynarNextFramePageRedirect struct {
	// The URL to redirect to.
	RedirectUrl *string `json:"redirect_url,omitempty"`
}

// NewNeynarNextFramePageRedirect instantiates a new NeynarNextFramePageRedirect object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNeynarNextFramePageRedirect() *NeynarNextFramePageRedirect {
	this := NeynarNextFramePageRedirect{}
	return &this
}

// NewNeynarNextFramePageRedirectWithDefaults instantiates a new NeynarNextFramePageRedirect object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNeynarNextFramePageRedirectWithDefaults() *NeynarNextFramePageRedirect {
	this := NeynarNextFramePageRedirect{}
	return &this
}

// GetRedirectUrl returns the RedirectUrl field value if set, zero value otherwise.
func (o *NeynarNextFramePageRedirect) GetRedirectUrl() string {
	if o == nil || IsNil(o.RedirectUrl) {
		var ret string
		return ret
	}
	return *o.RedirectUrl
}

// GetRedirectUrlOk returns a tuple with the RedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NeynarNextFramePageRedirect) GetRedirectUrlOk() (*string, bool) {
	if o == nil || IsNil(o.RedirectUrl) {
		return nil, false
	}
	return o.RedirectUrl, true
}

// HasRedirectUrl returns a boolean if a field has been set.
func (o *NeynarNextFramePageRedirect) HasRedirectUrl() bool {
	if o != nil && !IsNil(o.RedirectUrl) {
		return true
	}

	return false
}

// SetRedirectUrl gets a reference to the given string and assigns it to the RedirectUrl field.
func (o *NeynarNextFramePageRedirect) SetRedirectUrl(v string) {
	o.RedirectUrl = &v
}

func (o NeynarNextFramePageRedirect) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NeynarNextFramePageRedirect) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RedirectUrl) {
		toSerialize["redirect_url"] = o.RedirectUrl
	}
	return toSerialize, nil
}

type NullableNeynarNextFramePageRedirect struct {
	value *NeynarNextFramePageRedirect
	isSet bool
}

func (v NullableNeynarNextFramePageRedirect) Get() *NeynarNextFramePageRedirect {
	return v.value
}

func (v *NullableNeynarNextFramePageRedirect) Set(val *NeynarNextFramePageRedirect) {
	v.value = val
	v.isSet = true
}

func (v NullableNeynarNextFramePageRedirect) IsSet() bool {
	return v.isSet
}

func (v *NullableNeynarNextFramePageRedirect) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNeynarNextFramePageRedirect(val *NeynarNextFramePageRedirect) *NullableNeynarNextFramePageRedirect {
	return &NullableNeynarNextFramePageRedirect{value: val, isSet: true}
}

func (v NullableNeynarNextFramePageRedirect) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNeynarNextFramePageRedirect) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


