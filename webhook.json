{
  "components": {
    "/farcaster/frame": {
      "get": {
        "tags": ["Frame"],
        "summary": "Retrieve a frame by UUID or URL",
        "description": "Retrieve a frame either by UUID or Neynar URL",
        "operationId": "lookup-neynar-frame",
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiKey"
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FrameType"
            }
          },
          {
            "name": "uuid",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "UUID of the frame to retrieve"
          },
          {
            "name": "url",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "URL of the Neynar frame to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "A frame object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NeynarFrame"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404Response"
          }
        }
      },
      "post": {
        "tags": ["Frame"],
        "summary": "Create a new frame",
        "description": "Create a new frame with a list of pages.",
        "operationId": "publish-neynar-frame",
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiKey"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NeynarFrameCreationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Frame created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NeynarFrame"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400Response"
          }
        }
      },
      "put": {
        "tags": ["Frame"],
        "summary": "Update an existing frame",
        "description": "Update an existing frame with a list of pages, if it was made by the developer (identified by API key)",
        "operationId": "update-neynar-frame",
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiKey"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NeynarFrameUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Frame updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NeynarFrame"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400Response"
          },
          "404": {
            "$ref": "#/components/responses/404Response"
          }
        }
      },
      "delete": {
        "tags": ["Frame"],
        "summary": "Delete a frame",
        "description": "Delete an existing frame, if it was made by the developer (identified by API key)",
        "operationId": "delete-neynar-frame",
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiKey"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Frame deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteFrameResponse"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404Response"
          }
        }
      }
    },
    "/farcaster/frame/list": {
      "get": {
        "tags": ["Frame"],
        "summary": "Retrieve a list of frames",
        "description": "Retrieve a list of frames made by the developer (identified by API key)",
        "operationId": "fetch-neynar-frames",
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of frames",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NeynarFrame"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404Response"
          }
        }
      }
    },
    "/farcaster/frame/developer_managed/action": {
      "post": {
        "tags": ["Frame"],
        "summary": "Posts a frame signature packet",
        "description": "Post a frame action that has been signed with a developer managed signer\n\nThe POST request to the post_url has a timeout of 5 seconds.\n",
        "externalDocs": {
          "url": "https://docs.neynar.com/reference/post-frame-developer-managed-action"
        },
        "operationId": "post-frame-developer-managed-action",
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiKey"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FrameDeveloperManagedActionReqBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Frame"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400Response"
          },
          "500": {
            "$ref": "#/components/responses/500Response"
          }
        }
      }
    },
    "/farcaster/frame/action": {
      "post": {
        "tags": ["Frame"],
        "summary": "Posts a frame action",
        "description": "Post a frame action \\\n(In order to post a frame action, you need to have an approved `signer_uuid`)\n\nThe POST request to the post_url has a timeout of 5 seconds.\n",
        "externalDocs": {
          "url": "https://docs.neynar.com/reference/post-frame-action"
        },
        "operationId": "post-frame-action",
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiKey"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FrameActionReqBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Frame"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400Response"
          },
          "500": {
            "$ref": "#/components/responses/500Response"
          }
        }
      }
    },
    "/farcaster/frame/validate": {
      "post": {
        "tags": ["Frame"],
        "summary": "Validates a frame action against Farcaster Hub",
        "description": "Validates a frame against by an interacting user against a Farcaster Hub \\\n(In order to validate a frame, message bytes from Frame Action must be provided in hex)\n",
        "externalDocs": {
          "url": "https://docs.neynar.com/reference/validate-frame"
        },
        "operationId": "validate-frame",
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiKey"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["message_bytes_in_hex"],
                "properties": {
                  "message_bytes_in_hex": {
                    "type": "string",
                    "description": "Hexadecimal string of message bytes."
                  },
                  "cast_reaction_context": {
                    "default": true,
                    "type": "boolean",
                    "description": "Adds viewer_context inside the cast object to indicate whether the interactor reacted to the cast housing the frame."
                  },
                  "follow_context": {
                    "default": false,
                    "type": "boolean",
                    "description": "Adds viewer_context inside the user (interactor) object to indicate whether the interactor follows or is followed by the cast author."
                  },
                  "signer_context": {
                    "default": false,
                    "type": "boolean",
                    "description": "Adds context about the app used by the user inside `frame.action`."
                  },
                  "channel_follow_context": {
                    "default": false,
                    "type": "boolean",
                    "description": "Adds context about the channel that the cast belongs to inside of the cast object."
                  }
                },
                "example": {
                  "message_bytes_in_hex": "0a49080d1085940118f6a6a32e20018201390a1a86db69b3ffdf6ab8acb6872b69ccbe7eb6a67af7ab71e95aa69f10021a1908ef011214237025b322fd03a9ddc7ec6c078fb9c56d1a72111214e3d88aeb2d0af356024e0c693f31c11b42c76b721801224043cb2f3fcbfb5dafce110e934b9369267cf3d1aef06f51ce653dc01700fc7b778522eb7873fd60dda4611376200076caf26d40a736d3919ce14e78a684e4d30b280132203a66717c82d728beb3511b05975c6603275c7f6a0600370bf637b9ecd2bd231e",
                  "cast_reaction_context": true,
                  "follow_context": false,
                  "signer_context": false,
                  "channel_follow_context": true
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateFrameActionResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400Response"
          },
          "500": {
            "$ref": "#/components/responses/500Response"
          }
        }
      }
    },
    "/farcaster/frame/validate/list": {
      "get": {
        "tags": ["Frame"],
        "summary": "Retrieve a list of all the frames validated by a user",
        "description": "Retrieve a list of all the frames validated by a user",
        "externalDocs": {
          "url": "https://docs.neynar.com/reference/validate-frame-list"
        },
        "operationId": "validate-frame-list",
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FrameValidateListResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Response"
          },
          "403": {
            "$ref": "#/components/responses/403Response"
          },
          "500": {
            "$ref": "#/components/responses/500Response"
          }
        }
      }
    },
    "/farcaster/frame/validate/analytics": {
      "get": {
        "tags": ["Frame"],
        "summary": "Retrieve analytics for the frame",
        "description": "Retrieve analytics for total-interactors, interactors, nteractions-per-cast and input-text.",
        "externalDocs": {
          "url": "https://docs.neynar.com/reference/validate-frame-analytics"
        },
        "operationId": "validate-frame-analytics",
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiKey"
          },
          {
            "name": "frame_url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uri"
            },
            "example": "https://shorturl.at/bDRY9"
          },
          {
            "name": "analytics_type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ValidateFrameAnalyticsType"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "default": "2024-04-06T06:44:56.811Z"
            }
          },
          {
            "name": "stop",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "default": "2024-04-08T06:44:56.811Z"
            }
          },
          {
            "name": "aggregate_window",
            "in": "query",
            "required": false,
            "description": "Required for `analytics_type=interactions-per-cast`",
            "schema": {
              "type": "string",
              "enum": [
                "10s",
                "1m",
                "2m",
                "5m",
                "10m",
                "20m",
                "30m",
                "2h",
                "12h",
                "1d",
                "7d"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FrameValidateAnalyticsResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400Response"
          },
          "401": {
            "$ref": "#/components/responses/401Response"
          },
          "403": {
            "$ref": "#/components/responses/403Response"
          },
          "500": {
            "$ref": "#/components/responses/500Response"
          }
        }
      }
    },
    "schemas": {
      "Frame": {
        "type": "object",
        "required": ["version", "image", "frames_url"],
        "properties": {
          "version": {
            "type": "string",
            "description": "Version of the frame"
          },
          "image": {
            "type": "string",
            "description": "URL of the image"
          },
          "buttons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FrameActionButton"
            }
          },
          "post_url": {
            "type": "string",
            "description": "Post URL to take an action on this frame"
          },
          "frames_url": {
            "type": "string",
            "description": "URL of the frames"
          },
          "title": {
            "type": "string"
          },
          "image_aspect_ratio": {
            "type": "string"
          },
          "input": {
            "type": "object",
            "properties": {
              "text": {
                "type": "string",
                "description": "Input text for the frame"
              }
            }
          },
          "state": {
            "type": "object",
            "properties": {
              "serialized": {
                "type": "string",
                "description": "State for the frame in a serialized format"
              }
            }
          }
        }
      },
      "FrameDeveloperManagedActionReqBody": {
        "type": "object",
        "required": ["cast_hash", "action", "signature_packet"],
        "properties": {
          "cast_hash": {
            "$ref": "#/components/schemas/CastHash"
          },
          "action": {
            "$ref": "#/components/schemas/FrameAction"
          },
          "signature_packet": {
            "$ref": "#/components/schemas/FrameSignaturePacket"
          }
        }
      },
      "FrameActionReqBody": {
        "type": "object",
        "required": ["signer_uuid", "cast_hash", "action"],
        "properties": {
          "signer_uuid": {
            "$ref": "#/components/schemas/SignerUUID"
          },
          "cast_hash": {
            "$ref": "#/components/schemas/CastHash"
          },
          "action": {
            "$ref": "#/components/schemas/FrameAction"
          }
        }
      },

      "Fid": {
        "type": "integer",
        "format": "int32",
        "description": "User identifier (unsigned integer)"
      },

      "FrameType": {
        "type": "string",
        "enum": ["uuid", "url"],
        "description": "Type of identifier (either 'uuid' or 'url')"
      },
      "FrameValidateListResponse": {
        "type": "object",
        "required": ["frames"],
        "properties": {
          "frames": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "FrameValidateAnalyticsInteractors": {
        "type": "object",
        "required": ["interactors"],
        "properties": {
          "interactors": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["fid", "username", "interaction_count"],
              "properties": {
                "fid": {
                  "$ref": "#/components/schemas/Fid"
                },
                "username": {
                  "type": "string"
                },
                "interaction_count": {
                  "type": "number"
                }
              }
            }
          }
        }
      },
      "FrameValidateAnalyticsTotalInteractors": {
        "type": "object",
        "required": ["total_interactors"],
        "properties": {
          "total_interactors": {
            "type": "number"
          }
        }
      },
      "FrameValidateAnalyticsInteractionsPerCast": {
        "type": "object",
        "required": ["interactions_per_cast"],
        "properties": {
          "interactions_per_cast": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "start",
                "stop",
                "time",
                "interaction_count",
                "cast_url"
              ],
              "properties": {
                "start": {
                  "type": "string",
                  "format": "date-time"
                },
                "stop": {
                  "type": "string",
                  "format": "date-time"
                },
                "time": {
                  "type": "string",
                  "format": "date-time"
                },
                "interaction_count": {
                  "type": "number"
                },
                "cast_url": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "FrameValidateAnalyticsInputText": {
        "type": "object",
        "required": ["input_texts"],
        "properties": {
          "input_texts": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["fid", "username", "input_text"],
              "properties": {
                "fid": {
                  "$ref": "#/components/schemas/Fid"
                },
                "username": {
                  "type": "string"
                },
                "input_text": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "FrameValidateAnalyticsResponse": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/FrameValidateAnalyticsInteractors"
          },
          {
            "$ref": "#/components/schemas/FrameValidateAnalyticsTotalInteractors"
          },
          {
            "$ref": "#/components/schemas/FrameValidateAnalyticsInteractionsPerCast"
          },
          {
            "$ref": "#/components/schemas/FrameValidateAnalyticsInputText"
          }
        ]
      },
      "ValidateFrameAnalyticsType": {
        "type": "string",
        "enum": [
          "total-interactors",
          "interactors",
          "interactions-per-cast",
          "input-text"
        ]
      },
      "SignerUUID": {
        "type": "string",
        "description": "UUID of the signer",
        "example": "19d0c5fd-9b33-4a48-a0e2-bc7b0555baec"
      },

      "DeleteFrameResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "NeynarFrame": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the frame."
          },
          "name": {
            "type": "string",
            "description": "Name of the frame."
          },
          "link": {
            "type": "string",
            "format": "uri",
            "description": "Generated link for the frame's first page."
          },
          "pages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NeynarFramePage"
            }
          },
          "valid": {
            "type": "boolean",
            "description": "Indicates if the frame is valid."
          }
        },
        "required": ["uuid", "name", "pages", "link"]
      },
      "NeynarFramePage": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the page."
          },
          "version": {
            "type": "string",
            "default": "vNext",
            "example": "vNext",
            "description": "The version of the page schema."
          },
          "title": {
            "type": "string",
            "example": "Welcome to Neynar",
            "description": "The title of the page."
          },
          "image": {
            "$ref": "#/components/schemas/NeynarPageImage"
          },
          "buttons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NeynarPageButton"
            }
          },
          "input": {
            "$ref": "#/components/schemas/NeynarPageInput"
          }
        },
        "required": ["uuid", "title", "version", "image"]
      },
      "NeynarPageImage": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://i.imgur.com/qo2AzBf.jpeg",
            "description": "The URL of the page's image."
          },
          "aspect_ratio": {
            "type": "string",
            "description": "The aspect ratio of the image.",
            "enum": ["1.91:1", "1:1"]
          }
        },
        "required": ["url", "aspect_ratio"]
      },
      "NeynarPageButton": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the button."
          },
          "index": {
            "type": "integer",
            "description": "The index of the button, first button should have index 1 and so on."
          },
          "action_type": {
            "type": "string",
            "description": "The type of action that the button performs.",
            "enum": ["post", "post_redirect", "mint", "link"]
          },
          "next_page": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NeynarNextFramePage"
              },
              {
                "$ref": "#/components/schemas/NeynarNextFramePageRedirect"
              },
              {
                "$ref": "#/components/schemas/NeynarNextFramePageMintUrl"
              }
            ]
          }
        },
        "required": ["title", "index", "action_type"]
      },

      "NeynarPageInput": {
        "type": "object",
        "properties": {
          "text": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "default": false,
                "description": "Indicates if text input is enabled."
              },
              "placeholder": {
                "type": "string",
                "description": "The placeholder text for the input."
              }
            },
            "required": ["enabled"]
          }
        }
      },
      "NeynarNextFramePage": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "The UUID of the next page."
          }
        },
        "required": ["uuid"]
      },
      "NeynarNextFramePageRedirect": {
        "type": "object",
        "properties": {
          "redirect_url": {
            "type": "string",
            "format": "uri",
            "description": "The URL to redirect to."
          }
        },
        "required": ["redirect_url"]
      },
      "NeynarNextFramePageMintUrl": {
        "type": "object",
        "properties": {
          "mint_url": {
            "type": "string",
            "description": "The URL for minting, specific to the mint action."
          }
        },
        "required": ["mint_url"]
      },
      "NeynarFrameCreationRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the frame."
          },
          "pages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NeynarFramePage"
            }
          }
        },
        "required": ["name", "pages"]
      },
      "NeynarFrameUpdateRequest": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "The UUID of the frame to update."
          },
          "name": {
            "type": "string",
            "description": "The name of the frame."
          },
          "pages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NeynarFramePage"
            }
          }
        },
        "required": ["uuid", "pages"]
      },
      "ValidatedFrameAction": {
        "type": "object",
        "required": [
          "cast",
          "interactor",
          "timestamp",
          "tapped_button",
          "url",
          "object",
          "state"
        ],
        "properties": {
          "object": {
            "type": "string",
            "enum": ["validated_frame_action"]
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "interactor": {
            "$ref": "#/components/schemas/User"
          },
          "tapped_button": {
            "type": "object",
            "required": ["index"],
            "properties": {
              "index": {
                "type": "integer"
              }
            }
          },
          "input": {
            "$ref": "#/components/schemas/FrameInput"
          },
          "state": {
            "$ref": "#/components/schemas/FrameState"
          },
          "cast": {
            "$ref": "#/components/schemas/CastWithInteractions"
          },
          "timestamp": {
            "$ref": "#/components/schemas/Timestamp"
          },
          "signer": {
            "type": "object",
            "properties": {
              "client": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "transaction": {
            "$ref": "#/components/schemas/FrameTransaction"
          },
          "address": {
            "$ref": "#/components/schemas/FrameAddress"
          }
        }
      },
      "ValidateFrameActionResponse": {
        "type": "object",
        "required": ["valid", "action"],
        "properties": {
          "valid": {
            "type": "boolean",
            "example": true
          },
          "action": {
            "$ref": "#/components/schemas/ValidatedFrameAction"
          }
        }
      }
    }
  }
}
