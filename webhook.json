{
  "components": {
    "/farcaster/signer/developer_managed": {
      "get": {
        "tags": ["Signer"],
        "summary": "Fetches the status of a signer by public key",
        "description": "Fetches the status of a developer managed signer by public key",
        "externalDocs": {
          "url": "https://docs.neynar.com/reference/developer-managed-signer"
        },
        "operationId": "developer-managed-signer",
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiKey"
          },
          {
            "name": "public_key",
            "required": true,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Ed25519PublicKey"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeveloperManagedSigner"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400Response"
          }
        }
      }
    },
    "/farcaster/signer/developer_managed/signed_key": {
      "post": {
        "tags": ["Signer"],
        "summary": "Registers Signed Key",
        "description": "Registers an signed key and returns the developer managed signer status with an approval url.",
        "externalDocs": {
          "url": "https://docs.neynar.com/reference/register-signed-key-for-developer-managed-signer"
        },
        "operationId": "register-signed-key-for-developer-managed-signer",
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiKey"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDeveloperManagedSignedKeyReqBody"
              },
              "example": {
                "app_fid": 18949,
                "deadline": 1693627665,
                "public_key": "0x3daa8f99c5f760688a3c9f95716ed93dee5ed5d7722d776b7c4deac957755f22",
                "signature": "0xe5d95c391e165dac8efea373efe301d3ea823e1f41713f8943713cbe2850566672e33ff3e17e19abb89703f650a2597f62b4fda0ce28ca15d59eb6d4e971ee531b"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeveloperManagedSigner"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400Response"
          },
          "500": {
            "$ref": "#/components/responses/500Response"
          }
        }
      }
    },
    "/farcaster/signer": {
      "get": {
        "tags": ["Signer"],
        "summary": "Fetches the status of a signer",
        "description": "Gets information status of a signer by passing in a signer_uuid (Use post API to generate a signer)",
        "externalDocs": {
          "url": "https://docs.neynar.com/reference/signer"
        },
        "operationId": "signer",
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiKey"
          },
          {
            "name": "signer_uuid",
            "required": true,
            "in": "query",
            "example": "19d0c5fd-9b33-4a48-a0e2-bc7b0555baec",
            "schema": {
              "$ref": "#/components/schemas/SignerUUID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Signer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400Response"
          },
          "403": {
            "$ref": "#/components/responses/403Response"
          },
          "404": {
            "$ref": "#/components/responses/404Response"
          },
          "500": {
            "$ref": "#/components/responses/500Response"
          }
        }
      },
      "post": {
        "tags": ["Signer"],
        "summary": "Creates a signer and returns the signer status",
        "description": "Creates a signer and returns the signer status. \\\n**Note**: While tesing please reuse the signer, it costs money to approve a signer.\n",
        "externalDocs": {
          "url": "https://docs.neynar.com/reference/create-signer"
        },
        "operationId": "create-signer",
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Signer"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500Response"
          }
        }
      }
    },
    "/farcaster/signer/signed_key": {
      "post": {
        "tags": ["Signer"],
        "summary": "Register Signed Key",
        "description": "Registers an app fid, deadline and a signature. Returns the signer status with an approval url.",
        "externalDocs": {
          "url": "https://docs.neynar.com/reference/register-signed-key"
        },
        "operationId": "register-signed-key",
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiKey"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterSignerKeyReqBody"
              },
              "example": {
                "signer_uuid": "19d0c5fd-9b33-4a48-a0e2-bc7b0555baec",
                "app_fid": 18949,
                "deadline": 1693627665,
                "signature": "0xe5d95c391e165dac8efea373efe301d3ea823e1f41713f8943713cbe2850566672e33ff3e17e19abb89703f650a2597f62b4fda0ce28ca15d59eb6d4e971ee531b"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Signer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400Response"
          },
          "403": {
            "$ref": "#/components/responses/403Response"
          },
          "404": {
            "$ref": "#/components/responses/404Response"
          },
          "500": {
            "$ref": "#/components/responses/500Response"
          }
        }
      }
    },
    "/farcaster/message": {
      "post": {
        "tags": ["Signer"],
        "summary": "Publish a message to farcaster",
        "description": "Publish a message to farcaster. The message must be signed by a signer managed by the developer. Use the @farcaster/core library to construct and sign the message. Use the Message.toJSON method on the signed message and pass the JSON in the body of this POST request.",
        "externalDocs": {
          "url": "https://docs.neynar.com/reference/publish-message"
        },
        "operationId": "publish-message",
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiKey"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublishMessageReqBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublishMessageResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400Response"
          },
          "500": {
            "$ref": "#/components/responses/500Response"
          }
        }
      }
    },
    "schemas": {
      "Idem": {
        "type": "string",
        "description": "Idempotency key"
      },
      "Fid": {
        "type": "integer",
        "format": "int32",
        "description": "User identifier (unsigned integer)"
      },
      "OperationResponse": {
        "type": "object",
        "required": ["success"],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "DeveloperManagedSigner": {
        "type": "object",
        "required": ["public_key", "status"],
        "properties": {
          "public_key": {
            "$ref": "#/components/schemas/Ed25519PublicKey"
          },
          "status": {
            "type": "string",
            "enum": ["pending_approval", "approved", "revoked"]
          },
          "signer_approval_url": {
            "type": "string"
          },
          "fid": {
            "$ref": "#/components/schemas/Fid"
          }
        }
      },
      "RegisterSignerKeyReqBody": {
        "type": "object",
        "required": ["signer_uuid", "signature", "app_fid", "deadline"],
        "properties": {
          "signer_uuid": {
            "$ref": "#/components/schemas/SignerUUID"
          },
          "signature": {
            "type": "string",
            "description": "Signature generated by the custody address of the app. Signed data includes app_fid, deadline, signer’s public key"
          },
          "app_fid": {
            "$ref": "#/components/schemas/Fid",
            "description": "Application FID"
          },
          "deadline": {
            "type": "integer",
            "description": "unix timestamp in seconds that controls how long the signed key request is valid for. (24 hours from now is recommended)"
          }
        }
      },
      "RegisterDeveloperManagedSignedKeyReqBody": {
        "type": "object",
        "required": ["public_key", "signature", "app_fid", "deadline"],
        "properties": {
          "public_key": {
            "$ref": "#/components/schemas/Ed25519PublicKey"
          },
          "signature": {
            "type": "string",
            "description": "Signature generated by the custody address of the app. Signed data includes app_fid, deadline, signer’s public key"
          },
          "app_fid": {
            "$ref": "#/components/schemas/Fid",
            "description": "Application FID"
          },
          "deadline": {
            "type": "integer",
            "description": "unix timestamp in seconds that controls how long the signed key request is valid for. (24 hours from now is recommended)"
          }
        }
      },
      "Ed25519PublicKey": {
        "type": "string",
        "pattern": "^0x[a-fA-F0-9]{64}$",
        "description": "Ed25519 public key",
        "example": "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
      },
      "SignerUUID": {
        "type": "string",
        "description": "UUID of the signer",
        "example": "19d0c5fd-9b33-4a48-a0e2-bc7b0555baec"
      },
      "Signer": {
        "type": "object",
        "required": ["signer_uuid", "public_key", "status"],
        "properties": {
          "signer_uuid": {
            "$ref": "#/components/schemas/SignerUUID"
          },
          "public_key": {
            "$ref": "#/components/schemas/Ed25519PublicKey"
          },
          "status": {
            "type": "string",
            "enum": ["generated", "pending_approval", "approved", "revoked"]
          },
          "signer_approval_url": {
            "type": "string"
          },
          "fid": {
            "$ref": "#/components/schemas/Fid"
          }
        }
      },
      "PublishMessageReqBody": {
        "type": "object"
      },
      "PublishMessageResponse": {
        "type": "object"
      }
    }
  }
}
