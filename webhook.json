{
  "/farcaster/storage/allocations": {
    "get": {
      "tags": ["Storage"],
      "summary": "Fetches storage allocations for a given user",
      "description": "Fetches storage allocations for a given user",
      "operationId": "storage-allocations",
      "externalDocs": {
        "url": "https://docs.neynar.com/reference/storage-allocations"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/ApiKey"
        },
        {
          "name": "fid",
          "in": "query",
          "required": true,
          "example": 3,
          "schema": {
            "$ref": "#/components/schemas/Fid"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "A list of storage allocations",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StorageAllocationsResponse"
              }
            }
          }
        },
        "400": {
          "$ref": "#/components/responses/400Response"
        }
      }
    }
  },
  "/farcaster/storage/usage": {
    "get": {
      "tags": ["Storage"],
      "summary": "Fetches storage usage for a given user",
      "description": "Fetches storage usage for a given user",
      "operationId": "storage-usage",
      "externalDocs": {
        "url": "https://docs.neynar.com/reference/storage-usage"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/ApiKey"
        },
        {
          "name": "fid",
          "in": "query",
          "required": true,
          "example": 3,
          "schema": {
            "$ref": "#/components/schemas/Fid"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Details of storage usage",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StorageUsageResponse"
              }
            }
          }
        },
        "400": {
          "$ref": "#/components/responses/400Response"
        }
      }
    }
  },
  "/farcaster/storage/buy": {
    "post": {
      "tags": ["Storage"],
      "summary": "Buy storage for an fid",
      "description": "This api will help you rent units of storage for an year for a specific fid.\nA storage unit lets you store 5000 casts, 2500 reactions and 2500 links.\n",
      "operationId": "buy-storage",
      "externalDocs": {
        "url": "https://docs.neynar.com/reference/buy-storage"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/ApiKey"
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BuyStorageReqBody"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StorageAllocationsResponse"
              }
            }
          }
        },
        "400": {
          "$ref": "#/components/responses/400ZodResponse"
        },
        "409": {
          "$ref": "#/components/responses/409Response"
        },
        "500": {
          "$ref": "#/components/responses/500Response"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BuyStorageReqBody": {
        "type": "object",
        "required": ["fid"],
        "properties": {
          "fid": {
            "type": "integer",
            "minimum": 1,
            "example": 1
          },
          "units": {
            "type": "integer",
            "description": "Number of storage units to buy.\nA storage unit lets you store 5000 casts, 2500 reactions and 2500 links.\n",
            "minimum": 1,
            "example": 1
          },
          "idem": {
            "$ref": "#/components/schemas/Idem"
          }
        }
      },
      "StorageAllocationsResponse": {
        "type": "object",
        "properties": {
          "total_active_units": {
            "type": "integer",
            "example": 13
          },
          "allocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StorageAllocation"
            }
          }
        }
      },
      "StorageAllocation": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "example": "storage_allocation"
          },
          "user": {
            "$ref": "#/components/schemas/UserDehydrated"
          },
          "units": {
            "type": "integer",
            "example": 10
          },
          "expiry": {
            "type": "string",
            "format": "date-time",
            "example": "2024-10-08T22:03:49.000Z"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2023-10-09T22:03:49.000Z"
          }
        }
      },
      "StorageUsageResponse": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "example": "storage_usage"
          },
          "user": {
            "$ref": "#/components/schemas/UserDehydrated"
          },
          "casts": {
            "$ref": "#/components/schemas/StorageObject"
          },
          "reactions": {
            "$ref": "#/components/schemas/StorageObject"
          },
          "links": {
            "$ref": "#/components/schemas/StorageObject"
          },
          "verified_addresses": {
            "$ref": "#/components/schemas/StorageObject"
          },
          "username_proofs": {
            "$ref": "#/components/schemas/StorageObject"
          },
          "signers": {
            "$ref": "#/components/schemas/StorageObject"
          },
          "total_active_units": {
            "type": "integer",
            "example": 2
          }
        }
      },
      "StorageObject": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "example": "storage"
          },
          "used": {
            "type": "integer",
            "example": 3659
          },
          "capacity": {
            "type": "integer",
            "example": 10000
          }
        }
      },
      "UserDehydrated": {
        "type": "object",
        "required": ["object", "fid"],
        "properties": {
          "object": {
            "type": "string",
            "enum": ["user_dehydrated"]
          },
          "fid": {
            "$ref": "#/components/schemas/Fid"
          }
        }
      },
      "Idem": {
        "type": "string",
        "description": "Idempotency key"
      },
      "Fid": {
        "type": "integer",
        "format": "int32",
        "description": "User identifier (unsigned integer)"
      }
    }
  }
}
